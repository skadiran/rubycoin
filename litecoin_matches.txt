Binary file ./libbitcoin_util_a-random.o matches
Binary file ./libbitcoin_cli.a matches
Binary file ./libbitcoin_server_a-miner.o matches
./util.cpp:const char * const BITCOIN_CONF_FILENAME = "litecoin.conf";
./util.cpp:const char * const BITCOIN_PID_FILENAME = "litecoin.pid";
./util.cpp:    const char* pszModule = "litecoin";
./util.cpp:    return GetSpecialFolderPath(CSIDL_APPDATA) / "Litecoin";
./util.cpp:    return pathRet / "Library/Application Support/Litecoin";
./util.cpp:    return pathRet / ".litecoin";
Binary file ./libbitcoin_common_a-base58.o matches
Binary file ./libbitcoin_server_a-blockencodings.o matches
./Makefile.test.include:TESTS += test/test_litecoin
./Makefile.test.include:bin_PROGRAMS += test/test_litecoin
./Makefile.test.include:noinst_PROGRAMS += test/test_litecoin_fuzzy
./Makefile.test.include:TEST_BINARY=test/test_litecoin$(EXEEXT)
./Makefile.test.include:test_test_litecoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
./Makefile.test.include:test_test_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
./Makefile.test.include:test_test_litecoin_LDADD =
./Makefile.test.include:test_test_litecoin_LDADD += $(LIBBITCOIN_WALLET)
./Makefile.test.include:test_test_litecoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
./Makefile.test.include:test_test_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.test.include:test_test_litecoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)
./Makefile.test.include:test_test_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
./Makefile.test.include:test_test_litecoin_LDADD += $(ZMQ_LIBS)
./Makefile.test.include:test_test_litecoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp
./Makefile.test.include:test_test_litecoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.test.include:test_test_litecoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.test.include:test_test_litecoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.test.include:test_test_litecoin_fuzzy_LDADD = \
./Makefile.test.include:test_test_litecoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)
./Makefile.test.include:nodist_test_test_litecoin_SOURCES = $(GENERATED_TEST_FILES)
Binary file ./libbitcoin_common_a-netbase.o matches
Binary file ./litecoin_tx-bitcoin-tx.o matches
Binary file ./libbitcoin_server_a-init.o matches
Binary file ./libbitcoin_util_a-utiltime.o matches
Binary file ./script/libbitcoinconsensus_la-script_error.o matches
Binary file ./script/libbitcoin_consensus_a-script.o matches
Binary file ./script/libbitcoinconsensus_la-script.o matches
Binary file ./script/libbitcoin_common_a-sign.o matches
Binary file ./script/.libs/libbitcoinconsensus_la-script_error.o matches
Binary file ./script/.libs/libbitcoinconsensus_la-script.o matches
Binary file ./script/.libs/libbitcoinconsensus_la-interpreter.o matches
Binary file ./script/.libs/libbitcoinconsensus_la-bitcoinconsensus.o matches
Binary file ./script/libbitcoin_consensus_a-bitcoinconsensus.o matches
Binary file ./script/libbitcoin_common_a-standard.o matches
Binary file ./script/libbitcoinconsensus_la-interpreter.o matches
Binary file ./script/libbitcoin_consensus_a-script_error.o matches
Binary file ./script/libbitcoin_server_a-ismine.o matches
Binary file ./script/libbitcoinconsensus_la-bitcoinconsensus.o matches
Binary file ./script/libbitcoin_consensus_a-interpreter.o matches
Binary file ./script/libbitcoin_server_a-sigcache.o matches
Binary file ./libbitcoinconsensus_la-hash.o matches
./bitcoin-tx-res.rc:            VALUE "CompanyName",        "Litecoin"
./bitcoin-tx-res.rc:            VALUE "FileDescription",    "litecoin-tx (CLI Litecoin transaction editor utility)"
./bitcoin-tx-res.rc:            VALUE "InternalName",       "litecoin-tx"
./bitcoin-tx-res.rc:            VALUE "OriginalFilename",   "litecoin-tx.exe"
./bitcoin-tx-res.rc:            VALUE "ProductName",        "litecoin-tx"
Binary file ./libbitcoin_server_a-addrdb.o matches
./.deps/litecoin_cli-bitcoin-cli.Po:litecoin_cli-bitcoin-cli.o: bitcoin-cli.cpp /usr/include/stdc-predef.h \
./.deps/litecoin_tx-bitcoin-tx.Po:litecoin_tx-bitcoin-tx.o: bitcoin-tx.cpp /usr/include/stdc-predef.h \
./.deps/litecoind-bitcoind.Po:litecoind-bitcoind.o: bitcoind.cpp /usr/include/stdc-predef.h \
./clientversion.cpp:const std::string CLIENT_NAME("LitecoinCore");
Binary file ./libbitcoin_util_a-clientversion.o matches
Binary file ./bench/bench_bench_litecoin-mempool_eviction.o matches
Binary file ./bench/bench_litecoin matches
./bench/.deps/bench_bench_litecoin-Examples.Po:bench/bench_bench_litecoin-Examples.o: bench/Examples.cpp \
./bench/.deps/bench_bench_litecoin-crypto_hash.Po:bench/bench_bench_litecoin-crypto_hash.o: bench/crypto_hash.cpp \
./bench/.deps/bench_bench_litecoin-perf.Po:bench/bench_bench_litecoin-perf.o: bench/perf.cpp \
./bench/.deps/bench_bench_litecoin-ccoins_caching.Po:bench/bench_bench_litecoin-ccoins_caching.o: bench/ccoins_caching.cpp \
./bench/.deps/bench_bench_litecoin-bench_bitcoin.Po:bench/bench_bench_litecoin-bench_bitcoin.o: bench/bench_bitcoin.cpp \
./bench/.deps/bench_bench_litecoin-verify_script.Po:bench/bench_bench_litecoin-verify_script.o: bench/verify_script.cpp \
./bench/.deps/bench_bench_litecoin-rollingbloom.Po:bench/bench_bench_litecoin-rollingbloom.o: bench/rollingbloom.cpp \
./bench/.deps/bench_bench_litecoin-base58.Po:bench/bench_bench_litecoin-base58.o: bench/base58.cpp \
./bench/.deps/bench_bench_litecoin-coin_selection.Po:bench/bench_bench_litecoin-coin_selection.o: bench/coin_selection.cpp \
./bench/.deps/bench_bench_litecoin-checkqueue.Po:bench/bench_bench_litecoin-checkqueue.o: bench/checkqueue.cpp \
./bench/.deps/bench_bench_litecoin-mempool_eviction.Po:bench/bench_bench_litecoin-mempool_eviction.o: bench/mempool_eviction.cpp \
./bench/.deps/bench_bench_litecoin-prevector_destructor.Po:bench/bench_bench_litecoin-prevector_destructor.o: \
./bench/.deps/bench_bench_litecoin-bench.Po:bench/bench_bench_litecoin-bench.o: bench/bench.cpp \
./bench/.deps/bench_bench_litecoin-lockedpool.Po:bench/bench_bench_litecoin-lockedpool.o: bench/lockedpool.cpp \
./bench/.deps/bench_bench_litecoin-checkblock.Po:bench/bench_bench_litecoin-checkblock.o: bench/checkblock.cpp \
Binary file ./bench/bench_bench_litecoin-checkblock.o matches
Binary file ./bench/bench_bench_litecoin-checkqueue.o matches
Binary file ./bench/bench_bench_litecoin-bench.o matches
Binary file ./bench/bench_bench_litecoin-coin_selection.o matches
Binary file ./bench/bench_bench_litecoin-bench_bitcoin.o matches
./bench/.gitignore:bench_litecoin
Binary file ./bench/bench_bench_litecoin-prevector_destructor.o matches
Binary file ./bench/bench_bench_litecoin-Examples.o matches
Binary file ./bench/bench_bench_litecoin-perf.o matches
Binary file ./bench/bench_bench_litecoin-lockedpool.o matches
Binary file ./bench/bench_bench_litecoin-verify_script.o matches
Binary file ./bench/bench_bench_litecoin-base58.o matches
Binary file ./bench/bench_bench_litecoin-ccoins_caching.o matches
Binary file ./bench/bench_bench_litecoin-crypto_hash.o matches
Binary file ./bench/bench_bench_litecoin-rollingbloom.o matches
./bench/checkblock.cpp:// Litecoin uses block height 878439, hash 0babe680f55a55d54339511226755f0837261da89a4e78eba4d6436a63026df8
Binary file ./libbitcoin_server_a-dbwrapper.o matches
Binary file ./libbitcoin_server_a-torcontrol.o matches
Binary file ./libbitcoin_server_a-net_processing.o matches
Binary file ./libbitcoin_common_a-scheduler.o matches
Binary file ./libbitcoin_common_a-protocol.o matches
Binary file ./libbitcoin_common_a-warnings.o matches
./bitcoin-cli.cpp:                  "  litecoin-cli [options] <command> [params]  " + strprintf(_("Send command to %s"), _(PACKAGE_NAME)) + "\n" +
./bitcoin-cli.cpp:                  "  litecoin-cli [options] -named <command> [name=value] ... " + strprintf(_("Send command to %s (with named arguments)"), _(PACKAGE_NAME)) + "\n" +
./bitcoin-cli.cpp:                  "  litecoin-cli [options] help                " + _("List commands") + "\n" +
./bitcoin-cli.cpp:                  "  litecoin-cli [options] help <command>      " + _("Get help for a command") + "\n";
./Makefile.qttest.include:bin_PROGRAMS += qt/test/test_litecoin-qt
./Makefile.qttest.include:TESTS += qt/test/test_litecoin-qt
./Makefile.qttest.include:qt_test_test_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile.qttest.include:qt_test_test_litecoin_qt_SOURCES = \
./Makefile.qttest.include:qt_test_test_litecoin_qt_SOURCES += \
./Makefile.qttest.include:nodist_qt_test_test_litecoin_qt_SOURCES = $(TEST_QT_MOC_CPP)
./Makefile.qttest.include:qt_test_test_litecoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)
./Makefile.qttest.include:qt_test_test_litecoin_qt_LDADD += $(LIBBITCOIN_WALLET)
./Makefile.qttest.include:qt_test_test_litecoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
./Makefile.qttest.include:qt_test_test_litecoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \
./Makefile.qttest.include:qt_test_test_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.qttest.include:qt_test_test_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile.qttest.include:test_bitcoin_qt : qt/test/test_litecoin-qt$(EXEEXT)
./Makefile.qttest.include:test_bitcoin_qt_check : qt/test/test_litecoin-qt$(EXEEXT) FORCE
Binary file ./libbitcoin_server_a-bloom.o matches
Binary file ./libbitcoin_util_a-utilstrencodings.o matches
Binary file ./libbitcoin_server_a-timedata.o matches
Binary file ./libbitcoin_common_a-key.o matches
Binary file ./libbitcoin_common.a matches
./Makefile.in:@BUILD_BITCOIND_TRUE@am__append_1 = litecoind
./Makefile.in:@BUILD_BITCOIN_UTILS_TRUE@am__append_2 = litecoin-cli litecoin-tx
./Makefile.in:@ENABLE_TESTS_TRUE@am__append_19 = test/test_litecoin
./Makefile.in:@ENABLE_TESTS_TRUE@am__append_20 = test/test_litecoin
./Makefile.in:@ENABLE_TESTS_TRUE@am__append_21 = test/test_litecoin_fuzzy
./Makefile.in:@ENABLE_BENCH_TRUE@am__append_26 = bench/bench_litecoin
./Makefile.in:@ENABLE_QT_TRUE@am__append_31 = qt/litecoin-qt
./Makefile.in:@ENABLE_QT_TESTS_TRUE@am__append_40 = qt/test/test_litecoin-qt
./Makefile.in:@ENABLE_QT_TESTS_TRUE@am__append_41 = qt/test/test_litecoin-qt
./Makefile.in:	qt/res/icons/litecoin_splash.png qt/res/icons/lock_closed.png \
./Makefile.in:@BUILD_BITCOIND_TRUE@am__EXEEXT_1 = litecoind$(EXEEXT)
./Makefile.in:@BUILD_BITCOIN_UTILS_TRUE@am__EXEEXT_2 = litecoin-cli$(EXEEXT) \
./Makefile.in:@BUILD_BITCOIN_UTILS_TRUE@	litecoin-tx$(EXEEXT)
./Makefile.in:@ENABLE_TESTS_TRUE@am__EXEEXT_3 = test/test_litecoin$(EXEEXT)
./Makefile.in:@ENABLE_BENCH_TRUE@am__EXEEXT_4 = bench/bench_litecoin$(EXEEXT)
./Makefile.in:@ENABLE_QT_TRUE@am__EXEEXT_5 = qt/litecoin-qt$(EXEEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/test_litecoin-qt$(EXEEXT)
./Makefile.in:@ENABLE_TESTS_TRUE@am__EXEEXT_7 = test/test_litecoin_fuzzy$(EXEEXT)
./Makefile.in:am__bench_bench_litecoin_SOURCES_DIST = bench/bench_bitcoin.cpp \
./Makefile.in:@ENABLE_BENCH_TRUE@@ENABLE_WALLET_TRUE@am__objects_20 = bench/bench_bench_litecoin-coin_selection.$(OBJEXT)
./Makefile.in:@ENABLE_BENCH_TRUE@am_bench_bench_litecoin_OBJECTS = bench/bench_bench_litecoin-bench_bitcoin.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-bench.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-checkblock.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-checkqueue.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-Examples.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-rollingbloom.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-crypto_hash.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-ccoins_caching.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-mempool_eviction.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-verify_script.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-base58.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-lockedpool.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-perf.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@	bench/bench_bench_litecoin-prevector_destructor.$(OBJEXT) \
./Makefile.in:@ENABLE_BENCH_TRUE@nodist_bench_bench_litecoin_OBJECTS =  \
./Makefile.in:bench_bench_litecoin_OBJECTS = $(am_bench_bench_litecoin_OBJECTS) \
./Makefile.in:	$(nodist_bench_bench_litecoin_OBJECTS)
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_DEPENDENCIES =  \
./Makefile.in:bench_bench_litecoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile.in:	$(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) \
./Makefile.in:	$(bench_bench_litecoin_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__litecoin_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
./Makefile.in:am_litecoin_cli_OBJECTS = litecoin_cli-bitcoin-cli.$(OBJEXT) \
./Makefile.in:litecoin_cli_OBJECTS = $(am_litecoin_cli_OBJECTS)
./Makefile.in:litecoin_cli_DEPENDENCIES = $(LIBBITCOIN_CLI) $(am__DEPENDENCIES_4) \
./Makefile.in:litecoin_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoin_cli_CXXFLAGS) \
./Makefile.in:	$(CXXFLAGS) $(litecoin_cli_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__litecoin_tx_SOURCES_DIST = bitcoin-tx.cpp bitcoin-tx-res.rc
./Makefile.in:am_litecoin_tx_OBJECTS = litecoin_tx-bitcoin-tx.$(OBJEXT) \
./Makefile.in:litecoin_tx_OBJECTS = $(am_litecoin_tx_OBJECTS)
./Makefile.in:litecoin_tx_DEPENDENCIES = $(am__DEPENDENCIES_4) $(LIBBITCOIN_COMMON) \
./Makefile.in:litecoin_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoin_tx_CXXFLAGS) \
./Makefile.in:	$(CXXFLAGS) $(litecoin_tx_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__litecoind_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
./Makefile.in:am_litecoind_OBJECTS = litecoind-bitcoind.$(OBJEXT) $(am__objects_24)
./Makefile.in:litecoind_OBJECTS = $(am_litecoind_OBJECTS)
./Makefile.in:litecoind_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
./Makefile.in:litecoind_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoind_CXXFLAGS) \
./Makefile.in:	$(CXXFLAGS) $(litecoind_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__qt_litecoin_qt_SOURCES_DIST = qt/bitcoin.cpp \
./Makefile.in:@ENABLE_QT_TRUE@am__objects_25 = qt/qt_litecoin_qt-macdockiconhandler.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TRUE@	qt/qt_litecoin_qt-macnotificationhandler.$(OBJEXT)
./Makefile.in:@ENABLE_QT_TRUE@am_qt_litecoin_qt_OBJECTS =  \
./Makefile.in:@ENABLE_QT_TRUE@	qt/qt_litecoin_qt-bitcoin.$(OBJEXT) \
./Makefile.in:qt_litecoin_qt_OBJECTS = $(am_qt_litecoin_qt_OBJECTS)
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_DEPENDENCIES = qt/libbitcoinqt.a \
./Makefile.in:qt_litecoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) \
./Makefile.in:	$(qt_litecoin_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
./Makefile.in:	$(qt_litecoin_qt_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__qt_test_test_litecoin_qt_SOURCES_DIST = qt/test/compattests.cpp \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@am__objects_29 = test/qt_test_test_litecoin_qt-test_bitcoin.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	test/qt_test_test_litecoin_qt-testutil.$(OBJEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@@ENABLE_WALLET_TRUE@am__objects_30 = qt/test/qt_test_test_litecoin_qt-paymentservertests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@@ENABLE_WALLET_TRUE@	qt/test/qt_test_test_litecoin_qt-wallettests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@@ENABLE_WALLET_TRUE@	wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.$(OBJEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@am_qt_test_test_litecoin_qt_OBJECTS = qt/test/qt_test_test_litecoin_qt-compattests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/qt_test_test_litecoin_qt-rpcnestedtests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/qt_test_test_litecoin_qt-test_main.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/qt_test_test_litecoin_qt-uritests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@@ENABLE_WALLET_TRUE@am__objects_31 = qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@@ENABLE_WALLET_TRUE@	qt/test/qt_test_test_litecoin_qt-moc_wallettests.$(OBJEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@am__objects_32 = qt/test/qt_test_test_litecoin_qt-moc_compattests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@	qt/test/qt_test_test_litecoin_qt-moc_uritests.$(OBJEXT) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@nodist_qt_test_test_litecoin_qt_OBJECTS =  \
./Makefile.in:qt_test_test_litecoin_qt_OBJECTS =  \
./Makefile.in:	$(am_qt_test_test_litecoin_qt_OBJECTS) \
./Makefile.in:	$(nodist_qt_test_test_litecoin_qt_OBJECTS)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_DEPENDENCIES =  \
./Makefile.in:qt_test_test_litecoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile.in:	$(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) \
./Makefile.in:	$(qt_test_test_litecoin_qt_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__test_test_litecoin_SOURCES_DIST = test/arith_uint256_tests.cpp \
./Makefile.in:@ENABLE_TESTS_TRUE@@ENABLE_WALLET_TRUE@am__objects_33 = wallet/test/test_test_litecoin-wallet_test_fixture.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@@ENABLE_WALLET_TRUE@	wallet/test/test_test_litecoin-accounting_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@@ENABLE_WALLET_TRUE@	wallet/test/test_test_litecoin-wallet_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@@ENABLE_WALLET_TRUE@	wallet/test/test_test_litecoin-crypto_tests.$(OBJEXT)
./Makefile.in:@ENABLE_TESTS_TRUE@am__objects_34 = test/test_test_litecoin-arith_uint256_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-addrman_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-amount_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-allocator_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-base32_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-base58_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-base64_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-bip32_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-bloom_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-bswap_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-checkqueue_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-coins_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-compress_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-crypto_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-cuckoocache_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-DoS_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-getarg_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-hash_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-key_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-limitedmap_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-dbwrapper_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-main_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-mempool_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-merkle_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-miner_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-multisig_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-net_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-netbase_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-pmt_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-policyestimator_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-pow_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-prevector_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-raii_event_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-random_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-reverselock_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-rpc_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-sanity_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-scheduler_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-script_P2SH_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-script_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-scriptnum_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-scrypt_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-serialize_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-sighash_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-sigopcount_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-skiplist_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-streams_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-test_bitcoin.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-test_bitcoin_main.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-testutil.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-timedata_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-torcontrol_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-transaction_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-txvalidationcache_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-versionbits_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-uint256_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-univalue_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@	test/test_test_litecoin-util_tests.$(OBJEXT) \
./Makefile.in:@ENABLE_TESTS_TRUE@am_test_test_litecoin_OBJECTS = $(am__objects_34) \
./Makefile.in:@ENABLE_TESTS_TRUE@nodist_test_test_litecoin_OBJECTS =  \
./Makefile.in:test_test_litecoin_OBJECTS = $(am_test_test_litecoin_OBJECTS) \
./Makefile.in:	$(nodist_test_test_litecoin_OBJECTS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_DEPENDENCIES = $(am__append_23) \
./Makefile.in:test_test_litecoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile.in:	$(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) \
./Makefile.in:	$(test_test_litecoin_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:am__test_test_litecoin_fuzzy_SOURCES_DIST =  \
./Makefile.in:@ENABLE_TESTS_TRUE@am_test_test_litecoin_fuzzy_OBJECTS = test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT)
./Makefile.in:test_test_litecoin_fuzzy_OBJECTS =  \
./Makefile.in:	$(am_test_test_litecoin_fuzzy_OBJECTS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_DEPENDENCIES =  \
./Makefile.in:test_test_litecoin_fuzzy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile.in:	$(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) \
./Makefile.in:	$(test_test_litecoin_fuzzy_LDFLAGS) $(LDFLAGS) -o $@
./Makefile.in:	$(bench_bench_litecoin_SOURCES) \
./Makefile.in:	$(nodist_bench_bench_litecoin_SOURCES) $(litecoin_cli_SOURCES) \
./Makefile.in:	$(litecoin_tx_SOURCES) $(litecoind_SOURCES) \
./Makefile.in:	$(qt_litecoin_qt_SOURCES) $(qt_test_test_litecoin_qt_SOURCES) \
./Makefile.in:	$(nodist_qt_test_test_litecoin_qt_SOURCES) \
./Makefile.in:	$(test_test_litecoin_SOURCES) \
./Makefile.in:	$(nodist_test_test_litecoin_SOURCES) \
./Makefile.in:	$(test_test_litecoin_fuzzy_SOURCES)
./Makefile.in:	$(am__bench_bench_litecoin_SOURCES_DIST) \
./Makefile.in:	$(am__litecoin_cli_SOURCES_DIST) \
./Makefile.in:	$(am__litecoin_tx_SOURCES_DIST) $(am__litecoind_SOURCES_DIST) \
./Makefile.in:	$(am__qt_litecoin_qt_SOURCES_DIST) \
./Makefile.in:	$(am__qt_test_test_litecoin_qt_SOURCES_DIST) \
./Makefile.in:	$(am__test_test_litecoin_SOURCES_DIST) \
./Makefile.in:	$(am__test_test_litecoin_fuzzy_SOURCES_DIST)
./Makefile.in:litecoind_SOURCES = bitcoind.cpp $(am__append_5)
./Makefile.in:litecoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.in:litecoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:litecoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:litecoind_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
./Makefile.in:litecoin_cli_SOURCES = bitcoin-cli.cpp $(am__append_6)
./Makefile.in:litecoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
./Makefile.in:litecoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:litecoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:litecoin_cli_LDADD = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
./Makefile.in:litecoin_tx_SOURCES = bitcoin-tx.cpp $(am__append_7)
./Makefile.in:litecoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.in:litecoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:litecoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:litecoin_tx_LDADD = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
./Makefile.in:@ENABLE_TESTS_TRUE@TEST_BINARY = test/test_litecoin$(EXEEXT)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_LDADD = $(am__append_23) \
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:@ENABLE_TESTS_TRUE@test_test_litecoin_fuzzy_LDADD = $(LIBUNIVALUE) \
./Makefile.in:@ENABLE_TESTS_TRUE@nodist_test_test_litecoin_SOURCES = $(GENERATED_TEST_FILES)
./Makefile.in:@ENABLE_BENCH_TRUE@BENCH_BINARY = bench/bench_litecoin$(EXEEXT)
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_SOURCES =  \
./Makefile.in:@ENABLE_BENCH_TRUE@nodist_bench_bench_litecoin_SOURCES = $(GENERATED_TEST_FILES)
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_LDADD = $(LIBBITCOIN_SERVER) \
./Makefile.in:@ENABLE_BENCH_TRUE@bench_bench_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:@ENABLE_QT_TRUE@  qt/res/icons/litecoin_splash.png \
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_SOURCES = qt/bitcoin.cpp \
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_LDADD = qt/libbitcoinqt.a \
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:@ENABLE_QT_TRUE@qt_litecoin_qt_LIBTOOLFLAGS = --tag CXX
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_SOURCES =  \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@nodist_qt_test_test_litecoin_qt_SOURCES = $(TEST_QT_MOC_CPP)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_LDADD =  \
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@qt_test_test_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile.in:bench/bench_bench_litecoin-bench_bitcoin.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-bench.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile.in:bench/bench_bench_litecoin-checkblock.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-checkqueue.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-Examples.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile.in:bench/bench_bench_litecoin-rollingbloom.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-crypto_hash.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-ccoins_caching.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-mempool_eviction.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-verify_script.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-base58.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile.in:bench/bench_bench_litecoin-lockedpool.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-perf.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile.in:bench/bench_bench_litecoin-prevector_destructor.$(OBJEXT):  \
./Makefile.in:bench/bench_bench_litecoin-coin_selection.$(OBJEXT):  \
./Makefile.in:bench/bench_litecoin$(EXEEXT): $(bench_bench_litecoin_OBJECTS) $(bench_bench_litecoin_DEPENDENCIES) $(EXTRA_bench_bench_litecoin_DEPENDENCIES) bench/$(am__dirstamp)
./Makefile.in:	@rm -f bench/bench_litecoin$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(bench_bench_litecoin_LINK) $(bench_bench_litecoin_OBJECTS) $(bench_bench_litecoin_LDADD) $(LIBS)
./Makefile.in:litecoin-cli$(EXEEXT): $(litecoin_cli_OBJECTS) $(litecoin_cli_DEPENDENCIES) $(EXTRA_litecoin_cli_DEPENDENCIES) 
./Makefile.in:	@rm -f litecoin-cli$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(litecoin_cli_LINK) $(litecoin_cli_OBJECTS) $(litecoin_cli_LDADD) $(LIBS)
./Makefile.in:litecoin-tx$(EXEEXT): $(litecoin_tx_OBJECTS) $(litecoin_tx_DEPENDENCIES) $(EXTRA_litecoin_tx_DEPENDENCIES) 
./Makefile.in:	@rm -f litecoin-tx$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(litecoin_tx_LINK) $(litecoin_tx_OBJECTS) $(litecoin_tx_LDADD) $(LIBS)
./Makefile.in:litecoind$(EXEEXT): $(litecoind_OBJECTS) $(litecoind_DEPENDENCIES) $(EXTRA_litecoind_DEPENDENCIES) 
./Makefile.in:	@rm -f litecoind$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(litecoind_LINK) $(litecoind_OBJECTS) $(litecoind_LDADD) $(LIBS)
./Makefile.in:qt/qt_litecoin_qt-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
./Makefile.in:qt/qt_litecoin_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
./Makefile.in:qt/qt_litecoin_qt-macnotificationhandler.$(OBJEXT):  \
./Makefile.in:qt/litecoin-qt$(EXEEXT): $(qt_litecoin_qt_OBJECTS) $(qt_litecoin_qt_DEPENDENCIES) $(EXTRA_qt_litecoin_qt_DEPENDENCIES) qt/$(am__dirstamp)
./Makefile.in:	@rm -f qt/litecoin-qt$(EXEEXT)
./Makefile.in:	$(AM_V_OBJCXXLD)$(qt_litecoin_qt_LINK) $(qt_litecoin_qt_OBJECTS) $(qt_litecoin_qt_LDADD) $(LIBS)
./Makefile.in:qt/test/qt_test_test_litecoin_qt-compattests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-test_main.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-uritests.$(OBJEXT):  \
./Makefile.in:test/qt_test_test_litecoin_qt-test_bitcoin.$(OBJEXT):  \
./Makefile.in:test/qt_test_test_litecoin_qt-testutil.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-paymentservertests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-wallettests.$(OBJEXT):  \
./Makefile.in:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_compattests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_uritests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.$(OBJEXT):  \
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_wallettests.$(OBJEXT):  \
./Makefile.in:qt/test/test_litecoin-qt$(EXEEXT): $(qt_test_test_litecoin_qt_OBJECTS) $(qt_test_test_litecoin_qt_DEPENDENCIES) $(EXTRA_qt_test_test_litecoin_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
./Makefile.in:	@rm -f qt/test/test_litecoin-qt$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(qt_test_test_litecoin_qt_LINK) $(qt_test_test_litecoin_qt_OBJECTS) $(qt_test_test_litecoin_qt_LDADD) $(LIBS)
./Makefile.in:test/test_test_litecoin-arith_uint256_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-addrman_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-amount_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-allocator_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-checkqueue_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-compress_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-cuckoocache_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-DoS_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-limitedmap_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-dbwrapper_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-main_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-mempool_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-merkle_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-multisig_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-net_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-policyestimator_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-prevector_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-raii_event_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-random_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-reverselock_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-scheduler_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-script_P2SH_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-script_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-scriptnum_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-scrypt_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-serialize_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-sighash_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-sigopcount_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-skiplist_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-streams_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-test_bitcoin_main.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-testutil.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-timedata_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-torcontrol_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-transaction_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-txvalidationcache_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-versionbits_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:test/test_test_litecoin-univalue_tests.$(OBJEXT):  \
./Makefile.in:test/test_test_litecoin-util_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile.in:wallet/test/test_test_litecoin-wallet_test_fixture.$(OBJEXT):  \
./Makefile.in:wallet/test/test_test_litecoin-accounting_tests.$(OBJEXT):  \
./Makefile.in:wallet/test/test_test_litecoin-wallet_tests.$(OBJEXT):  \
./Makefile.in:wallet/test/test_test_litecoin-crypto_tests.$(OBJEXT):  \
./Makefile.in:test/test_litecoin$(EXEEXT): $(test_test_litecoin_OBJECTS) $(test_test_litecoin_DEPENDENCIES) $(EXTRA_test_test_litecoin_DEPENDENCIES) test/$(am__dirstamp)
./Makefile.in:	@rm -f test/test_litecoin$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(test_test_litecoin_LINK) $(test_test_litecoin_OBJECTS) $(test_test_litecoin_LDADD) $(LIBS)
./Makefile.in:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT):  \
./Makefile.in:test/test_litecoin_fuzzy$(EXEEXT): $(test_test_litecoin_fuzzy_OBJECTS) $(test_test_litecoin_fuzzy_DEPENDENCIES) $(EXTRA_test_test_litecoin_fuzzy_DEPENDENCIES) test/$(am__dirstamp)
./Makefile.in:	@rm -f test/test_litecoin_fuzzy$(EXEEXT)
./Makefile.in:	$(AM_V_CXXLD)$(test_test_litecoin_fuzzy_LINK) $(test_test_litecoin_fuzzy_OBJECTS) $(test_test_litecoin_fuzzy_LDADD) $(LIBS)
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/litecoin_cli-bitcoin-cli.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/litecoin_tx-bitcoin-tx.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/litecoind-bitcoind.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-base58.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-bench.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-perf.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-amount_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-base32_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-base58_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-base64_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-coins_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-compress_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-hash_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-key_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-main_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-miner_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-net_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-pow_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-random_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-script_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-streams_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-testutil.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-util_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po@am__quote@
./Makefile.in:bench/bench_bench_litecoin-bench_bitcoin.o: bench/bench_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench_bitcoin.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo -c -o bench/bench_bench_litecoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_litecoin-bench_bitcoin.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
./Makefile.in:bench/bench_bench_litecoin-bench_bitcoin.obj: bench/bench_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench_bitcoin.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo -c -o bench/bench_bench_litecoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_litecoin-bench_bitcoin.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-bench.o: bench/bench.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo -c -o bench/bench_bench_litecoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_litecoin-bench.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
./Makefile.in:bench/bench_bench_litecoin-bench.obj: bench/bench.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo -c -o bench/bench_bench_litecoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_litecoin-bench.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-checkblock.o: bench/checkblock.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo -c -o bench/bench_bench_litecoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_litecoin-checkblock.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
./Makefile.in:bench/bench_bench_litecoin-checkblock.obj: bench/checkblock.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo -c -o bench/bench_bench_litecoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_litecoin-checkblock.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-checkqueue.o: bench/checkqueue.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo -c -o bench/bench_bench_litecoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_litecoin-checkqueue.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
./Makefile.in:bench/bench_bench_litecoin-checkqueue.obj: bench/checkqueue.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo -c -o bench/bench_bench_litecoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_litecoin-checkqueue.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-Examples.o: bench/Examples.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-Examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo -c -o bench/bench_bench_litecoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_litecoin-Examples.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
./Makefile.in:bench/bench_bench_litecoin-Examples.obj: bench/Examples.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-Examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo -c -o bench/bench_bench_litecoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_litecoin-Examples.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-rollingbloom.o: bench/rollingbloom.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo -c -o bench/bench_bench_litecoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_litecoin-rollingbloom.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
./Makefile.in:bench/bench_bench_litecoin-rollingbloom.obj: bench/rollingbloom.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo -c -o bench/bench_bench_litecoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_litecoin-rollingbloom.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-crypto_hash.o: bench/crypto_hash.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo -c -o bench/bench_bench_litecoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_litecoin-crypto_hash.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
./Makefile.in:bench/bench_bench_litecoin-crypto_hash.obj: bench/crypto_hash.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo -c -o bench/bench_bench_litecoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_litecoin-crypto_hash.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-ccoins_caching.o: bench/ccoins_caching.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo -c -o bench/bench_bench_litecoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_litecoin-ccoins_caching.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
./Makefile.in:bench/bench_bench_litecoin-ccoins_caching.obj: bench/ccoins_caching.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo -c -o bench/bench_bench_litecoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_litecoin-ccoins_caching.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-mempool_eviction.o: bench/mempool_eviction.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo -c -o bench/bench_bench_litecoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_litecoin-mempool_eviction.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
./Makefile.in:bench/bench_bench_litecoin-mempool_eviction.obj: bench/mempool_eviction.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo -c -o bench/bench_bench_litecoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_litecoin-mempool_eviction.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-verify_script.o: bench/verify_script.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo -c -o bench/bench_bench_litecoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_litecoin-verify_script.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
./Makefile.in:bench/bench_bench_litecoin-verify_script.obj: bench/verify_script.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo -c -o bench/bench_bench_litecoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_litecoin-verify_script.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-base58.o: bench/base58.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo -c -o bench/bench_bench_litecoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo bench/$(DEPDIR)/bench_bench_litecoin-base58.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_litecoin-base58.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
./Makefile.in:bench/bench_bench_litecoin-base58.obj: bench/base58.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo -c -o bench/bench_bench_litecoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo bench/$(DEPDIR)/bench_bench_litecoin-base58.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_litecoin-base58.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-lockedpool.o: bench/lockedpool.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo -c -o bench/bench_bench_litecoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_litecoin-lockedpool.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
./Makefile.in:bench/bench_bench_litecoin-lockedpool.obj: bench/lockedpool.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo -c -o bench/bench_bench_litecoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_litecoin-lockedpool.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-perf.o: bench/perf.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-perf.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo -c -o bench/bench_bench_litecoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo bench/$(DEPDIR)/bench_bench_litecoin-perf.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_litecoin-perf.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
./Makefile.in:bench/bench_bench_litecoin-perf.obj: bench/perf.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-perf.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo -c -o bench/bench_bench_litecoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo bench/$(DEPDIR)/bench_bench_litecoin-perf.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_litecoin-perf.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-prevector_destructor.o: bench/prevector_destructor.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-prevector_destructor.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo -c -o bench/bench_bench_litecoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_litecoin-prevector_destructor.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp
./Makefile.in:bench/bench_bench_litecoin-prevector_destructor.obj: bench/prevector_destructor.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-prevector_destructor.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo -c -o bench/bench_bench_litecoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_litecoin-prevector_destructor.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`
./Makefile.in:bench/bench_bench_litecoin-coin_selection.o: bench/coin_selection.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo -c -o bench/bench_bench_litecoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_litecoin-coin_selection.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
./Makefile.in:bench/bench_bench_litecoin-coin_selection.obj: bench/coin_selection.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo -c -o bench/bench_bench_litecoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_litecoin-coin_selection.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
./Makefile.in:litecoin_cli-bitcoin-cli.o: bitcoin-cli.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -MT litecoin_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo -c -o litecoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo $(DEPDIR)/litecoin_cli-bitcoin-cli.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-cli.cpp' object='litecoin_cli-bitcoin-cli.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
./Makefile.in:litecoin_cli-bitcoin-cli.obj: bitcoin-cli.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -MT litecoin_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo -c -o litecoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo $(DEPDIR)/litecoin_cli-bitcoin-cli.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-cli.cpp' object='litecoin_cli-bitcoin-cli.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
./Makefile.in:litecoin_tx-bitcoin-tx.o: bitcoin-tx.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -MT litecoin_tx-bitcoin-tx.o -MD -MP -MF $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo -c -o litecoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo $(DEPDIR)/litecoin_tx-bitcoin-tx.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-tx.cpp' object='litecoin_tx-bitcoin-tx.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
./Makefile.in:litecoin_tx-bitcoin-tx.obj: bitcoin-tx.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -MT litecoin_tx-bitcoin-tx.obj -MD -MP -MF $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo -c -o litecoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo $(DEPDIR)/litecoin_tx-bitcoin-tx.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-tx.cpp' object='litecoin_tx-bitcoin-tx.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
./Makefile.in:litecoind-bitcoind.o: bitcoind.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -MT litecoind-bitcoind.o -MD -MP -MF $(DEPDIR)/litecoind-bitcoind.Tpo -c -o litecoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoind-bitcoind.Tpo $(DEPDIR)/litecoind-bitcoind.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoind.cpp' object='litecoind-bitcoind.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -c -o litecoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
./Makefile.in:litecoind-bitcoind.obj: bitcoind.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -MT litecoind-bitcoind.obj -MD -MP -MF $(DEPDIR)/litecoind-bitcoind.Tpo -c -o litecoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoind-bitcoind.Tpo $(DEPDIR)/litecoind-bitcoind.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoind.cpp' object='litecoind-bitcoind.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -c -o litecoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
./Makefile.in:qt/qt_litecoin_qt-bitcoin.o: qt/bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_litecoin_qt-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo -c -o qt/qt_litecoin_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_litecoin_qt-bitcoin.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_litecoin_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
./Makefile.in:qt/qt_litecoin_qt-bitcoin.obj: qt/bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_litecoin_qt-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo -c -o qt/qt_litecoin_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_litecoin_qt-bitcoin.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_litecoin_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-compattests.o: qt/test/compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-compattests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-compattests.obj: qt/test/compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-compattests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o: qt/test/rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj: qt/test/rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-test_main.o: qt/test/test_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_litecoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_litecoin_qt-test_main.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-test_main.obj: qt/test/test_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_litecoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_litecoin_qt-test_main.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-uritests.o: qt/test/uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-uritests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-uritests.obj: qt/test/uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-uritests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
./Makefile.in:test/qt_test_test_litecoin_qt-test_bitcoin.o: test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo -c -o test/qt_test_test_litecoin_qt-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/qt_test_test_litecoin_qt-test_bitcoin.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile.in:test/qt_test_test_litecoin_qt-test_bitcoin.obj: test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo -c -o test/qt_test_test_litecoin_qt-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/qt_test_test_litecoin_qt-test_bitcoin.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile.in:test/qt_test_test_litecoin_qt-testutil.o: test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-testutil.o -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo -c -o test/qt_test_test_litecoin_qt-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/testutil.cpp' object='test/qt_test_test_litecoin_qt-testutil.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile.in:test/qt_test_test_litecoin_qt-testutil.obj: test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-testutil.obj -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo -c -o test/qt_test_test_litecoin_qt-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/testutil.cpp' object='test/qt_test_test_litecoin_qt-testutil.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-paymentservertests.o: qt/test/paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-paymentservertests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-paymentservertests.obj: qt/test/paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-paymentservertests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-wallettests.o: qt/test/wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-wallettests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-wallettests.obj: qt/test/wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-wallettests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
./Makefile.in:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile.in:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_compattests.o: qt/test/moc_compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_compattests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_compattests.obj: qt/test/moc_compattests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_compattests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o: qt/test/moc_rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj: qt/test/moc_rpcnestedtests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_uritests.o: qt/test/moc_uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_uritests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_uritests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o: qt/test/moc_paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj: qt/test/moc_paymentservertests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_wallettests.o: qt/test/moc_wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_wallettests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
./Makefile.in:qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj: qt/test/moc_wallettests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-arith_uint256_tests.o: test/arith_uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo -c -o test/test_test_litecoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_litecoin-arith_uint256_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
./Makefile.in:test/test_test_litecoin-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo -c -o test/test_test_litecoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_litecoin-arith_uint256_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-addrman_tests.o: test/addrman_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo -c -o test/test_test_litecoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_litecoin-addrman_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
./Makefile.in:test/test_test_litecoin-addrman_tests.obj: test/addrman_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo -c -o test/test_test_litecoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_litecoin-addrman_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-amount_tests.o: test/amount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo -c -o test/test_test_litecoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-amount_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_litecoin-amount_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
./Makefile.in:test/test_test_litecoin-amount_tests.obj: test/amount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo -c -o test/test_test_litecoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-amount_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_litecoin-amount_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-allocator_tests.o: test/allocator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo -c -o test/test_test_litecoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_litecoin-allocator_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
./Makefile.in:test/test_test_litecoin-allocator_tests.obj: test/allocator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo -c -o test/test_test_litecoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_litecoin-allocator_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-base32_tests.o: test/base32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo -c -o test/test_test_litecoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base32_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_litecoin-base32_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
./Makefile.in:test/test_test_litecoin-base32_tests.obj: test/base32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo -c -o test/test_test_litecoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base32_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_litecoin-base32_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-base58_tests.o: test/base58_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo -c -o test/test_test_litecoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base58_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_litecoin-base58_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
./Makefile.in:test/test_test_litecoin-base58_tests.obj: test/base58_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo -c -o test/test_test_litecoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base58_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_litecoin-base58_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-base64_tests.o: test/base64_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo -c -o test/test_test_litecoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base64_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_litecoin-base64_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
./Makefile.in:test/test_test_litecoin-base64_tests.obj: test/base64_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo -c -o test/test_test_litecoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base64_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_litecoin-base64_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-bip32_tests.o: test/bip32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo -c -o test/test_test_litecoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_litecoin-bip32_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
./Makefile.in:test/test_test_litecoin-bip32_tests.obj: test/bip32_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo -c -o test/test_test_litecoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_litecoin-bip32_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-bloom_tests.o: test/bloom_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo -c -o test/test_test_litecoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_litecoin-bloom_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
./Makefile.in:test/test_test_litecoin-bloom_tests.obj: test/bloom_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo -c -o test/test_test_litecoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_litecoin-bloom_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-bswap_tests.o: test/bswap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo -c -o test/test_test_litecoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_litecoin-bswap_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
./Makefile.in:test/test_test_litecoin-bswap_tests.obj: test/bswap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo -c -o test/test_test_litecoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_litecoin-bswap_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-checkqueue_tests.o: test/checkqueue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo -c -o test/test_test_litecoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_litecoin-checkqueue_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
./Makefile.in:test/test_test_litecoin-checkqueue_tests.obj: test/checkqueue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo -c -o test/test_test_litecoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_litecoin-checkqueue_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-coins_tests.o: test/coins_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo -c -o test/test_test_litecoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo test/$(DEPDIR)/test_test_litecoin-coins_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_litecoin-coins_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
./Makefile.in:test/test_test_litecoin-coins_tests.obj: test/coins_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo -c -o test/test_test_litecoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo test/$(DEPDIR)/test_test_litecoin-coins_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_litecoin-coins_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-compress_tests.o: test/compress_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo -c -o test/test_test_litecoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo test/$(DEPDIR)/test_test_litecoin-compress_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_litecoin-compress_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
./Makefile.in:test/test_test_litecoin-compress_tests.obj: test/compress_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo -c -o test/test_test_litecoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo test/$(DEPDIR)/test_test_litecoin-compress_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_litecoin-compress_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-crypto_tests.o: test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o test/test_test_litecoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_litecoin-crypto_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
./Makefile.in:test/test_test_litecoin-crypto_tests.obj: test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o test/test_test_litecoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_litecoin-crypto_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-cuckoocache_tests.o: test/cuckoocache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo -c -o test/test_test_litecoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_litecoin-cuckoocache_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
./Makefile.in:test/test_test_litecoin-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo -c -o test/test_test_litecoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_litecoin-cuckoocache_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-DoS_tests.o: test/DoS_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-DoS_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo -c -o test/test_test_litecoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_litecoin-DoS_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
./Makefile.in:test/test_test_litecoin-DoS_tests.obj: test/DoS_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-DoS_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo -c -o test/test_test_litecoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_litecoin-DoS_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-getarg_tests.o: test/getarg_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo -c -o test/test_test_litecoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_litecoin-getarg_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
./Makefile.in:test/test_test_litecoin-getarg_tests.obj: test/getarg_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo -c -o test/test_test_litecoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_litecoin-getarg_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-hash_tests.o: test/hash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo -c -o test/test_test_litecoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-hash_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_litecoin-hash_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
./Makefile.in:test/test_test_litecoin-hash_tests.obj: test/hash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo -c -o test/test_test_litecoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-hash_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_litecoin-hash_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-key_tests.o: test/key_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo -c -o test/test_test_litecoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo test/$(DEPDIR)/test_test_litecoin-key_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_litecoin-key_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
./Makefile.in:test/test_test_litecoin-key_tests.obj: test/key_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo -c -o test/test_test_litecoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo test/$(DEPDIR)/test_test_litecoin-key_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_litecoin-key_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-limitedmap_tests.o: test/limitedmap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-limitedmap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo -c -o test/test_test_litecoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_litecoin-limitedmap_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
./Makefile.in:test/test_test_litecoin-limitedmap_tests.obj: test/limitedmap_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-limitedmap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo -c -o test/test_test_litecoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_litecoin-limitedmap_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-dbwrapper_tests.o: test/dbwrapper_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo -c -o test/test_test_litecoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_litecoin-dbwrapper_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
./Makefile.in:test/test_test_litecoin-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo -c -o test/test_test_litecoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_litecoin-dbwrapper_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-main_tests.o: test/main_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-main_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo -c -o test/test_test_litecoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo test/$(DEPDIR)/test_test_litecoin-main_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_litecoin-main_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
./Makefile.in:test/test_test_litecoin-main_tests.obj: test/main_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-main_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo -c -o test/test_test_litecoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo test/$(DEPDIR)/test_test_litecoin-main_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_litecoin-main_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-mempool_tests.o: test/mempool_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo -c -o test/test_test_litecoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_litecoin-mempool_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
./Makefile.in:test/test_test_litecoin-mempool_tests.obj: test/mempool_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo -c -o test/test_test_litecoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_litecoin-mempool_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-merkle_tests.o: test/merkle_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo -c -o test/test_test_litecoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_litecoin-merkle_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
./Makefile.in:test/test_test_litecoin-merkle_tests.obj: test/merkle_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo -c -o test/test_test_litecoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_litecoin-merkle_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-miner_tests.o: test/miner_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo -c -o test/test_test_litecoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo test/$(DEPDIR)/test_test_litecoin-miner_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_litecoin-miner_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
./Makefile.in:test/test_test_litecoin-miner_tests.obj: test/miner_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo -c -o test/test_test_litecoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo test/$(DEPDIR)/test_test_litecoin-miner_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_litecoin-miner_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-multisig_tests.o: test/multisig_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo -c -o test/test_test_litecoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_litecoin-multisig_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
./Makefile.in:test/test_test_litecoin-multisig_tests.obj: test/multisig_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo -c -o test/test_test_litecoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_litecoin-multisig_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-net_tests.o: test/net_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo -c -o test/test_test_litecoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo test/$(DEPDIR)/test_test_litecoin-net_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_litecoin-net_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
./Makefile.in:test/test_test_litecoin-net_tests.obj: test/net_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo -c -o test/test_test_litecoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo test/$(DEPDIR)/test_test_litecoin-net_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_litecoin-net_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-netbase_tests.o: test/netbase_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo -c -o test/test_test_litecoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_litecoin-netbase_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
./Makefile.in:test/test_test_litecoin-netbase_tests.obj: test/netbase_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo -c -o test/test_test_litecoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_litecoin-netbase_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-pmt_tests.o: test/pmt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo -c -o test/test_test_litecoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_litecoin-pmt_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
./Makefile.in:test/test_test_litecoin-pmt_tests.obj: test/pmt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo -c -o test/test_test_litecoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_litecoin-pmt_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-policyestimator_tests.o: test/policyestimator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo -c -o test/test_test_litecoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_litecoin-policyestimator_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
./Makefile.in:test/test_test_litecoin-policyestimator_tests.obj: test/policyestimator_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo -c -o test/test_test_litecoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_litecoin-policyestimator_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-pow_tests.o: test/pow_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo -c -o test/test_test_litecoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pow_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_litecoin-pow_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
./Makefile.in:test/test_test_litecoin-pow_tests.obj: test/pow_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo -c -o test/test_test_litecoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pow_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_litecoin-pow_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-prevector_tests.o: test/prevector_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo -c -o test/test_test_litecoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_litecoin-prevector_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
./Makefile.in:test/test_test_litecoin-prevector_tests.obj: test/prevector_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo -c -o test/test_test_litecoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_litecoin-prevector_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-raii_event_tests.o: test/raii_event_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo -c -o test/test_test_litecoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_litecoin-raii_event_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
./Makefile.in:test/test_test_litecoin-raii_event_tests.obj: test/raii_event_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo -c -o test/test_test_litecoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_litecoin-raii_event_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-random_tests.o: test/random_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo -c -o test/test_test_litecoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo test/$(DEPDIR)/test_test_litecoin-random_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_litecoin-random_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
./Makefile.in:test/test_test_litecoin-random_tests.obj: test/random_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo -c -o test/test_test_litecoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo test/$(DEPDIR)/test_test_litecoin-random_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_litecoin-random_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-reverselock_tests.o: test/reverselock_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo -c -o test/test_test_litecoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_litecoin-reverselock_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
./Makefile.in:test/test_test_litecoin-reverselock_tests.obj: test/reverselock_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo -c -o test/test_test_litecoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_litecoin-reverselock_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-rpc_tests.o: test/rpc_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo -c -o test/test_test_litecoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_litecoin-rpc_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
./Makefile.in:test/test_test_litecoin-rpc_tests.obj: test/rpc_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo -c -o test/test_test_litecoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_litecoin-rpc_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-sanity_tests.o: test/sanity_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo -c -o test/test_test_litecoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_litecoin-sanity_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
./Makefile.in:test/test_test_litecoin-sanity_tests.obj: test/sanity_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo -c -o test/test_test_litecoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_litecoin-sanity_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-scheduler_tests.o: test/scheduler_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo -c -o test/test_test_litecoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_litecoin-scheduler_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
./Makefile.in:test/test_test_litecoin-scheduler_tests.obj: test/scheduler_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo -c -o test/test_test_litecoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_litecoin-scheduler_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-script_P2SH_tests.o: test/script_P2SH_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_P2SH_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo -c -o test/test_test_litecoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_litecoin-script_P2SH_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
./Makefile.in:test/test_test_litecoin-script_P2SH_tests.obj: test/script_P2SH_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_P2SH_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo -c -o test/test_test_litecoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_litecoin-script_P2SH_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-script_tests.o: test/script_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo -c -o test/test_test_litecoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_litecoin-script_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
./Makefile.in:test/test_test_litecoin-script_tests.obj: test/script_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo -c -o test/test_test_litecoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_litecoin-script_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-scriptnum_tests.o: test/scriptnum_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo -c -o test/test_test_litecoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_litecoin-scriptnum_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
./Makefile.in:test/test_test_litecoin-scriptnum_tests.obj: test/scriptnum_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo -c -o test/test_test_litecoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_litecoin-scriptnum_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-scrypt_tests.o: test/scrypt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scrypt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo -c -o test/test_test_litecoin-scrypt_tests.o `test -f 'test/scrypt_tests.cpp' || echo '$(srcdir)/'`test/scrypt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scrypt_tests.cpp' object='test/test_test_litecoin-scrypt_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scrypt_tests.o `test -f 'test/scrypt_tests.cpp' || echo '$(srcdir)/'`test/scrypt_tests.cpp
./Makefile.in:test/test_test_litecoin-scrypt_tests.obj: test/scrypt_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scrypt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo -c -o test/test_test_litecoin-scrypt_tests.obj `if test -f 'test/scrypt_tests.cpp'; then $(CYGPATH_W) 'test/scrypt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scrypt_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/scrypt_tests.cpp' object='test/test_test_litecoin-scrypt_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scrypt_tests.obj `if test -f 'test/scrypt_tests.cpp'; then $(CYGPATH_W) 'test/scrypt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scrypt_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-serialize_tests.o: test/serialize_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo -c -o test/test_test_litecoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_litecoin-serialize_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
./Makefile.in:test/test_test_litecoin-serialize_tests.obj: test/serialize_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo -c -o test/test_test_litecoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_litecoin-serialize_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-sighash_tests.o: test/sighash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo -c -o test/test_test_litecoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_litecoin-sighash_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
./Makefile.in:test/test_test_litecoin-sighash_tests.obj: test/sighash_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo -c -o test/test_test_litecoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_litecoin-sighash_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-sigopcount_tests.o: test/sigopcount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo -c -o test/test_test_litecoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_litecoin-sigopcount_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
./Makefile.in:test/test_test_litecoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo -c -o test/test_test_litecoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_litecoin-sigopcount_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-skiplist_tests.o: test/skiplist_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo -c -o test/test_test_litecoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_litecoin-skiplist_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
./Makefile.in:test/test_test_litecoin-skiplist_tests.obj: test/skiplist_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo -c -o test/test_test_litecoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_litecoin-skiplist_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-streams_tests.o: test/streams_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo -c -o test/test_test_litecoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo test/$(DEPDIR)/test_test_litecoin-streams_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_litecoin-streams_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
./Makefile.in:test/test_test_litecoin-streams_tests.obj: test/streams_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo -c -o test/test_test_litecoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo test/$(DEPDIR)/test_test_litecoin-streams_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_litecoin-streams_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-test_bitcoin.o: test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo -c -o test/test_test_litecoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_litecoin-test_bitcoin.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile.in:test/test_test_litecoin-test_bitcoin.obj: test/test_bitcoin.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo -c -o test/test_test_litecoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_litecoin-test_bitcoin.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile.in:test/test_test_litecoin-test_bitcoin_main.o: test/test_bitcoin_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin_main.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo -c -o test/test_test_litecoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_test_litecoin-test_bitcoin_main.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp
./Makefile.in:test/test_test_litecoin-test_bitcoin_main.obj: test/test_bitcoin_main.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin_main.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo -c -o test/test_test_litecoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_test_litecoin-test_bitcoin_main.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`
./Makefile.in:test/test_test_litecoin-testutil.o: test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-testutil.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-testutil.Tpo -c -o test/test_test_litecoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-testutil.Tpo test/$(DEPDIR)/test_test_litecoin-testutil.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_test_litecoin-testutil.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile.in:test/test_test_litecoin-testutil.obj: test/testutil.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-testutil.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-testutil.Tpo -c -o test/test_test_litecoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-testutil.Tpo test/$(DEPDIR)/test_test_litecoin-testutil.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_test_litecoin-testutil.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile.in:test/test_test_litecoin-timedata_tests.o: test/timedata_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo -c -o test/test_test_litecoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_litecoin-timedata_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
./Makefile.in:test/test_test_litecoin-timedata_tests.obj: test/timedata_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo -c -o test/test_test_litecoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_litecoin-timedata_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-torcontrol_tests.o: test/torcontrol_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo -c -o test/test_test_litecoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_litecoin-torcontrol_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
./Makefile.in:test/test_test_litecoin-torcontrol_tests.obj: test/torcontrol_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo -c -o test/test_test_litecoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_litecoin-torcontrol_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-transaction_tests.o: test/transaction_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo -c -o test/test_test_litecoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_litecoin-transaction_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
./Makefile.in:test/test_test_litecoin-transaction_tests.obj: test/transaction_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo -c -o test/test_test_litecoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_litecoin-transaction_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo -c -o test/test_test_litecoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_litecoin-txvalidationcache_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
./Makefile.in:test/test_test_litecoin-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo -c -o test/test_test_litecoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_litecoin-txvalidationcache_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-versionbits_tests.o: test/versionbits_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-versionbits_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo -c -o test/test_test_litecoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_litecoin-versionbits_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
./Makefile.in:test/test_test_litecoin-versionbits_tests.obj: test/versionbits_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-versionbits_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo -c -o test/test_test_litecoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_litecoin-versionbits_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-uint256_tests.o: test/uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo -c -o test/test_test_litecoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_litecoin-uint256_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
./Makefile.in:test/test_test_litecoin-uint256_tests.obj: test/uint256_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo -c -o test/test_test_litecoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_litecoin-uint256_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-univalue_tests.o: test/univalue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-univalue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo -c -o test/test_test_litecoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_litecoin-univalue_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
./Makefile.in:test/test_test_litecoin-univalue_tests.obj: test/univalue_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-univalue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo -c -o test/test_test_litecoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_litecoin-univalue_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin-util_tests.o: test/util_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo -c -o test/test_test_litecoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo test/$(DEPDIR)/test_test_litecoin-util_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_litecoin-util_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
./Makefile.in:test/test_test_litecoin-util_tests.obj: test/util_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo -c -o test/test_test_litecoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo test/$(DEPDIR)/test_test_litecoin-util_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_litecoin-util_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
./Makefile.in:wallet/test/test_test_litecoin-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_litecoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_litecoin-wallet_test_fixture.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile.in:wallet/test/test_test_litecoin-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_litecoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_litecoin-wallet_test_fixture.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile.in:wallet/test/test_test_litecoin-accounting_tests.o: wallet/test/accounting_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-accounting_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo -c -o wallet/test/test_test_litecoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_litecoin-accounting_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
./Makefile.in:wallet/test/test_test_litecoin-accounting_tests.obj: wallet/test/accounting_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-accounting_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo -c -o wallet/test/test_test_litecoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_litecoin-accounting_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
./Makefile.in:wallet/test/test_test_litecoin-wallet_tests.o: wallet/test/wallet_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo -c -o wallet/test/test_test_litecoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_litecoin-wallet_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
./Makefile.in:wallet/test/test_test_litecoin-wallet_tests.obj: wallet/test/wallet_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo -c -o wallet/test/test_test_litecoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_litecoin-wallet_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
./Makefile.in:wallet/test/test_test_litecoin-crypto_tests.o: wallet/test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o wallet/test/test_test_litecoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_litecoin-crypto_tests.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp
./Makefile.in:wallet/test/test_test_litecoin-crypto_tests.obj: wallet/test/crypto_tests.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o wallet/test/test_test_litecoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_litecoin-crypto_tests.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`
./Makefile.in:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o: test/test_bitcoin_fuzzy.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp
./Makefile.in:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj: test/test_bitcoin_fuzzy.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`
./Makefile.in:qt/qt_litecoin_qt-macdockiconhandler.o: qt/macdockiconhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo -c -o qt/qt_litecoin_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_litecoin_qt-macdockiconhandler.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
./Makefile.in:qt/qt_litecoin_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo -c -o qt/qt_litecoin_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_litecoin_qt-macdockiconhandler.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
./Makefile.in:qt/qt_litecoin_qt-macnotificationhandler.o: qt/macnotificationhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo -c -o qt/qt_litecoin_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_litecoin_qt-macnotificationhandler.o' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
./Makefile.in:qt/qt_litecoin_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo -c -o qt/qt_litecoin_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
./Makefile.in:@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po
./Makefile.in:@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_litecoin_qt-macnotificationhandler.obj' libtool=no @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
./Makefile.in:test/test_litecoin.log: test/test_litecoin$(EXEEXT)
./Makefile.in:	@p='test/test_litecoin$(EXEEXT)'; \
./Makefile.in:	b='test/test_litecoin'; \
./Makefile.in:qt/test/test_litecoin-qt.log: qt/test/test_litecoin-qt$(EXEEXT)
./Makefile.in:	@p='qt/test/test_litecoin-qt$(EXEEXT)'; \
./Makefile.in:	b='qt/test/test_litecoin-qt'; \
./Makefile.in:@ENABLE_QT_TRUE@$(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) : | $(QT_MOC)
./Makefile.in:@ENABLE_QT_TRUE@	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) qt/litecoin-qt$(EXEEXT) $(LIBBITCOINQT)
./Makefile.in:@ENABLE_QT_TRUE@bitcoin_qt : qt/litecoin-qt$(EXEEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@test_bitcoin_qt : qt/test/test_litecoin-qt$(EXEEXT)
./Makefile.in:@ENABLE_QT_TESTS_TRUE@test_bitcoin_qt_check : qt/test/test_litecoin-qt$(EXEEXT) FORCE
./bitcoin-tx.cpp:        std::string strUsage = strprintf(_("%s litecoin-tx utility version"), _(PACKAGE_NAME)) + " " + FormatFullVersion() + "\n\n" +
./bitcoin-tx.cpp:              "  litecoin-tx [options] <hex-tx> [commands]  " + _("Update hex-encoded litecoin transaction") + "\n" +
./bitcoin-tx.cpp:              "  litecoin-tx [options] -create [commands]   " + _("Create hex-encoded litecoin transaction") + "\n" +
Binary file ./litecoin_cli-bitcoin-cli.o matches
Binary file ./compat/libbitcoin_util_a-strnlen.o matches
Binary file ./compat/libbitcoin_util_a-glibcxx_sanity.o matches
Binary file ./compat/libbitcoin_util_a-glibc_sanity.o matches
Binary file ./primitives/libbitcoinconsensus_la-block.o matches
Binary file ./primitives/libbitcoin_consensus_a-transaction.o matches
Binary file ./primitives/.libs/libbitcoinconsensus_la-block.o matches
Binary file ./primitives/.libs/libbitcoinconsensus_la-transaction.o matches
Binary file ./primitives/libbitcoinconsensus_la-transaction.o matches
Binary file ./primitives/libbitcoin_consensus_a-block.o matches
Binary file ./libbitcoin_consensus.a matches
Binary file ./litecoin-cli matches
./Makefile.am:  bin_PROGRAMS += litecoind
./Makefile.am:  bin_PROGRAMS += litecoin-cli litecoin-tx
./Makefile.am:litecoind_SOURCES = bitcoind.cpp
./Makefile.am:litecoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.am:litecoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.am:litecoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.am:litecoind_SOURCES += bitcoind-res.rc
./Makefile.am:litecoind_LDADD = \
./Makefile.am:litecoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)
./Makefile.am:litecoin_cli_SOURCES = bitcoin-cli.cpp
./Makefile.am:litecoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
./Makefile.am:litecoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.am:litecoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.am:litecoin_cli_SOURCES += bitcoin-cli-res.rc
./Makefile.am:litecoin_cli_LDADD = \
./Makefile.am:litecoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)
./Makefile.am:litecoin_tx_SOURCES = bitcoin-tx.cpp
./Makefile.am:litecoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile.am:litecoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.am:litecoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.am:litecoin_tx_SOURCES += bitcoin-tx-res.rc
./Makefile.am:litecoin_tx_LDADD = \
./Makefile.am:litecoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)
Binary file ./libbitcoin_util_a-util.o matches
Binary file ./test/qt_test_test_litecoin_qt-test_bitcoin.o matches
Binary file ./test/test_test_litecoin-dbwrapper_tests.o matches
Binary file ./test/test_test_litecoin-hash_tests.o matches
Binary file ./test/test_test_litecoin-limitedmap_tests.o matches
Binary file ./test/test_test_litecoin-sanity_tests.o matches
Binary file ./test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o matches
Binary file ./test/test_test_litecoin-cuckoocache_tests.o matches
Binary file ./test/test_test_litecoin-transaction_tests.o matches
Binary file ./test/test_test_litecoin-bloom_tests.o matches
./test/.deps/test_test_litecoin-timedata_tests.Po:test/test_test_litecoin-timedata_tests.o: test/timedata_tests.cpp \
./test/.deps/test_test_litecoin-testutil.Po:test/test_test_litecoin-testutil.o: test/testutil.cpp \
./test/.deps/test_test_litecoin-netbase_tests.Po:test/test_test_litecoin-netbase_tests.o: test/netbase_tests.cpp \
./test/.deps/test_test_litecoin-test_bitcoin.Po:test/test_test_litecoin-test_bitcoin.o: test/test_bitcoin.cpp \
./test/.deps/test_test_litecoin-main_tests.Po:test/test_test_litecoin-main_tests.o: test/main_tests.cpp \
./test/.deps/test_test_litecoin-merkle_tests.Po:test/test_test_litecoin-merkle_tests.o: test/merkle_tests.cpp \
./test/.deps/test_test_litecoin-key_tests.Po:test/test_test_litecoin-key_tests.o: test/key_tests.cpp \
./test/.deps/test_test_litecoin-bip32_tests.Po:test/test_test_litecoin-bip32_tests.o: test/bip32_tests.cpp \
./test/.deps/test_test_litecoin-allocator_tests.Po:test/test_test_litecoin-allocator_tests.o: test/allocator_tests.cpp \
./test/.deps/test_test_litecoin-sigopcount_tests.Po:test/test_test_litecoin-sigopcount_tests.o: test/sigopcount_tests.cpp \
./test/.deps/test_test_litecoin-scriptnum_tests.Po:test/test_test_litecoin-scriptnum_tests.o: test/scriptnum_tests.cpp \
./test/.deps/test_test_litecoin-reverselock_tests.Po:test/test_test_litecoin-reverselock_tests.o: test/reverselock_tests.cpp \
./test/.deps/test_test_litecoin-addrman_tests.Po:test/test_test_litecoin-addrman_tests.o: test/addrman_tests.cpp \
./test/.deps/test_test_litecoin-bswap_tests.Po:test/test_test_litecoin-bswap_tests.o: test/bswap_tests.cpp \
./test/.deps/test_test_litecoin-limitedmap_tests.Po:test/test_test_litecoin-limitedmap_tests.o: test/limitedmap_tests.cpp \
./test/.deps/test_test_litecoin-checkqueue_tests.Po:test/test_test_litecoin-checkqueue_tests.o: test/checkqueue_tests.cpp \
./test/.deps/test_test_litecoin-crypto_tests.Po:test/test_test_litecoin-crypto_tests.o: test/crypto_tests.cpp \
./test/.deps/test_test_litecoin-cuckoocache_tests.Po:test/test_test_litecoin-cuckoocache_tests.o: test/cuckoocache_tests.cpp \
./test/.deps/qt_test_test_litecoin_qt-test_bitcoin.Po:test/qt_test_test_litecoin_qt-test_bitcoin.o: test/test_bitcoin.cpp \
./test/.deps/test_test_litecoin-base58_tests.Po:test/test_test_litecoin-base58_tests.o: test/base58_tests.cpp \
./test/.deps/test_test_litecoin-arith_uint256_tests.Po:test/test_test_litecoin-arith_uint256_tests.o: \
./test/.deps/test_test_litecoin-script_P2SH_tests.Po:test/test_test_litecoin-script_P2SH_tests.o: test/script_P2SH_tests.cpp \
./test/.deps/test_test_litecoin-sighash_tests.Po:test/test_test_litecoin-sighash_tests.o: test/sighash_tests.cpp \
./test/.deps/test_test_litecoin-net_tests.Po:test/test_test_litecoin-net_tests.o: test/net_tests.cpp \
./test/.deps/test_test_litecoin-dbwrapper_tests.Po:test/test_test_litecoin-dbwrapper_tests.o: test/dbwrapper_tests.cpp \
./test/.deps/test_test_litecoin-serialize_tests.Po:test/test_test_litecoin-serialize_tests.o: test/serialize_tests.cpp \
./test/.deps/qt_test_test_litecoin_qt-testutil.Po:test/qt_test_test_litecoin_qt-testutil.o: test/testutil.cpp \
./test/.deps/test_test_litecoin-coins_tests.Po:test/test_test_litecoin-coins_tests.o: test/coins_tests.cpp \
./test/.deps/test_test_litecoin-DoS_tests.Po:test/test_test_litecoin-DoS_tests.o: test/DoS_tests.cpp \
./test/.deps/test_test_litecoin-random_tests.Po:test/test_test_litecoin-random_tests.o: test/random_tests.cpp \
./test/.deps/test_test_litecoin-amount_tests.Po:test/test_test_litecoin-amount_tests.o: test/amount_tests.cpp \
./test/.deps/test_test_litecoin-pow_tests.Po:test/test_test_litecoin-pow_tests.o: test/pow_tests.cpp \
./test/.deps/test_test_litecoin-script_tests.Po:test/test_test_litecoin-script_tests.o: test/script_tests.cpp \
./test/.deps/test_test_litecoin-prevector_tests.Po:test/test_test_litecoin-prevector_tests.o: test/prevector_tests.cpp \
./test/.deps/test_test_litecoin-getarg_tests.Po:test/test_test_litecoin-getarg_tests.o: test/getarg_tests.cpp \
./test/.deps/test_test_litecoin-pmt_tests.Po:test/test_test_litecoin-pmt_tests.o: test/pmt_tests.cpp \
./test/.deps/test_test_litecoin-base64_tests.Po:test/test_test_litecoin-base64_tests.o: test/base64_tests.cpp \
./test/.deps/test_test_litecoin-txvalidationcache_tests.Po:test/test_test_litecoin-txvalidationcache_tests.o: \
./test/.deps/test_test_litecoin-miner_tests.Po:test/test_test_litecoin-miner_tests.o: test/miner_tests.cpp \
./test/.deps/test_test_litecoin-compress_tests.Po:test/test_test_litecoin-compress_tests.o: test/compress_tests.cpp \
./test/.deps/test_test_litecoin-raii_event_tests.Po:test/test_test_litecoin-raii_event_tests.o: test/raii_event_tests.cpp \
./test/.deps/test_test_litecoin-skiplist_tests.Po:test/test_test_litecoin-skiplist_tests.o: test/skiplist_tests.cpp \
./test/.deps/test_test_litecoin-test_bitcoin_main.Po:test/test_test_litecoin-test_bitcoin_main.o: test/test_bitcoin_main.cpp \
./test/.deps/test_test_litecoin-rpc_tests.Po:test/test_test_litecoin-rpc_tests.o: test/rpc_tests.cpp \
./test/.deps/test_test_litecoin-scrypt_tests.Po:test/test_test_litecoin-scrypt_tests.o: test/scrypt_tests.cpp \
./test/.deps/test_test_litecoin-util_tests.Po:test/test_test_litecoin-util_tests.o: test/util_tests.cpp \
./test/.deps/test_test_litecoin-multisig_tests.Po:test/test_test_litecoin-multisig_tests.o: test/multisig_tests.cpp \
./test/.deps/test_test_litecoin-transaction_tests.Po:test/test_test_litecoin-transaction_tests.o: test/transaction_tests.cpp \
./test/.deps/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o: \
./test/.deps/test_test_litecoin-scheduler_tests.Po:test/test_test_litecoin-scheduler_tests.o: test/scheduler_tests.cpp \
./test/.deps/test_test_litecoin-versionbits_tests.Po:test/test_test_litecoin-versionbits_tests.o: test/versionbits_tests.cpp \
./test/.deps/test_test_litecoin-torcontrol_tests.Po:test/test_test_litecoin-torcontrol_tests.o: test/torcontrol_tests.cpp \
./test/.deps/test_test_litecoin-mempool_tests.Po:test/test_test_litecoin-mempool_tests.o: test/mempool_tests.cpp \
./test/.deps/test_test_litecoin-univalue_tests.Po:test/test_test_litecoin-univalue_tests.o: test/univalue_tests.cpp \
./test/.deps/test_test_litecoin-uint256_tests.Po:test/test_test_litecoin-uint256_tests.o: test/uint256_tests.cpp \
./test/.deps/test_test_litecoin-streams_tests.Po:test/test_test_litecoin-streams_tests.o: test/streams_tests.cpp \
./test/.deps/test_test_litecoin-policyestimator_tests.Po:test/test_test_litecoin-policyestimator_tests.o: \
./test/.deps/test_test_litecoin-bloom_tests.Po:test/test_test_litecoin-bloom_tests.o: test/bloom_tests.cpp \
./test/.deps/test_test_litecoin-sanity_tests.Po:test/test_test_litecoin-sanity_tests.o: test/sanity_tests.cpp \
./test/.deps/test_test_litecoin-base32_tests.Po:test/test_test_litecoin-base32_tests.o: test/base32_tests.cpp \
./test/.deps/test_test_litecoin-hash_tests.Po:test/test_test_litecoin-hash_tests.o: test/hash_tests.cpp \
Binary file ./test/test_test_litecoin-raii_event_tests.o matches
Binary file ./test/test_test_litecoin-test_bitcoin.o matches
Binary file ./test/test_test_litecoin-base64_tests.o matches
Binary file ./test/test_test_litecoin-univalue_tests.o matches
Binary file ./test/test_test_litecoin-scriptnum_tests.o matches
Binary file ./test/test_test_litecoin-timedata_tests.o matches
./test/README.md:unit testing framework, and since litecoin already uses boost, it makes
./test/README.md:The build system is setup to compile an executable called "test_litecoin"
Binary file ./test/test_test_litecoin-multisig_tests.o matches
Binary file ./test/test_test_litecoin-serialize_tests.o matches
Binary file ./test/test_test_litecoin-mempool_tests.o matches
Binary file ./test/test_test_litecoin-testutil.o matches
Binary file ./test/test_test_litecoin-coins_tests.o matches
Binary file ./test/test_test_litecoin-pow_tests.o matches
Binary file ./test/test_test_litecoin-compress_tests.o matches
Binary file ./test/test_test_litecoin-netbase_tests.o matches
Binary file ./test/test_test_litecoin-miner_tests.o matches
Binary file ./test/test_test_litecoin-script_P2SH_tests.o matches
Binary file ./test/test_test_litecoin-getarg_tests.o matches
Binary file ./test/test_test_litecoin-key_tests.o matches
Binary file ./test/test_test_litecoin-pmt_tests.o matches
Binary file ./test/test_test_litecoin-bip32_tests.o matches
Binary file ./test/test_test_litecoin-base32_tests.o matches
Binary file ./test/test_test_litecoin-crypto_tests.o matches
Binary file ./test/test_test_litecoin-script_tests.o matches
Binary file ./test/test_test_litecoin-bswap_tests.o matches
Binary file ./test/test_test_litecoin-arith_uint256_tests.o matches
Binary file ./test/test_test_litecoin-skiplist_tests.o matches
Binary file ./test/test_test_litecoin-streams_tests.o matches
Binary file ./test/test_test_litecoin-net_tests.o matches
Binary file ./test/test_test_litecoin-main_tests.o matches
Binary file ./test/test_test_litecoin-random_tests.o matches
Binary file ./test/test_test_litecoin-util_tests.o matches
Binary file ./test/test_test_litecoin-amount_tests.o matches
Binary file ./test/test_test_litecoin-checkqueue_tests.o matches
./test/test_bitcoin.cpp:        pathTemp = GetTempPath() / strprintf("test_litecoin_%lu_%i", (unsigned long)GetTime(), (int)(InsecureRandRange(100000)));
Binary file ./test/test_test_litecoin-versionbits_tests.o matches
Binary file ./test/qt_test_test_litecoin_qt-testutil.o matches
Binary file ./test/test_test_litecoin-rpc_tests.o matches
Binary file ./test/test_test_litecoin-test_bitcoin_main.o matches
Binary file ./test/test_test_litecoin-sigopcount_tests.o matches
Binary file ./test/test_test_litecoin-scheduler_tests.o matches
Binary file ./test/test_test_litecoin-uint256_tests.o matches
Binary file ./test/test_test_litecoin-prevector_tests.o matches
Binary file ./test/test_test_litecoin-txvalidationcache_tests.o matches
Binary file ./test/test_test_litecoin-sighash_tests.o matches
Binary file ./test/test_test_litecoin-addrman_tests.o matches
Binary file ./test/test_test_litecoin-base58_tests.o matches
Binary file ./test/test_test_litecoin-scrypt_tests.o matches
Binary file ./test/test_test_litecoin-reverselock_tests.o matches
Binary file ./test/test_litecoin matches
Binary file ./test/test_test_litecoin-torcontrol_tests.o matches
Binary file ./test/test_test_litecoin-merkle_tests.o matches
Binary file ./test/test_test_litecoin-DoS_tests.o matches
Binary file ./test/test_test_litecoin-allocator_tests.o matches
Binary file ./test/test_test_litecoin-policyestimator_tests.o matches
Binary file ./test/test_litecoin_fuzzy matches
./Makefile:pkgdatadir = $(datadir)/litecoin
./Makefile:pkgincludedir = $(includedir)/litecoin
./Makefile:pkglibdir = $(libdir)/litecoin
./Makefile:pkglibexecdir = $(libexecdir)/litecoin
./Makefile:am__append_1 = litecoind
./Makefile:am__append_2 = litecoin-cli litecoin-tx
./Makefile:am__append_19 = test/test_litecoin
./Makefile:am__append_20 = test/test_litecoin
./Makefile:am__append_21 = test/test_litecoin_fuzzy
./Makefile:am__append_26 = bench/bench_litecoin
./Makefile:am__append_31 = qt/litecoin-qt
./Makefile:am__append_40 = qt/test/test_litecoin-qt
./Makefile:am__append_41 = qt/test/test_litecoin-qt
./Makefile:	qt/res/icons/litecoin_splash.png qt/res/icons/lock_closed.png \
./Makefile:am__EXEEXT_1 = litecoind$(EXEEXT)
./Makefile:am__EXEEXT_2 = litecoin-cli$(EXEEXT) \
./Makefile:	litecoin-tx$(EXEEXT)
./Makefile:am__EXEEXT_3 = test/test_litecoin$(EXEEXT)
./Makefile:am__EXEEXT_4 = bench/bench_litecoin$(EXEEXT)
./Makefile:am__EXEEXT_5 = qt/litecoin-qt$(EXEEXT)
./Makefile:	qt/test/test_litecoin-qt$(EXEEXT)
./Makefile:am__EXEEXT_7 = test/test_litecoin_fuzzy$(EXEEXT)
./Makefile:am__bench_bench_litecoin_SOURCES_DIST = bench/bench_bitcoin.cpp \
./Makefile:am__objects_20 = bench/bench_bench_litecoin-coin_selection.$(OBJEXT)
./Makefile:am_bench_bench_litecoin_OBJECTS = bench/bench_bench_litecoin-bench_bitcoin.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-bench.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-checkblock.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-checkqueue.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-Examples.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-rollingbloom.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-crypto_hash.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-ccoins_caching.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-mempool_eviction.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-verify_script.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-base58.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-lockedpool.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-perf.$(OBJEXT) \
./Makefile:	bench/bench_bench_litecoin-prevector_destructor.$(OBJEXT) \
./Makefile:nodist_bench_bench_litecoin_OBJECTS =  \
./Makefile:bench_bench_litecoin_OBJECTS = $(am_bench_bench_litecoin_OBJECTS) \
./Makefile:	$(nodist_bench_bench_litecoin_OBJECTS)
./Makefile:bench_bench_litecoin_DEPENDENCIES =  \
./Makefile:bench_bench_litecoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile:	$(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) \
./Makefile:	$(bench_bench_litecoin_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__litecoin_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
./Makefile:am_litecoin_cli_OBJECTS = litecoin_cli-bitcoin-cli.$(OBJEXT) \
./Makefile:litecoin_cli_OBJECTS = $(am_litecoin_cli_OBJECTS)
./Makefile:litecoin_cli_DEPENDENCIES = $(LIBBITCOIN_CLI) $(am__DEPENDENCIES_4) \
./Makefile:litecoin_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoin_cli_CXXFLAGS) \
./Makefile:	$(CXXFLAGS) $(litecoin_cli_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__litecoin_tx_SOURCES_DIST = bitcoin-tx.cpp bitcoin-tx-res.rc
./Makefile:am_litecoin_tx_OBJECTS = litecoin_tx-bitcoin-tx.$(OBJEXT) \
./Makefile:litecoin_tx_OBJECTS = $(am_litecoin_tx_OBJECTS)
./Makefile:litecoin_tx_DEPENDENCIES = $(am__DEPENDENCIES_4) $(LIBBITCOIN_COMMON) \
./Makefile:litecoin_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoin_tx_CXXFLAGS) \
./Makefile:	$(CXXFLAGS) $(litecoin_tx_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__litecoind_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
./Makefile:am_litecoind_OBJECTS = litecoind-bitcoind.$(OBJEXT) $(am__objects_24)
./Makefile:litecoind_OBJECTS = $(am_litecoind_OBJECTS)
./Makefile:litecoind_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
./Makefile:litecoind_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
./Makefile:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(litecoind_CXXFLAGS) \
./Makefile:	$(CXXFLAGS) $(litecoind_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__qt_litecoin_qt_SOURCES_DIST = qt/bitcoin.cpp \
./Makefile:am__objects_25 = qt/qt_litecoin_qt-macdockiconhandler.$(OBJEXT) \
./Makefile:	qt/qt_litecoin_qt-macnotificationhandler.$(OBJEXT)
./Makefile:am_qt_litecoin_qt_OBJECTS =  \
./Makefile:	qt/qt_litecoin_qt-bitcoin.$(OBJEXT) \
./Makefile:qt_litecoin_qt_OBJECTS = $(am_qt_litecoin_qt_OBJECTS)
./Makefile:qt_litecoin_qt_DEPENDENCIES = qt/libbitcoinqt.a \
./Makefile:qt_litecoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) \
./Makefile:	$(qt_litecoin_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
./Makefile:	$(qt_litecoin_qt_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__qt_test_test_litecoin_qt_SOURCES_DIST = qt/test/compattests.cpp \
./Makefile:am__objects_29 = test/qt_test_test_litecoin_qt-test_bitcoin.$(OBJEXT) \
./Makefile:	test/qt_test_test_litecoin_qt-testutil.$(OBJEXT)
./Makefile:am__objects_30 = qt/test/qt_test_test_litecoin_qt-paymentservertests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-wallettests.$(OBJEXT) \
./Makefile:	wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.$(OBJEXT)
./Makefile:am_qt_test_test_litecoin_qt_OBJECTS = qt/test/qt_test_test_litecoin_qt-compattests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-rpcnestedtests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-test_main.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-uritests.$(OBJEXT) \
./Makefile:am__objects_31 = qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-moc_wallettests.$(OBJEXT)
./Makefile:am__objects_32 = qt/test/qt_test_test_litecoin_qt-moc_compattests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.$(OBJEXT) \
./Makefile:	qt/test/qt_test_test_litecoin_qt-moc_uritests.$(OBJEXT) \
./Makefile:nodist_qt_test_test_litecoin_qt_OBJECTS =  \
./Makefile:qt_test_test_litecoin_qt_OBJECTS =  \
./Makefile:	$(am_qt_test_test_litecoin_qt_OBJECTS) \
./Makefile:	$(nodist_qt_test_test_litecoin_qt_OBJECTS)
./Makefile:qt_test_test_litecoin_qt_DEPENDENCIES =  \
./Makefile:qt_test_test_litecoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile:	$(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) \
./Makefile:	$(qt_test_test_litecoin_qt_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__test_test_litecoin_SOURCES_DIST = test/arith_uint256_tests.cpp \
./Makefile:am__objects_33 = wallet/test/test_test_litecoin-wallet_test_fixture.$(OBJEXT) \
./Makefile:	wallet/test/test_test_litecoin-accounting_tests.$(OBJEXT) \
./Makefile:	wallet/test/test_test_litecoin-wallet_tests.$(OBJEXT) \
./Makefile:	wallet/test/test_test_litecoin-crypto_tests.$(OBJEXT)
./Makefile:am__objects_34 = test/test_test_litecoin-arith_uint256_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-addrman_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-amount_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-allocator_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-base32_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-base58_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-base64_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-bip32_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-bloom_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-bswap_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-checkqueue_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-coins_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-compress_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-crypto_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-cuckoocache_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-DoS_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-getarg_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-hash_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-key_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-limitedmap_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-dbwrapper_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-main_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-mempool_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-merkle_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-miner_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-multisig_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-net_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-netbase_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-pmt_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-policyestimator_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-pow_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-prevector_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-raii_event_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-random_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-reverselock_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-rpc_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-sanity_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-scheduler_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-script_P2SH_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-script_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-scriptnum_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-scrypt_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-serialize_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-sighash_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-sigopcount_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-skiplist_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-streams_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-test_bitcoin.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-test_bitcoin_main.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-testutil.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-timedata_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-torcontrol_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-transaction_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-txvalidationcache_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-versionbits_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-uint256_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-univalue_tests.$(OBJEXT) \
./Makefile:	test/test_test_litecoin-util_tests.$(OBJEXT) \
./Makefile:am_test_test_litecoin_OBJECTS = $(am__objects_34) \
./Makefile:nodist_test_test_litecoin_OBJECTS =  \
./Makefile:test_test_litecoin_OBJECTS = $(am_test_test_litecoin_OBJECTS) \
./Makefile:	$(nodist_test_test_litecoin_OBJECTS)
./Makefile:test_test_litecoin_DEPENDENCIES = $(am__append_23) \
./Makefile:test_test_litecoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile:	$(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) \
./Makefile:	$(test_test_litecoin_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:am__test_test_litecoin_fuzzy_SOURCES_DIST =  \
./Makefile:am_test_test_litecoin_fuzzy_OBJECTS = test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT)
./Makefile:test_test_litecoin_fuzzy_OBJECTS =  \
./Makefile:	$(am_test_test_litecoin_fuzzy_OBJECTS)
./Makefile:test_test_litecoin_fuzzy_DEPENDENCIES =  \
./Makefile:test_test_litecoin_fuzzy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
./Makefile:	$(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) \
./Makefile:	$(test_test_litecoin_fuzzy_LDFLAGS) $(LDFLAGS) -o $@
./Makefile:	$(bench_bench_litecoin_SOURCES) \
./Makefile:	$(nodist_bench_bench_litecoin_SOURCES) $(litecoin_cli_SOURCES) \
./Makefile:	$(litecoin_tx_SOURCES) $(litecoind_SOURCES) \
./Makefile:	$(qt_litecoin_qt_SOURCES) $(qt_test_test_litecoin_qt_SOURCES) \
./Makefile:	$(nodist_qt_test_test_litecoin_qt_SOURCES) \
./Makefile:	$(test_test_litecoin_SOURCES) \
./Makefile:	$(nodist_test_test_litecoin_SOURCES) \
./Makefile:	$(test_test_litecoin_fuzzy_SOURCES)
./Makefile:	$(am__bench_bench_litecoin_SOURCES_DIST) \
./Makefile:	$(am__litecoin_cli_SOURCES_DIST) \
./Makefile:	$(am__litecoin_tx_SOURCES_DIST) $(am__litecoind_SOURCES_DIST) \
./Makefile:	$(am__qt_litecoin_qt_SOURCES_DIST) \
./Makefile:	$(am__qt_test_test_litecoin_qt_SOURCES_DIST) \
./Makefile:	$(am__test_test_litecoin_SOURCES_DIST) \
./Makefile:	$(am__test_test_litecoin_fuzzy_SOURCES_DIST)
./Makefile:ACLOCAL = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/missing aclocal-1.15
./Makefile:AUTOCONF = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/missing autoconf
./Makefile:AUTOHEADER = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/missing autoheader
./Makefile:AUTOMAKE = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/missing automake-1.15
./Makefile:BITCOIN_CLI_NAME = litecoin-cli
./Makefile:BITCOIN_DAEMON_NAME = litecoind
./Makefile:BITCOIN_GUI_NAME = litecoin-qt
./Makefile:BITCOIN_TX_NAME = litecoin-tx
./Makefile:COPYRIGHT_HOLDERS_FINAL = The Litecoin Core developers
./Makefile:COPYRIGHT_HOLDERS_SUBSTITUTION = Litecoin Core
./Makefile:MAKEINFO = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/missing makeinfo
./Makefile:PACKAGE = litecoin
./Makefile:PACKAGE_BUGREPORT = https://github.com/litecoin-project/litecoin/issues
./Makefile:PACKAGE_NAME = Litecoin Core
./Makefile:PACKAGE_STRING = Litecoin Core 0.15.0
./Makefile:PACKAGE_TARNAME = litecoin
./Makefile:PACKAGE_URL = https://litecoin.org/
./Makefile:abs_builddir = /home/sanurhea/litecoin/litecoin/src
./Makefile:abs_srcdir = /home/sanurhea/litecoin/litecoin/src
./Makefile:abs_top_builddir = /home/sanurhea/litecoin/litecoin
./Makefile:abs_top_srcdir = /home/sanurhea/litecoin/litecoin
./Makefile:install_sh = ${SHELL} /home/sanurhea/litecoin/litecoin/build-aux/install-sh
./Makefile:litecoind_SOURCES = bitcoind.cpp $(am__append_5)
./Makefile:litecoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile:litecoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:litecoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:litecoind_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
./Makefile:litecoin_cli_SOURCES = bitcoin-cli.cpp $(am__append_6)
./Makefile:litecoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
./Makefile:litecoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:litecoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:litecoin_cli_LDADD = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
./Makefile:litecoin_tx_SOURCES = bitcoin-tx.cpp $(am__append_7)
./Makefile:litecoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile:litecoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:litecoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:litecoin_tx_LDADD = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
./Makefile:TEST_BINARY = test/test_litecoin$(EXEEXT)
./Makefile:test_test_litecoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
./Makefile:test_test_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
./Makefile:test_test_litecoin_LDADD = $(am__append_23) \
./Makefile:test_test_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:test_test_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
./Makefile:test_test_litecoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp
./Makefile:test_test_litecoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
./Makefile:test_test_litecoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:test_test_litecoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:test_test_litecoin_fuzzy_LDADD = $(LIBUNIVALUE) \
./Makefile:nodist_test_test_litecoin_SOURCES = $(GENERATED_TEST_FILES)
./Makefile:BENCH_BINARY = bench/bench_litecoin$(EXEEXT)
./Makefile:bench_bench_litecoin_SOURCES =  \
./Makefile:nodist_bench_bench_litecoin_SOURCES = $(GENERATED_TEST_FILES)
./Makefile:bench_bench_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
./Makefile:bench_bench_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile:bench_bench_litecoin_LDADD = $(LIBBITCOIN_SERVER) \
./Makefile:bench_bench_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:  qt/res/icons/litecoin_splash.png \
./Makefile:qt_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile:qt_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile:qt_litecoin_qt_SOURCES = qt/bitcoin.cpp \
./Makefile:qt_litecoin_qt_LDADD = qt/libbitcoinqt.a \
./Makefile:qt_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:qt_litecoin_qt_LIBTOOLFLAGS = --tag CXX
./Makefile:qt_test_test_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile:qt_test_test_litecoin_qt_SOURCES =  \
./Makefile:nodist_qt_test_test_litecoin_qt_SOURCES = $(TEST_QT_MOC_CPP)
./Makefile:qt_test_test_litecoin_qt_LDADD =  \
./Makefile:qt_test_test_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile:qt_test_test_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile:bench/bench_bench_litecoin-bench_bitcoin.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-bench.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile:bench/bench_bench_litecoin-checkblock.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-checkqueue.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-Examples.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile:bench/bench_bench_litecoin-rollingbloom.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-crypto_hash.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-ccoins_caching.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-mempool_eviction.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-verify_script.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-base58.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile:bench/bench_bench_litecoin-lockedpool.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-perf.$(OBJEXT): bench/$(am__dirstamp) \
./Makefile:bench/bench_bench_litecoin-prevector_destructor.$(OBJEXT):  \
./Makefile:bench/bench_bench_litecoin-coin_selection.$(OBJEXT):  \
./Makefile:bench/bench_litecoin$(EXEEXT): $(bench_bench_litecoin_OBJECTS) $(bench_bench_litecoin_DEPENDENCIES) $(EXTRA_bench_bench_litecoin_DEPENDENCIES) bench/$(am__dirstamp)
./Makefile:	@rm -f bench/bench_litecoin$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(bench_bench_litecoin_LINK) $(bench_bench_litecoin_OBJECTS) $(bench_bench_litecoin_LDADD) $(LIBS)
./Makefile:litecoin-cli$(EXEEXT): $(litecoin_cli_OBJECTS) $(litecoin_cli_DEPENDENCIES) $(EXTRA_litecoin_cli_DEPENDENCIES) 
./Makefile:	@rm -f litecoin-cli$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(litecoin_cli_LINK) $(litecoin_cli_OBJECTS) $(litecoin_cli_LDADD) $(LIBS)
./Makefile:litecoin-tx$(EXEEXT): $(litecoin_tx_OBJECTS) $(litecoin_tx_DEPENDENCIES) $(EXTRA_litecoin_tx_DEPENDENCIES) 
./Makefile:	@rm -f litecoin-tx$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(litecoin_tx_LINK) $(litecoin_tx_OBJECTS) $(litecoin_tx_LDADD) $(LIBS)
./Makefile:litecoind$(EXEEXT): $(litecoind_OBJECTS) $(litecoind_DEPENDENCIES) $(EXTRA_litecoind_DEPENDENCIES) 
./Makefile:	@rm -f litecoind$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(litecoind_LINK) $(litecoind_OBJECTS) $(litecoind_LDADD) $(LIBS)
./Makefile:qt/qt_litecoin_qt-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
./Makefile:qt/qt_litecoin_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
./Makefile:qt/qt_litecoin_qt-macnotificationhandler.$(OBJEXT):  \
./Makefile:qt/litecoin-qt$(EXEEXT): $(qt_litecoin_qt_OBJECTS) $(qt_litecoin_qt_DEPENDENCIES) $(EXTRA_qt_litecoin_qt_DEPENDENCIES) qt/$(am__dirstamp)
./Makefile:	@rm -f qt/litecoin-qt$(EXEEXT)
./Makefile:	$(AM_V_OBJCXXLD)$(qt_litecoin_qt_LINK) $(qt_litecoin_qt_OBJECTS) $(qt_litecoin_qt_LDADD) $(LIBS)
./Makefile:qt/test/qt_test_test_litecoin_qt-compattests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-test_main.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-uritests.$(OBJEXT):  \
./Makefile:test/qt_test_test_litecoin_qt-test_bitcoin.$(OBJEXT):  \
./Makefile:test/qt_test_test_litecoin_qt-testutil.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-paymentservertests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-wallettests.$(OBJEXT):  \
./Makefile:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_compattests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_uritests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.$(OBJEXT):  \
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_wallettests.$(OBJEXT):  \
./Makefile:qt/test/test_litecoin-qt$(EXEEXT): $(qt_test_test_litecoin_qt_OBJECTS) $(qt_test_test_litecoin_qt_DEPENDENCIES) $(EXTRA_qt_test_test_litecoin_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
./Makefile:	@rm -f qt/test/test_litecoin-qt$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(qt_test_test_litecoin_qt_LINK) $(qt_test_test_litecoin_qt_OBJECTS) $(qt_test_test_litecoin_qt_LDADD) $(LIBS)
./Makefile:test/test_test_litecoin-arith_uint256_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-addrman_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-amount_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-allocator_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-checkqueue_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-compress_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-cuckoocache_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-DoS_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-limitedmap_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-dbwrapper_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-main_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-mempool_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-merkle_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-multisig_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-net_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-policyestimator_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-prevector_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-raii_event_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-random_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-reverselock_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-scheduler_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-script_P2SH_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-script_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-scriptnum_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-scrypt_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-serialize_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-sighash_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-sigopcount_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-skiplist_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-streams_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-test_bitcoin_main.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-testutil.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-timedata_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-torcontrol_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-transaction_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-txvalidationcache_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-versionbits_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:test/test_test_litecoin-univalue_tests.$(OBJEXT):  \
./Makefile:test/test_test_litecoin-util_tests.$(OBJEXT): test/$(am__dirstamp) \
./Makefile:wallet/test/test_test_litecoin-wallet_test_fixture.$(OBJEXT):  \
./Makefile:wallet/test/test_test_litecoin-accounting_tests.$(OBJEXT):  \
./Makefile:wallet/test/test_test_litecoin-wallet_tests.$(OBJEXT):  \
./Makefile:wallet/test/test_test_litecoin-crypto_tests.$(OBJEXT):  \
./Makefile:test/test_litecoin$(EXEEXT): $(test_test_litecoin_OBJECTS) $(test_test_litecoin_DEPENDENCIES) $(EXTRA_test_test_litecoin_DEPENDENCIES) test/$(am__dirstamp)
./Makefile:	@rm -f test/test_litecoin$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(test_test_litecoin_LINK) $(test_test_litecoin_OBJECTS) $(test_test_litecoin_LDADD) $(LIBS)
./Makefile:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT):  \
./Makefile:test/test_litecoin_fuzzy$(EXEEXT): $(test_test_litecoin_fuzzy_OBJECTS) $(test_test_litecoin_fuzzy_DEPENDENCIES) $(EXTRA_test_test_litecoin_fuzzy_DEPENDENCIES) test/$(am__dirstamp)
./Makefile:	@rm -f test/test_litecoin_fuzzy$(EXEEXT)
./Makefile:	$(AM_V_CXXLD)$(test_test_litecoin_fuzzy_LINK) $(test_test_litecoin_fuzzy_OBJECTS) $(test_test_litecoin_fuzzy_LDADD) $(LIBS)
./Makefile:include ./$(DEPDIR)/litecoin_cli-bitcoin-cli.Po
./Makefile:include ./$(DEPDIR)/litecoin_tx-bitcoin-tx.Po
./Makefile:include ./$(DEPDIR)/litecoind-bitcoind.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-base58.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-bench.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-perf.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po
./Makefile:include bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po
./Makefile:include qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po
./Makefile:include qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po
./Makefile:include qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po
./Makefile:include qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po
./Makefile:include test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po
./Makefile:include test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-amount_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-base32_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-base58_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-base64_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-coins_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-compress_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-hash_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-key_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-main_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-miner_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-net_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-pow_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-random_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-script_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-streams_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-testutil.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-util_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po
./Makefile:include test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po
./Makefile:include wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po
./Makefile:include wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po
./Makefile:include wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:include wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po
./Makefile:include wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po
./Makefile:bench/bench_bench_litecoin-bench_bitcoin.o: bench/bench_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench_bitcoin.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo -c -o bench/bench_bench_litecoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_litecoin-bench_bitcoin.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
./Makefile:bench/bench_bench_litecoin-bench_bitcoin.obj: bench/bench_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench_bitcoin.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo -c -o bench/bench_bench_litecoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_litecoin-bench_bitcoin.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-bench.o: bench/bench.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo -c -o bench/bench_bench_litecoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench.Po
./Makefile:#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_litecoin-bench.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
./Makefile:bench/bench_bench_litecoin-bench.obj: bench/bench.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo -c -o bench/bench_bench_litecoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-bench.Tpo bench/$(DEPDIR)/bench_bench_litecoin-bench.Po
./Makefile:#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_litecoin-bench.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-checkblock.o: bench/checkblock.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo -c -o bench/bench_bench_litecoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po
./Makefile:#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_litecoin-checkblock.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
./Makefile:bench/bench_bench_litecoin-checkblock.obj: bench/checkblock.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo -c -o bench/bench_bench_litecoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkblock.Po
./Makefile:#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_litecoin-checkblock.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-checkqueue.o: bench/checkqueue.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo -c -o bench/bench_bench_litecoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po
./Makefile:#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_litecoin-checkqueue.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
./Makefile:bench/bench_bench_litecoin-checkqueue.obj: bench/checkqueue.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo -c -o bench/bench_bench_litecoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_litecoin-checkqueue.Po
./Makefile:#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_litecoin-checkqueue.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-Examples.o: bench/Examples.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-Examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo -c -o bench/bench_bench_litecoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po
./Makefile:#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_litecoin-Examples.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
./Makefile:bench/bench_bench_litecoin-Examples.obj: bench/Examples.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-Examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo -c -o bench/bench_bench_litecoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_litecoin-Examples.Po
./Makefile:#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_litecoin-Examples.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-rollingbloom.o: bench/rollingbloom.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo -c -o bench/bench_bench_litecoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po
./Makefile:#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_litecoin-rollingbloom.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
./Makefile:bench/bench_bench_litecoin-rollingbloom.obj: bench/rollingbloom.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo -c -o bench/bench_bench_litecoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_litecoin-rollingbloom.Po
./Makefile:#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_litecoin-rollingbloom.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-crypto_hash.o: bench/crypto_hash.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo -c -o bench/bench_bench_litecoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po
./Makefile:#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_litecoin-crypto_hash.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
./Makefile:bench/bench_bench_litecoin-crypto_hash.obj: bench/crypto_hash.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo -c -o bench/bench_bench_litecoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_litecoin-crypto_hash.Po
./Makefile:#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_litecoin-crypto_hash.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-ccoins_caching.o: bench/ccoins_caching.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo -c -o bench/bench_bench_litecoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po
./Makefile:#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_litecoin-ccoins_caching.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
./Makefile:bench/bench_bench_litecoin-ccoins_caching.obj: bench/ccoins_caching.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo -c -o bench/bench_bench_litecoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_litecoin-ccoins_caching.Po
./Makefile:#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_litecoin-ccoins_caching.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-mempool_eviction.o: bench/mempool_eviction.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo -c -o bench/bench_bench_litecoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po
./Makefile:#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_litecoin-mempool_eviction.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
./Makefile:bench/bench_bench_litecoin-mempool_eviction.obj: bench/mempool_eviction.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo -c -o bench/bench_bench_litecoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_litecoin-mempool_eviction.Po
./Makefile:#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_litecoin-mempool_eviction.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-verify_script.o: bench/verify_script.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo -c -o bench/bench_bench_litecoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po
./Makefile:#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_litecoin-verify_script.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
./Makefile:bench/bench_bench_litecoin-verify_script.obj: bench/verify_script.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo -c -o bench/bench_bench_litecoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_litecoin-verify_script.Po
./Makefile:#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_litecoin-verify_script.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-base58.o: bench/base58.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo -c -o bench/bench_bench_litecoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo bench/$(DEPDIR)/bench_bench_litecoin-base58.Po
./Makefile:#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_litecoin-base58.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
./Makefile:bench/bench_bench_litecoin-base58.obj: bench/base58.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo -c -o bench/bench_bench_litecoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-base58.Tpo bench/$(DEPDIR)/bench_bench_litecoin-base58.Po
./Makefile:#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_litecoin-base58.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-lockedpool.o: bench/lockedpool.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo -c -o bench/bench_bench_litecoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po
./Makefile:#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_litecoin-lockedpool.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
./Makefile:bench/bench_bench_litecoin-lockedpool.obj: bench/lockedpool.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo -c -o bench/bench_bench_litecoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_litecoin-lockedpool.Po
./Makefile:#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_litecoin-lockedpool.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-perf.o: bench/perf.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-perf.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo -c -o bench/bench_bench_litecoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo bench/$(DEPDIR)/bench_bench_litecoin-perf.Po
./Makefile:#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_litecoin-perf.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
./Makefile:bench/bench_bench_litecoin-perf.obj: bench/perf.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-perf.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo -c -o bench/bench_bench_litecoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-perf.Tpo bench/$(DEPDIR)/bench_bench_litecoin-perf.Po
./Makefile:#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_litecoin-perf.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-prevector_destructor.o: bench/prevector_destructor.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-prevector_destructor.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo -c -o bench/bench_bench_litecoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po
./Makefile:#	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_litecoin-prevector_destructor.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp
./Makefile:bench/bench_bench_litecoin-prevector_destructor.obj: bench/prevector_destructor.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-prevector_destructor.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo -c -o bench/bench_bench_litecoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_litecoin-prevector_destructor.Po
./Makefile:#	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_litecoin-prevector_destructor.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`
./Makefile:bench/bench_bench_litecoin-coin_selection.o: bench/coin_selection.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo -c -o bench/bench_bench_litecoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po
./Makefile:#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_litecoin-coin_selection.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
./Makefile:bench/bench_bench_litecoin-coin_selection.obj: bench/coin_selection.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_litecoin-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo -c -o bench/bench_bench_litecoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_litecoin-coin_selection.Po
./Makefile:#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_litecoin-coin_selection.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_litecoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_litecoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
./Makefile:litecoin_cli-bitcoin-cli.o: bitcoin-cli.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -MT litecoin_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo -c -o litecoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo $(DEPDIR)/litecoin_cli-bitcoin-cli.Po
./Makefile:#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='litecoin_cli-bitcoin-cli.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
./Makefile:litecoin_cli-bitcoin-cli.obj: bitcoin-cli.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -MT litecoin_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo -c -o litecoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_cli-bitcoin-cli.Tpo $(DEPDIR)/litecoin_cli-bitcoin-cli.Po
./Makefile:#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='litecoin_cli-bitcoin-cli.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_cli_CPPFLAGS) $(CPPFLAGS) $(litecoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
./Makefile:litecoin_tx-bitcoin-tx.o: bitcoin-tx.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -MT litecoin_tx-bitcoin-tx.o -MD -MP -MF $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo -c -o litecoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo $(DEPDIR)/litecoin_tx-bitcoin-tx.Po
./Makefile:#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='litecoin_tx-bitcoin-tx.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
./Makefile:litecoin_tx-bitcoin-tx.obj: bitcoin-tx.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -MT litecoin_tx-bitcoin-tx.obj -MD -MP -MF $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo -c -o litecoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoin_tx-bitcoin-tx.Tpo $(DEPDIR)/litecoin_tx-bitcoin-tx.Po
./Makefile:#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='litecoin_tx-bitcoin-tx.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoin_tx_CPPFLAGS) $(CPPFLAGS) $(litecoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o litecoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
./Makefile:litecoind-bitcoind.o: bitcoind.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -MT litecoind-bitcoind.o -MD -MP -MF $(DEPDIR)/litecoind-bitcoind.Tpo -c -o litecoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoind-bitcoind.Tpo $(DEPDIR)/litecoind-bitcoind.Po
./Makefile:#	$(AM_V_CXX)source='bitcoind.cpp' object='litecoind-bitcoind.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -c -o litecoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
./Makefile:litecoind-bitcoind.obj: bitcoind.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -MT litecoind-bitcoind.obj -MD -MP -MF $(DEPDIR)/litecoind-bitcoind.Tpo -c -o litecoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) $(DEPDIR)/litecoind-bitcoind.Tpo $(DEPDIR)/litecoind-bitcoind.Po
./Makefile:#	$(AM_V_CXX)source='bitcoind.cpp' object='litecoind-bitcoind.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(litecoind_CPPFLAGS) $(CPPFLAGS) $(litecoind_CXXFLAGS) $(CXXFLAGS) -c -o litecoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
./Makefile:qt/qt_litecoin_qt-bitcoin.o: qt/bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_litecoin_qt-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo -c -o qt/qt_litecoin_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_litecoin_qt-bitcoin.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_litecoin_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
./Makefile:qt/qt_litecoin_qt-bitcoin.obj: qt/bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_litecoin_qt-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo -c -o qt/qt_litecoin_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_litecoin_qt-bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_litecoin_qt-bitcoin.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_litecoin_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-compattests.o: qt/test/compattests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-compattests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-compattests.obj: qt/test/compattests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-compattests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-compattests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o: qt/test/rpcnestedtests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj: qt/test/rpcnestedtests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-rpcnestedtests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-test_main.o: qt/test/test_main.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_litecoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_litecoin_qt-test_main.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-test_main.obj: qt/test/test_main.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_litecoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-test_main.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_litecoin_qt-test_main.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-uritests.o: qt/test/uritests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-uritests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-uritests.obj: qt/test/uritests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-uritests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-uritests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
./Makefile:test/qt_test_test_litecoin_qt-test_bitcoin.o: test/test_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo -c -o test/qt_test_test_litecoin_qt-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/qt_test_test_litecoin_qt-test_bitcoin.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile:test/qt_test_test_litecoin_qt-test_bitcoin.obj: test/test_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo -c -o test/qt_test_test_litecoin_qt-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-test_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/qt_test_test_litecoin_qt-test_bitcoin.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile:test/qt_test_test_litecoin_qt-testutil.o: test/testutil.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-testutil.o -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo -c -o test/qt_test_test_litecoin_qt-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po
./Makefile:#	$(AM_V_CXX)source='test/testutil.cpp' object='test/qt_test_test_litecoin_qt-testutil.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile:test/qt_test_test_litecoin_qt-testutil.obj: test/testutil.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_litecoin_qt-testutil.obj -MD -MP -MF test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo -c -o test/qt_test_test_litecoin_qt-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Tpo test/$(DEPDIR)/qt_test_test_litecoin_qt-testutil.Po
./Makefile:#	$(AM_V_CXX)source='test/testutil.cpp' object='test/qt_test_test_litecoin_qt-testutil.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_litecoin_qt-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-paymentservertests.o: qt/test/paymentservertests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-paymentservertests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-paymentservertests.obj: qt/test/paymentservertests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-paymentservertests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-paymentservertests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-wallettests.o: qt/test/wallettests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-wallettests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-wallettests.obj: qt/test/wallettests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallettests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-wallettests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
./Makefile:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_litecoin_qt-wallet_test_fixture.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_compattests.o: qt/test/moc_compattests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_compattests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_compattests.obj: qt/test/moc_compattests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_compattests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_compattests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o: qt/test/moc_rpcnestedtests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj: qt/test/moc_rpcnestedtests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_uritests.o: qt/test/moc_uritests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_uritests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_uritests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_uritests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o: qt/test/moc_paymentservertests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj: qt/test/moc_paymentservertests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_paymentservertests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_wallettests.o: qt/test/moc_wallettests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_wallettests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
./Makefile:qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj: qt/test/moc_wallettests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_litecoin_qt-moc_wallettests.Po
./Makefile:#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_litecoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_litecoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
./Makefile:test/test_test_litecoin-arith_uint256_tests.o: test/arith_uint256_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo -c -o test/test_test_litecoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_litecoin-arith_uint256_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
./Makefile:test/test_test_litecoin-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo -c -o test/test_test_litecoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-arith_uint256_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_litecoin-arith_uint256_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-addrman_tests.o: test/addrman_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo -c -o test/test_test_litecoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_litecoin-addrman_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
./Makefile:test/test_test_litecoin-addrman_tests.obj: test/addrman_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo -c -o test/test_test_litecoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_litecoin-addrman_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_litecoin-addrman_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-amount_tests.o: test/amount_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo -c -o test/test_test_litecoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-amount_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_litecoin-amount_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
./Makefile:test/test_test_litecoin-amount_tests.obj: test/amount_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo -c -o test/test_test_litecoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-amount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-amount_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_litecoin-amount_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-allocator_tests.o: test/allocator_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo -c -o test/test_test_litecoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_litecoin-allocator_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
./Makefile:test/test_test_litecoin-allocator_tests.obj: test/allocator_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo -c -o test/test_test_litecoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-allocator_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_litecoin-allocator_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-base32_tests.o: test/base32_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo -c -o test/test_test_litecoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base32_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_litecoin-base32_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
./Makefile:test/test_test_litecoin-base32_tests.obj: test/base32_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo -c -o test/test_test_litecoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base32_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_litecoin-base32_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-base58_tests.o: test/base58_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo -c -o test/test_test_litecoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base58_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_litecoin-base58_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
./Makefile:test/test_test_litecoin-base58_tests.obj: test/base58_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo -c -o test/test_test_litecoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base58_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base58_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_litecoin-base58_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-base64_tests.o: test/base64_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo -c -o test/test_test_litecoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base64_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_litecoin-base64_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
./Makefile:test/test_test_litecoin-base64_tests.obj: test/base64_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo -c -o test/test_test_litecoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-base64_tests.Tpo test/$(DEPDIR)/test_test_litecoin-base64_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_litecoin-base64_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-bip32_tests.o: test/bip32_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo -c -o test/test_test_litecoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_litecoin-bip32_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
./Makefile:test/test_test_litecoin-bip32_tests.obj: test/bip32_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo -c -o test/test_test_litecoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bip32_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_litecoin-bip32_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-bloom_tests.o: test/bloom_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo -c -o test/test_test_litecoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_litecoin-bloom_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
./Makefile:test/test_test_litecoin-bloom_tests.obj: test/bloom_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo -c -o test/test_test_litecoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bloom_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_litecoin-bloom_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-bswap_tests.o: test/bswap_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo -c -o test/test_test_litecoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_litecoin-bswap_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
./Makefile:test/test_test_litecoin-bswap_tests.obj: test/bswap_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo -c -o test/test_test_litecoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-bswap_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_litecoin-bswap_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-checkqueue_tests.o: test/checkqueue_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo -c -o test/test_test_litecoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_litecoin-checkqueue_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
./Makefile:test/test_test_litecoin-checkqueue_tests.obj: test/checkqueue_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo -c -o test/test_test_litecoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-checkqueue_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_litecoin-checkqueue_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-coins_tests.o: test/coins_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo -c -o test/test_test_litecoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo test/$(DEPDIR)/test_test_litecoin-coins_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_litecoin-coins_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
./Makefile:test/test_test_litecoin-coins_tests.obj: test/coins_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo -c -o test/test_test_litecoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-coins_tests.Tpo test/$(DEPDIR)/test_test_litecoin-coins_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_litecoin-coins_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-compress_tests.o: test/compress_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo -c -o test/test_test_litecoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo test/$(DEPDIR)/test_test_litecoin-compress_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_litecoin-compress_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
./Makefile:test/test_test_litecoin-compress_tests.obj: test/compress_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo -c -o test/test_test_litecoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-compress_tests.Tpo test/$(DEPDIR)/test_test_litecoin-compress_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_litecoin-compress_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-crypto_tests.o: test/crypto_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o test/test_test_litecoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_litecoin-crypto_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
./Makefile:test/test_test_litecoin-crypto_tests.obj: test/crypto_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o test/test_test_litecoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_litecoin-crypto_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-cuckoocache_tests.o: test/cuckoocache_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo -c -o test/test_test_litecoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_litecoin-cuckoocache_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
./Makefile:test/test_test_litecoin-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo -c -o test/test_test_litecoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-cuckoocache_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_litecoin-cuckoocache_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-DoS_tests.o: test/DoS_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-DoS_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo -c -o test/test_test_litecoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_litecoin-DoS_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
./Makefile:test/test_test_litecoin-DoS_tests.obj: test/DoS_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-DoS_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo -c -o test/test_test_litecoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_litecoin-DoS_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_litecoin-DoS_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-getarg_tests.o: test/getarg_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo -c -o test/test_test_litecoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_litecoin-getarg_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
./Makefile:test/test_test_litecoin-getarg_tests.obj: test/getarg_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo -c -o test/test_test_litecoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_litecoin-getarg_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_litecoin-getarg_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-hash_tests.o: test/hash_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo -c -o test/test_test_litecoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-hash_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_litecoin-hash_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
./Makefile:test/test_test_litecoin-hash_tests.obj: test/hash_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo -c -o test/test_test_litecoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-hash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-hash_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_litecoin-hash_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-key_tests.o: test/key_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo -c -o test/test_test_litecoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo test/$(DEPDIR)/test_test_litecoin-key_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_litecoin-key_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
./Makefile:test/test_test_litecoin-key_tests.obj: test/key_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo -c -o test/test_test_litecoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-key_tests.Tpo test/$(DEPDIR)/test_test_litecoin-key_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_litecoin-key_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-limitedmap_tests.o: test/limitedmap_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-limitedmap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo -c -o test/test_test_litecoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_litecoin-limitedmap_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
./Makefile:test/test_test_litecoin-limitedmap_tests.obj: test/limitedmap_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-limitedmap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo -c -o test/test_test_litecoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_litecoin-limitedmap_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_litecoin-limitedmap_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-dbwrapper_tests.o: test/dbwrapper_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo -c -o test/test_test_litecoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_litecoin-dbwrapper_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
./Makefile:test/test_test_litecoin-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo -c -o test/test_test_litecoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_litecoin-dbwrapper_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_litecoin-dbwrapper_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-main_tests.o: test/main_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-main_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo -c -o test/test_test_litecoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo test/$(DEPDIR)/test_test_litecoin-main_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_litecoin-main_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
./Makefile:test/test_test_litecoin-main_tests.obj: test/main_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-main_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo -c -o test/test_test_litecoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-main_tests.Tpo test/$(DEPDIR)/test_test_litecoin-main_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_litecoin-main_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-mempool_tests.o: test/mempool_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo -c -o test/test_test_litecoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_litecoin-mempool_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
./Makefile:test/test_test_litecoin-mempool_tests.obj: test/mempool_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo -c -o test/test_test_litecoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_litecoin-mempool_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_litecoin-mempool_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-merkle_tests.o: test/merkle_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo -c -o test/test_test_litecoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_litecoin-merkle_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
./Makefile:test/test_test_litecoin-merkle_tests.obj: test/merkle_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo -c -o test/test_test_litecoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_litecoin-merkle_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_litecoin-merkle_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-miner_tests.o: test/miner_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo -c -o test/test_test_litecoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo test/$(DEPDIR)/test_test_litecoin-miner_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_litecoin-miner_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
./Makefile:test/test_test_litecoin-miner_tests.obj: test/miner_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo -c -o test/test_test_litecoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-miner_tests.Tpo test/$(DEPDIR)/test_test_litecoin-miner_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_litecoin-miner_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-multisig_tests.o: test/multisig_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo -c -o test/test_test_litecoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_litecoin-multisig_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
./Makefile:test/test_test_litecoin-multisig_tests.obj: test/multisig_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo -c -o test/test_test_litecoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_litecoin-multisig_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_litecoin-multisig_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-net_tests.o: test/net_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo -c -o test/test_test_litecoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo test/$(DEPDIR)/test_test_litecoin-net_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_litecoin-net_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
./Makefile:test/test_test_litecoin-net_tests.obj: test/net_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo -c -o test/test_test_litecoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-net_tests.Tpo test/$(DEPDIR)/test_test_litecoin-net_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_litecoin-net_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-netbase_tests.o: test/netbase_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo -c -o test/test_test_litecoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_litecoin-netbase_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
./Makefile:test/test_test_litecoin-netbase_tests.obj: test/netbase_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo -c -o test/test_test_litecoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_litecoin-netbase_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_litecoin-netbase_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-pmt_tests.o: test/pmt_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo -c -o test/test_test_litecoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_litecoin-pmt_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
./Makefile:test/test_test_litecoin-pmt_tests.obj: test/pmt_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo -c -o test/test_test_litecoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pmt_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_litecoin-pmt_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-policyestimator_tests.o: test/policyestimator_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo -c -o test/test_test_litecoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_litecoin-policyestimator_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
./Makefile:test/test_test_litecoin-policyestimator_tests.obj: test/policyestimator_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo -c -o test/test_test_litecoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_litecoin-policyestimator_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_litecoin-policyestimator_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-pow_tests.o: test/pow_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo -c -o test/test_test_litecoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pow_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_litecoin-pow_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
./Makefile:test/test_test_litecoin-pow_tests.obj: test/pow_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo -c -o test/test_test_litecoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-pow_tests.Tpo test/$(DEPDIR)/test_test_litecoin-pow_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_litecoin-pow_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-prevector_tests.o: test/prevector_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo -c -o test/test_test_litecoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_litecoin-prevector_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
./Makefile:test/test_test_litecoin-prevector_tests.obj: test/prevector_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo -c -o test/test_test_litecoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_litecoin-prevector_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_litecoin-prevector_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-raii_event_tests.o: test/raii_event_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo -c -o test/test_test_litecoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_litecoin-raii_event_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
./Makefile:test/test_test_litecoin-raii_event_tests.obj: test/raii_event_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo -c -o test/test_test_litecoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_litecoin-raii_event_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_litecoin-raii_event_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-random_tests.o: test/random_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo -c -o test/test_test_litecoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo test/$(DEPDIR)/test_test_litecoin-random_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_litecoin-random_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
./Makefile:test/test_test_litecoin-random_tests.obj: test/random_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo -c -o test/test_test_litecoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-random_tests.Tpo test/$(DEPDIR)/test_test_litecoin-random_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_litecoin-random_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-reverselock_tests.o: test/reverselock_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo -c -o test/test_test_litecoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_litecoin-reverselock_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
./Makefile:test/test_test_litecoin-reverselock_tests.obj: test/reverselock_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo -c -o test/test_test_litecoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_litecoin-reverselock_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_litecoin-reverselock_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-rpc_tests.o: test/rpc_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo -c -o test/test_test_litecoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_litecoin-rpc_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
./Makefile:test/test_test_litecoin-rpc_tests.obj: test/rpc_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo -c -o test/test_test_litecoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_litecoin-rpc_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_litecoin-rpc_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-sanity_tests.o: test/sanity_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo -c -o test/test_test_litecoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_litecoin-sanity_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
./Makefile:test/test_test_litecoin-sanity_tests.obj: test/sanity_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo -c -o test/test_test_litecoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sanity_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_litecoin-sanity_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-scheduler_tests.o: test/scheduler_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo -c -o test/test_test_litecoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_litecoin-scheduler_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
./Makefile:test/test_test_litecoin-scheduler_tests.obj: test/scheduler_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo -c -o test/test_test_litecoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scheduler_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_litecoin-scheduler_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-script_P2SH_tests.o: test/script_P2SH_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_P2SH_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo -c -o test/test_test_litecoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_litecoin-script_P2SH_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
./Makefile:test/test_test_litecoin-script_P2SH_tests.obj: test/script_P2SH_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_P2SH_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo -c -o test/test_test_litecoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_P2SH_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_litecoin-script_P2SH_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-script_tests.o: test/script_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo -c -o test/test_test_litecoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_litecoin-script_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
./Makefile:test/test_test_litecoin-script_tests.obj: test/script_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo -c -o test/test_test_litecoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-script_tests.Tpo test/$(DEPDIR)/test_test_litecoin-script_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_litecoin-script_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-scriptnum_tests.o: test/scriptnum_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo -c -o test/test_test_litecoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_litecoin-scriptnum_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
./Makefile:test/test_test_litecoin-scriptnum_tests.obj: test/scriptnum_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo -c -o test/test_test_litecoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scriptnum_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_litecoin-scriptnum_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-scrypt_tests.o: test/scrypt_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scrypt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo -c -o test/test_test_litecoin-scrypt_tests.o `test -f 'test/scrypt_tests.cpp' || echo '$(srcdir)/'`test/scrypt_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scrypt_tests.cpp' object='test/test_test_litecoin-scrypt_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scrypt_tests.o `test -f 'test/scrypt_tests.cpp' || echo '$(srcdir)/'`test/scrypt_tests.cpp
./Makefile:test/test_test_litecoin-scrypt_tests.obj: test/scrypt_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-scrypt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo -c -o test/test_test_litecoin-scrypt_tests.obj `if test -f 'test/scrypt_tests.cpp'; then $(CYGPATH_W) 'test/scrypt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scrypt_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Tpo test/$(DEPDIR)/test_test_litecoin-scrypt_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/scrypt_tests.cpp' object='test/test_test_litecoin-scrypt_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-scrypt_tests.obj `if test -f 'test/scrypt_tests.cpp'; then $(CYGPATH_W) 'test/scrypt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scrypt_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-serialize_tests.o: test/serialize_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo -c -o test/test_test_litecoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_litecoin-serialize_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
./Makefile:test/test_test_litecoin-serialize_tests.obj: test/serialize_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo -c -o test/test_test_litecoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_litecoin-serialize_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_litecoin-serialize_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-sighash_tests.o: test/sighash_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo -c -o test/test_test_litecoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_litecoin-sighash_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
./Makefile:test/test_test_litecoin-sighash_tests.obj: test/sighash_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo -c -o test/test_test_litecoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sighash_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_litecoin-sighash_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-sigopcount_tests.o: test/sigopcount_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo -c -o test/test_test_litecoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_litecoin-sigopcount_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
./Makefile:test/test_test_litecoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo -c -o test/test_test_litecoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_litecoin-sigopcount_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_litecoin-sigopcount_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-skiplist_tests.o: test/skiplist_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo -c -o test/test_test_litecoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_litecoin-skiplist_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
./Makefile:test/test_test_litecoin-skiplist_tests.obj: test/skiplist_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo -c -o test/test_test_litecoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_litecoin-skiplist_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_litecoin-skiplist_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-streams_tests.o: test/streams_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo -c -o test/test_test_litecoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo test/$(DEPDIR)/test_test_litecoin-streams_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_litecoin-streams_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
./Makefile:test/test_test_litecoin-streams_tests.obj: test/streams_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo -c -o test/test_test_litecoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-streams_tests.Tpo test/$(DEPDIR)/test_test_litecoin-streams_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_litecoin-streams_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-test_bitcoin.o: test/test_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo -c -o test/test_test_litecoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_litecoin-test_bitcoin.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
./Makefile:test/test_test_litecoin-test_bitcoin.obj: test/test_bitcoin.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo -c -o test/test_test_litecoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_litecoin-test_bitcoin.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
./Makefile:test/test_test_litecoin-test_bitcoin_main.o: test/test_bitcoin_main.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin_main.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo -c -o test/test_test_litecoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_test_litecoin-test_bitcoin_main.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp
./Makefile:test/test_test_litecoin-test_bitcoin_main.obj: test/test_bitcoin_main.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-test_bitcoin_main.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo -c -o test/test_test_litecoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_test_litecoin-test_bitcoin_main.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_test_litecoin-test_bitcoin_main.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`
./Makefile:test/test_test_litecoin-testutil.o: test/testutil.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-testutil.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-testutil.Tpo -c -o test/test_test_litecoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-testutil.Tpo test/$(DEPDIR)/test_test_litecoin-testutil.Po
./Makefile:#	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_test_litecoin-testutil.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
./Makefile:test/test_test_litecoin-testutil.obj: test/testutil.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-testutil.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-testutil.Tpo -c -o test/test_test_litecoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-testutil.Tpo test/$(DEPDIR)/test_test_litecoin-testutil.Po
./Makefile:#	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_test_litecoin-testutil.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
./Makefile:test/test_test_litecoin-timedata_tests.o: test/timedata_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo -c -o test/test_test_litecoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_litecoin-timedata_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
./Makefile:test/test_test_litecoin-timedata_tests.obj: test/timedata_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo -c -o test/test_test_litecoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_litecoin-timedata_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_litecoin-timedata_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-torcontrol_tests.o: test/torcontrol_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo -c -o test/test_test_litecoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_litecoin-torcontrol_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
./Makefile:test/test_test_litecoin-torcontrol_tests.obj: test/torcontrol_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo -c -o test/test_test_litecoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_litecoin-torcontrol_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_litecoin-torcontrol_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-transaction_tests.o: test/transaction_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo -c -o test/test_test_litecoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_litecoin-transaction_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
./Makefile:test/test_test_litecoin-transaction_tests.obj: test/transaction_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo -c -o test/test_test_litecoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_litecoin-transaction_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_litecoin-transaction_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo -c -o test/test_test_litecoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_litecoin-txvalidationcache_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
./Makefile:test/test_test_litecoin-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo -c -o test/test_test_litecoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_litecoin-txvalidationcache_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_litecoin-txvalidationcache_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-versionbits_tests.o: test/versionbits_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-versionbits_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo -c -o test/test_test_litecoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_litecoin-versionbits_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
./Makefile:test/test_test_litecoin-versionbits_tests.obj: test/versionbits_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-versionbits_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo -c -o test/test_test_litecoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_litecoin-versionbits_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_litecoin-versionbits_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-uint256_tests.o: test/uint256_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo -c -o test/test_test_litecoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_litecoin-uint256_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
./Makefile:test/test_test_litecoin-uint256_tests.obj: test/uint256_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo -c -o test/test_test_litecoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_litecoin-uint256_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_litecoin-uint256_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-univalue_tests.o: test/univalue_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-univalue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo -c -o test/test_test_litecoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_litecoin-univalue_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
./Makefile:test/test_test_litecoin-univalue_tests.obj: test/univalue_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-univalue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo -c -o test/test_test_litecoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_litecoin-univalue_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_litecoin-univalue_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
./Makefile:test/test_test_litecoin-util_tests.o: test/util_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo -c -o test/test_test_litecoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo test/$(DEPDIR)/test_test_litecoin-util_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_litecoin-util_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
./Makefile:test/test_test_litecoin-util_tests.obj: test/util_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo -c -o test/test_test_litecoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin-util_tests.Tpo test/$(DEPDIR)/test_test_litecoin-util_tests.Po
./Makefile:#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_litecoin-util_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
./Makefile:wallet/test/test_test_litecoin-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_litecoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_litecoin-wallet_test_fixture.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
./Makefile:wallet/test/test_test_litecoin-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_litecoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_test_fixture.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_litecoin-wallet_test_fixture.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
./Makefile:wallet/test/test_test_litecoin-accounting_tests.o: wallet/test/accounting_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-accounting_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo -c -o wallet/test/test_test_litecoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_litecoin-accounting_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
./Makefile:wallet/test/test_test_litecoin-accounting_tests.obj: wallet/test/accounting_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-accounting_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo -c -o wallet/test/test_test_litecoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-accounting_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_litecoin-accounting_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
./Makefile:wallet/test/test_test_litecoin-wallet_tests.o: wallet/test/wallet_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo -c -o wallet/test/test_test_litecoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_litecoin-wallet_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
./Makefile:wallet/test/test_test_litecoin-wallet_tests.obj: wallet/test/wallet_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo -c -o wallet/test/test_test_litecoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-wallet_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_litecoin-wallet_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
./Makefile:wallet/test/test_test_litecoin-crypto_tests.o: wallet/test/crypto_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o wallet/test/test_test_litecoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_litecoin-crypto_tests.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp
./Makefile:wallet/test/test_test_litecoin-crypto_tests.obj: wallet/test/crypto_tests.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_litecoin-crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo -c -o wallet/test/test_test_litecoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_litecoin-crypto_tests.Po
./Makefile:#	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_litecoin-crypto_tests.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_litecoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`
./Makefile:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o: test/test_bitcoin_fuzzy.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o -MD -MP -MF test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp
./Makefile:test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj: test/test_bitcoin_fuzzy.cpp
./Makefile:	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj -MD -MP -MF test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`
./Makefile:	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.Po
./Makefile:#	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj' libtool=no \
./Makefile:#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_litecoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_litecoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_litecoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`
./Makefile:qt/qt_litecoin_qt-macdockiconhandler.o: qt/macdockiconhandler.mm
./Makefile:	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo -c -o qt/qt_litecoin_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po
./Makefile:#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_litecoin_qt-macdockiconhandler.o' libtool=no \
./Makefile:#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
./Makefile:qt/qt_litecoin_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm
./Makefile:	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo -c -o qt/qt_litecoin_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macdockiconhandler.Po
./Makefile:#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_litecoin_qt-macdockiconhandler.obj' libtool=no \
./Makefile:#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
./Makefile:qt/qt_litecoin_qt-macnotificationhandler.o: qt/macnotificationhandler.mm
./Makefile:	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo -c -o qt/qt_litecoin_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po
./Makefile:#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_litecoin_qt-macnotificationhandler.o' libtool=no \
./Makefile:#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
./Makefile:qt/qt_litecoin_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm
./Makefile:	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_litecoin_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo -c -o qt/qt_litecoin_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
./Makefile:	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_litecoin_qt-macnotificationhandler.Po
./Makefile:#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_litecoin_qt-macnotificationhandler.obj' libtool=no \
./Makefile:#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_litecoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_litecoin_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
./Makefile:test/test_litecoin.log: test/test_litecoin$(EXEEXT)
./Makefile:	@p='test/test_litecoin$(EXEEXT)'; \
./Makefile:	b='test/test_litecoin'; \
./Makefile:qt/test/test_litecoin-qt.log: qt/test/test_litecoin-qt$(EXEEXT)
./Makefile:	@p='qt/test/test_litecoin-qt$(EXEEXT)'; \
./Makefile:	b='qt/test/test_litecoin-qt'; \
./Makefile:$(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) : | $(QT_MOC)
./Makefile:	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) qt/litecoin-qt$(EXEEXT) $(LIBBITCOINQT)
./Makefile:bitcoin_qt : qt/litecoin-qt$(EXEEXT)
./Makefile:test_bitcoin_qt : qt/test/test_litecoin-qt$(EXEEXT)
./Makefile:test_bitcoin_qt_check : qt/test/test_litecoin-qt$(EXEEXT) FORCE
Binary file ./libbitcoin_server_a-httpserver.o matches
Binary file ./qt/qt_libbitcoinqt_a-transactionrecord.o matches
./qt/bitcoin.cpp:    QMessageBox::critical(0, "Runaway exception", BitcoinGUI::tr("A fatal error occurred. Litecoin can no longer continue safely and will quit.") + QString("\n\n") + message);
./qt/networkstyle.cpp:        pixmap.load(":/icons/litecoin_splash");
Binary file ./qt/qt_libbitcoinqt_a-moc_optionsmodel.o matches
./qt/askpassphrasedialog.cpp:                 tr("Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR LITECOINS</b>!") + "<br><br>" + tr("Are you sure you wish to encrypt your wallet?"),
./qt/askpassphrasedialog.cpp:                                         "your litecoins from being stolen by malware infecting your computer.").arg(tr(PACKAGE_NAME)) +
Binary file ./qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o matches
Binary file ./qt/qt_libbitcoinqt_a-transactiondesc.o matches
./qt/sendcoinsdialog.cpp:            ui->labelCoinControlChangeLabel->setText(tr("Warning: Invalid Litecoin address"));
./qt/addressbookpage.cpp:        ui->labelExplanation->setText(tr("These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins."));
./qt/addressbookpage.cpp:        ui->labelExplanation->setText(tr("These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction."));
Binary file ./qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o matches
./qt/.deps/qt_litecoin_qt-bitcoin.Po:qt/qt_litecoin_qt-bitcoin.o: qt/bitcoin.cpp /usr/include/stdc-predef.h \
Binary file ./qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o matches
Binary file ./qt/qt_libbitcoinqt_a-coincontroldialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_editaddressdialog.o matches
./qt/res/bitcoin-qt-res.rc:            VALUE "CompanyName",        "Litecoin"
./qt/res/bitcoin-qt-res.rc:            VALUE "FileDescription",    PACKAGE_NAME " (GUI node for Litecoin)"
./qt/res/bitcoin-qt-res.rc:            VALUE "InternalName",       "litecoin-qt"
./qt/res/bitcoin-qt-res.rc:            VALUE "OriginalFilename",   "litecoin-qt.exe"
Binary file ./qt/qt_libbitcoinqt_a-moc_bantablemodel.o matches
./qt/macnotificationhandler.mm:        return @"org.litecoin.Litecoin-Qt";
Binary file ./qt/qt_libbitcoinqt_a-qvaluecombobox.o matches
./qt/paymentrequest.proto:option java_package = "org.litecoin.protocols.payments";
Binary file ./qt/qt_libbitcoinqt_a-walletmodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-splashscreen.o matches
Binary file ./qt/qt_libbitcoinqt_a-overviewpage.o matches
Binary file ./qt/qt_libbitcoinqt_a-clientmodel.o matches
./qt/bitcoingui.cpp:    sendCoinsAction->setStatusTip(tr("Send coins to a Litecoin address"));
./qt/bitcoingui.cpp:    receiveCoinsAction->setStatusTip(tr("Request payments (generates QR codes and litecoin: URIs)"));
./qt/bitcoingui.cpp:    signMessageAction->setStatusTip(tr("Sign messages with your Litecoin addresses to prove you own them"));
./qt/bitcoingui.cpp:    verifyMessageAction->setStatusTip(tr("Verify messages to ensure they were signed with specified Litecoin addresses"));
./qt/bitcoingui.cpp:    openAction->setStatusTip(tr("Open a litecoin: URI or payment request"));
./qt/bitcoingui.cpp:    showHelpMessageAction->setStatusTip(tr("Show the %1 help message to get a list with possible Litecoin command-line options").arg(tr(PACKAGE_NAME)));
./qt/bitcoingui.cpp:        tooltip = tr("%n active connection(s) to Litecoin network", "", count) + QString(".<br>") + tr("Click to disable network activity.");
./qt/bitcoingui.cpp:    QString strTitle = tr("Litecoin"); // default title
Binary file ./qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o matches
Binary file ./qt/qt_libbitcoinqt_a-intro.o matches
./qt/openuridialog.cpp:    ui->uriEdit->setPlaceholderText("litecoin:");
./qt/openuridialog.cpp:    ui->uriEdit->setText("litecoin:?r=" + QUrl::toPercentEncoding(fileUri.toString()));
Binary file ./qt/qt_libbitcoinqt_a-moc_utilitydialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o matches
Binary file ./qt/qt_libbitcoinqt_a-csvmodelwriter.o matches
Binary file ./qt/qt_libbitcoinqt_a-bitcoinamountfield.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_walletmodel.o matches
Binary file ./qt/litecoin-qt matches
Binary file ./qt/qt_libbitcoinqt_a-sendcoinsentry.o matches
./qt/guiutil.cpp:    widget->setPlaceholderText(QObject::tr("Enter a Litecoin address (e.g. %1)").arg(
./qt/guiutil.cpp:    if(!uri.isValid() || uri.scheme() != QString("litecoin"))
./qt/guiutil.cpp:    if(uri.startsWith("litecoin://", Qt::CaseInsensitive))
./qt/guiutil.cpp:        uri.replace(0, 11, "litecoin:");
./qt/guiutil.cpp:    QString ret = QString("litecoin:%1").arg(info.address);
./qt/guiutil.cpp:        return GetSpecialFolderPath(CSIDL_STARTUP) / "Litecoin.lnk";
./qt/guiutil.cpp:        return GetSpecialFolderPath(CSIDL_STARTUP) / "Litecoin (testnet).lnk";
./qt/guiutil.cpp:    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf("Litecoin (%s).lnk", chain);
./qt/guiutil.cpp:        return GetAutostartDir() / "litecoin.desktop";
./qt/guiutil.cpp:    return GetAutostartDir() / strprintf("litecoin-%s.lnk", chain);
./qt/guiutil.cpp:            optionFile << "Name=Litecoin\n";
./qt/guiutil.cpp:            optionFile << strprintf("Name=Litecoin (%s)\n", chain);
Binary file ./qt/qt_libbitcoinqt_a-utilitydialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-optionsdialog.o matches
./qt/editaddressdialog.cpp:                tr("The entered address \"%1\" is not a valid Litecoin address.").arg(ui->addressEdit->text()),
Binary file ./qt/qt_libbitcoinqt_a-bantablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-recentrequeststablemodel.o matches
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?req-dontexist="));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?dontexist="));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?label=Wikipedia Example Address"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?amount=0.001"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?amount=1.001"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?amount=100&label=Wikipedia Example"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?message=Wikipedia Example Address"));
./qt/test/uritests.cpp:    QVERIFY(GUIUtil::parseBitcoinURI("litecoin://LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?message=Wikipedia Example Address", &rv));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?req-message=Wikipedia Example Address"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?amount=1,000&label=Wikipedia Example"));
./qt/test/uritests.cpp:    uri.setUrl(QString("litecoin:LEr4HnaeFWYhBmGxCfP2po1NPRueIk8kM2?amount=1,000.0&label=Wikipedia Example"));
./qt/test/.deps/qt_test_test_litecoin_qt-moc_uritests.Po:qt/test/qt_test_test_litecoin_qt-moc_uritests.o: qt/test/moc_uritests.cpp \
./qt/test/.deps/qt_test_test_litecoin_qt-compattests.Po:qt/test/qt_test_test_litecoin_qt-compattests.o: qt/test/compattests.cpp \
./qt/test/.deps/qt_test_test_litecoin_qt-moc_rpcnestedtests.Po:qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o: \
./qt/test/.deps/qt_test_test_litecoin_qt-wallettests.Po:qt/test/qt_test_test_litecoin_qt-wallettests.o: qt/test/wallettests.cpp \
./qt/test/.deps/qt_test_test_litecoin_qt-moc_compattests.Po:qt/test/qt_test_test_litecoin_qt-moc_compattests.o: \
./qt/test/.deps/qt_test_test_litecoin_qt-paymentservertests.Po:qt/test/qt_test_test_litecoin_qt-paymentservertests.o: \
./qt/test/.deps/qt_test_test_litecoin_qt-test_main.Po:qt/test/qt_test_test_litecoin_qt-test_main.o: qt/test/test_main.cpp \
./qt/test/.deps/qt_test_test_litecoin_qt-rpcnestedtests.Po:qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o: \
./qt/test/.deps/qt_test_test_litecoin_qt-uritests.Po:qt/test/qt_test_test_litecoin_qt-uritests.o: qt/test/uritests.cpp \
./qt/test/.deps/qt_test_test_litecoin_qt-moc_wallettests.Po:qt/test/qt_test_test_litecoin_qt-moc_wallettests.o: \
./qt/test/.deps/qt_test_test_litecoin_qt-moc_paymentservertests.Po:qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o: \
Binary file ./qt/test/qt_test_test_litecoin_qt-moc_paymentservertests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-paymentservertests.o matches
./qt/test/rpcnestedtests.cpp:    std::string path = QDir::tempPath().toStdString() + "/" + strprintf("test_litecoin_qt_%lu_%i", (unsigned long)GetTime(), (int)(GetRand(100000)));
Binary file ./qt/test/test_litecoin-qt matches
Binary file ./qt/test/qt_test_test_litecoin_qt-moc_uritests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-moc_wallettests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-moc_rpcnestedtests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-moc_compattests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-rpcnestedtests.o matches
./qt/test/test_main.cpp:    app.setApplicationName("Litecoin-Qt-test");
Binary file ./qt/test/qt_test_test_litecoin_qt-compattests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-uritests.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-test_main.o matches
Binary file ./qt/test/qt_test_test_litecoin_qt-wallettests.o matches
Binary file ./qt/qt_libbitcoinqt_a-editaddressdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_intro.o matches
Binary file ./qt/qt_libbitcoinqt_a-qvalidatedlineedit.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_rpcconsole.o matches
Binary file ./qt/qt_libbitcoinqt_a-askpassphrasedialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_overviewpage.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_notificator.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_bitcoingui.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o matches
Binary file ./qt/qt_libbitcoinqt_a-transactionview.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_walletview.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_transactionview.o matches
Binary file ./qt/qt_libbitcoinqt_a-addresstablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-transactiondescdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-paymentrequest.pb.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-guiutil.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_bitcoinunits.o matches
Binary file ./qt/qt_libbitcoinqt_a-coincontroltreewidget.o matches
./qt/locale/bitcoin_be_BY.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Тут знаходзяцца Litecoin-адрасы для высылання плацяжоў. Заўсёды спраўджвайце колькасць і адрас прызначэння перад здзяйсненнем транзакцыі.</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Тут знаходзяцца Litecoin-адрасы для прымання плацяжоў. Пажадана выкарыстоўваць новы адрас для кожнай транзакцыі.</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_be_BY.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Даслаць манеты на Litecoin-адрас</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Падпісаць паведамленне з дапамогай Litecoin-адраса каб даказаць, што яно належыць вам</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Спраўдзіць паведамленне з дапамогай Litecoin-адраса каб даказаць, што яно належыць вам</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Запатрабаваць плацёж (генеруецца QR-код для litecoin URI)</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Адкрыць litecoin: URI ці запыт плацяжу</translation>
./qt/locale/bitcoin_be_BY.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_be_BY.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_zh_HK.qm matches
Binary file ./qt/locale/bitcoin_es_DO.qm matches
./qt/locale/bitcoin_de_DE.ts:        <translation>Dies sind deine Litecoin Adressen zum Senden von Zahlungsmitteln.
./qt/locale/bitcoin_es_CL.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_CL.ts:        <translation>Enviar monedas a una dirección litecoin</translation>
./qt/locale/bitcoin_es_CL.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_CL.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_CL.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_es_CL.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_es_CL.ts:        <translation>Pide pagos (genera codigos QR and litecoin: URls)</translation>
./qt/locale/bitcoin_es_CL.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_es_CL.ts:        <translation>Abre automáticamente el puerto del cliente Litecoin en el router. Esto funciona solo cuando tu router es compatible con UPnP y está habilitado.</translation>
./qt/locale/bitcoin_es_CL.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_es_CL.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_CL.ts:        <translation>litecoin core</translation>
./qt/locale/bitcoin_nl.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Dit zijn uw Litecoinadressen om betalingen mee te verzenden. Controleer altijd het bedrag en het ontvangstadres voordat u uw litecoins verzendt.</translation>
./qt/locale/bitcoin_nl.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Dit zijn uw Litecoin-adressen waarmee u betalingen kunt ontvangen. We raden u aan om een nieuw ontvangstadres voor elke transactie te gebruiken.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_nl.ts:        <translation>Waarschuwing: Als u uw portemonnee versleutelt en uw wachtwoord vergeet, zult u &lt;b&gt;AL UW LITECOINS VERLIEZEN&lt;/b&gt;!</translation>
./qt/locale/bitcoin_nl.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_nl.ts:        <translation>%1 zal nu afsluiten om het versleutelingsproces te voltooien. Onthoud dat het versleutelen van uw portemonnee u niet volledig kan beschermen: Malware kan uw computer infecteren en uw litecoins stelen.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_nl.ts:        <translation>Verstuur munten naar een Litecoinadres</translation>
./qt/locale/bitcoin_nl.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_nl.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_nl.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_nl.ts:        <translation>Onderteken berichten met uw Litecoinadressen om te bewijzen dat u deze adressen bezit</translation>
./qt/locale/bitcoin_nl.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_nl.ts:        <translation>Verifiëer handtekeningen om zeker te zijn dat de berichten zijn ondertekend met de gespecificeerde Litecoinadressen</translation>
./qt/locale/bitcoin_nl.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_nl.ts:        <translation>Vraag betaling aan (genereert QR-codes en litecoin: URI's)</translation>
./qt/locale/bitcoin_nl.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_nl.ts:        <translation>Open een litecoin: URI of betalingsverzoek</translation>
./qt/locale/bitcoin_nl.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_nl.ts:        <translation><numerusform>%n actieve verbinding met Litecoinnetwerk</numerusform><numerusform>%n actieve verbindingen met Litecoinnetwerk</numerusform></translation>
./qt/locale/bitcoin_nl.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_nl.ts:        <translation>Toon het %1 hulpbericht om een lijst te krijgen met mogelijke Litecoin commandoregelopties</translation>
./qt/locale/bitcoin_nl.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Een fatale fout heeft zich voorgedaan. Litecoin kan niet veilig worden verdergezet en wordt afgesloten.</translation>
./qt/locale/bitcoin_nl.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Het opgegeven adres "%1" is een ongeldig Litecoinadres.</translation>
./qt/locale/bitcoin_nl.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_nl.ts:        <translation>%1 zal een kopie van de Litecoin blokketen downloaden en opslaan. Tenminste %2 GB aan data wordt opgeslagen in deze map en het zal groeien in de tijd. De portemonnee wordt ook in deze map opgeslagen.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Recente transacties zijn mogelijk nog niet zichtbaar. De balans van de geldbeugel is daarom mogelijk niet correct. Deze informatie is correct van zodra de synchronisatie met het Litecoin-netwerk werd voltooid, zoals onderaan beschreven.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Poging om litecoins te besteden die door "nog niet weergegeven" transacties worden beïnvloed, worden niet door het netwerk geaccepteerd.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Open de Litecoinpoort automatisch op de router. Dit werkt alleen als de router UPnP ondersteunt en het aanstaat.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Verbind met het Litecoinnetwerk via een SOCKS5 proxy.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Maak verbinding met Litecoinnetwerk door een aparte SOCKS5-proxy voor verborgen diensten van Tor.</translation>
./qt/locale/bitcoin_nl.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_nl.ts:        <translation>De weergegeven informatie kan verouderd zijn. Uw portemonnee synchroniseert automatisch met het Litecoinnetwerk nadat een verbinding is gelegd, maar dit proces is nog niet voltooid.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_nl.ts:        <translation>Kan litecoin niet starten: click-to-pay handler</translation>
./qt/locale/bitcoin_nl.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_nl.ts:        <translation>URI kan niet verwerkt worden! Dit kan het gevolg zijn van een ongeldig Litecoin adres of misvormde URI parameters.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_nl.ts:        <translation>Voer een Litecoinadres in (bijv. %1)</translation>
./qt/locale/bitcoin_nl.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Een optioneel bericht om bij te voegen aan het betalingsverzoek, welke zal getoond worden wanneer het verzoek is geopend. Opmerking: Het bericht zal niet worden verzonden met de betaling over het Litecoinnetwerk.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_nl.ts:        <translation>De minimale toeslag betalen is prima mits het transactievolume kleiner is dan de ruimte in de blokken. Let wel op dat dit tot gevolg kan hebben dat een transactie nooit wordt bevestigd als er meer vraag is naar litecointransacties dan het netwerk kan verwerken.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_nl.ts:        <translation>Waarschuwing: Ongeldig Litecoinadres</translation>
./qt/locale/bitcoin_nl.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_nl.ts:        <translation>Het Litecoinadres om betaling aan te versturen</translation>
./qt/locale/bitcoin_nl.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_nl.ts:        <translation>De transactiekosten zal worden afgetrokken van het bedrag dat verstuurd wordt. De ontvangers zullen minder litecoins ontvangen dan ingevoerd is in het hoeveelheidsveld. Als er meerdere ontvangers geselecteerd zijn, dan worden de transactiekosten gelijk verdeeld.</translation>
./qt/locale/bitcoin_nl.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_nl.ts:        <translation>Een bericht dat werd toegevoegd aan de litecoin: URI welke wordt opgeslagen met de transactie ter referentie. Opmerking: Dit bericht zal niet worden verzonden over het Litecoinnetwerk.</translation>
./qt/locale/bitcoin_nl.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_nl.ts:        <translation>U kunt berichten/overeenkomsten ondertekenen met uw adres om te bewijzen dat u Litecoins kunt versturen. Wees voorzichtig met het ondertekenen van iets vaags of willekeurigs, omdat phishingaanvallen u kunnen proberen te misleiden tot het ondertekenen van overeenkomsten om uw identiteit aan hen toe te vertrouwen. Onderteken alleen volledig gedetailleerde verklaringen voordat u akkoord gaat.</translation>
./qt/locale/bitcoin_nl.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_nl.ts:        <translation>Het Litecoinadres om bericht mee te ondertekenen</translation>
./qt/locale/bitcoin_nl.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_nl.ts:        <translation>Onderteken een bericht om te bewijzen dat u een bepaald Litecoinadres bezit</translation>
./qt/locale/bitcoin_nl.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_nl.ts:        <translation>Het Litecoinadres waarmee het bericht ondertekend is</translation>
./qt/locale/bitcoin_nl.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_nl.ts:        <translation>Controleer een bericht om te verifiëren dat het gespecificeerde Litecoinadres het bericht heeft ondertekend.</translation>
./qt/locale/bitcoin_nl.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_nl.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_sk.qm matches
./qt/locale/bitcoin_uk.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Це ваші адреси Litecoin для надсилання платежів. Завжди перевіряйте суму та адресу одержувача перед відправленням монет.</translation>
./qt/locale/bitcoin_uk.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Це ваші адреси Litecoin для отримання платежів. Для кожної транзакції рекомендується використовувати нову адресу одержувача.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_uk.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_uk.ts:        <translation>%1 буде закрито зараз, щоб завершити процес шифрування. Пам'ятайте, що шифрування гаманця не може повністю захистити ваші litecoinи від крадіжки шкідливими програмами, у випадку якщо ваш комп'ютер буде інфіковано.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_uk.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_uk.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_uk.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_uk.ts:        <translation>Підтвердіть, що Ви є власником повідомлення підписавши його Вашою Litecoin-адресою </translation>
./qt/locale/bitcoin_uk.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_uk.ts:        <translation>Перевірте повідомлення для впевненості, що воно підписано вказаною Litecoin-адресою</translation>
./qt/locale/bitcoin_uk.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_uk.ts:        <translation>Створити запит платежу (генерує QR-код та litecoin: URI)</translation>
./qt/locale/bitcoin_uk.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_uk.ts:        <translation>Відкрити litecoin: URI чи запит платежу</translation>
./qt/locale/bitcoin_uk.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_uk.ts:        <translation><numerusform>%n активне з'єднання з мережею Litecoin</numerusform><numerusform>%n активні з'єднання з мережею Litecoin</numerusform><numerusform>%n активних з'єднань з мережею Litecoin</numerusform></translation>
./qt/locale/bitcoin_uk.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_uk.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_uk.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Введена адреса "%1" не є адресою в мережі Litecoin.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Нещодавні транзакції ще не відображаються, тому баланс вашого гаманця може бути неточним. Ця інформація буде вірною після того, як ваш гаманець завершить синхронізацію з мережею litecoin, врахровуйте показники нижче.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Спроба видправити litecoinи, які ще не відображаються, не буде прийнята мережею.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_uk.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Підключення до мережі Litecoin через SOCKS5 проксі.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Підключатися до мережі Litecoin через окремий SOCKS5 проксі для прихованих сервісів Tor.</translation>
./qt/locale/bitcoin_uk.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Показана інформація вже може бути застарілою. Ваш гаманець буде автоматично синхронізовано з мережею Litecoin після встановлення підключення, але цей процес ще не завершено.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_uk.ts:        <translation>Введіть адресу Litecoin (наприклад %1)</translation>
./qt/locale/bitcoin_uk.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Необов'язкове повідомлення на додаток до запиту платежу, котре буде показане під час відкриття запиту. Примітка: Це повідомлення не буде відправлено з платежем через мережу Litecoin.</translation>
./qt/locale/bitcoin_uk.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Оплата тільки мінімальної комісії є прийнятною, допоки обсяг транзакцій є меншим простору в блоках. Але майте на увазі, що це може анулювати транзакцію, якщо попит на Litecoin транзакції стане більшим, ніж мережа зможе обробити.</translation>
./qt/locale/bitcoin_uk.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_uk.ts:        <translation>Адреса Litecoin для відправлення платежу</translation>
./qt/locale/bitcoin_uk.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_uk.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_uk.ts:        <translation>Повідомлення, що було додане до litecoin:URI та буде збережено разом з транзакцією для довідки. Примітка: Це повідомлення не буде відправлено в мережу Litecoin.</translation>
./qt/locale/bitcoin_uk.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_uk.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_uk.ts:        <translation>Адреса Litecoin для підпису цього повідомлення</translation>
./qt/locale/bitcoin_uk.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_uk.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_uk.ts:        <translation>Адреса Litecoin, якою було підписано це повідомлення</translation>
./qt/locale/bitcoin_uk.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_uk.ts:        <translation>Перевірте повідомлення для впевненості, що воно підписано вказаною Litecoin-адресою</translation>
./qt/locale/bitcoin_uk.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_uk.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_ja.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ja.ts:        <translation>これらは支払いを送信するためのあなたの Litecoin アドレスです。コインを送信する前に、常に額と受信アドレスを確認してください。</translation>
./qt/locale/bitcoin_ja.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ja.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ja.ts:        <translation>警告: もしもあなたのウォレットを暗号化してパスフレーズを失ってしまったなら、&lt;b&gt;あなたの Litecoin はすべて失われます&lt;/b&gt;!</translation>
./qt/locale/bitcoin_ja.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ja.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ja.ts:        <translation>Litecoin アドレスにコインを送る</translation>
./qt/locale/bitcoin_ja.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ja.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ja.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ja.ts:        <translation>あなたが所有していることを証明するために、あなたの Litecoin アドレスでメッセージに署名してください</translation>
./qt/locale/bitcoin_ja.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ja.ts:        <translation>指定された Litecoin アドレスで署名されたことを確認するためにメッセージを検証します</translation>
./qt/locale/bitcoin_ja.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ja.ts:        <translation>支払いを要求する (QRコードとlitecoin:ではじまるURIを生成する)</translation>
./qt/locale/bitcoin_ja.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ja.ts:        <translation>litecoin: URIまたは支払いリクエストを開く</translation>
./qt/locale/bitcoin_ja.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ja.ts:        <translation><numerusform>%n の Litecoin ネットワークへのアクティブな接続</numerusform></translation>
./qt/locale/bitcoin_ja.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ja.ts:        <translation>有効な Litecoin のコマンドライン オプションを見るために %1 のヘルプメッセージを表示します。</translation>
./qt/locale/bitcoin_ja.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ja.ts:        <translation>致命的なエラーが発生しました。Litecoin は安全に継続することができず終了するでしょう。</translation>
./qt/locale/bitcoin_ja.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ja.ts:        <translation>入力されたアドレス "%1" は無効な Litecoin アドレスです。</translation>
./qt/locale/bitcoin_ja.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ja.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_ja.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_ja.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ja.ts:        <translation>自動的にルーター上の Litecoin クライアントのポートを開きます。あなたのルーターが UPnP に対応していて、それが有効になっている場合に作動します。</translation>
./qt/locale/bitcoin_ja.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ja.ts:        <translation>SOCKS5 プロキシ経由でLitecoinネットワークに接続する</translation>
./qt/locale/bitcoin_ja.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ja.ts:        <translation>Tor秘匿サービスを利用するため、独立なSOCKS5プロキシ経由でLitecoinネットワークに接続する</translation>
./qt/locale/bitcoin_ja.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ja.ts:        <translation>表示された情報は古いかもしれません。接続が確立されると、あなたのウォレットは Litecoin ネットワークと自動的に同期しますが、このプロセスはまだ完了していません。</translation>
./qt/locale/bitcoin_ja.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ja.ts:        <translation>Litecoin を起動できません: click-to-pay handler</translation>
./qt/locale/bitcoin_ja.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ja.ts:        <translation>URI を解析できません! これは無効な Litecoin アドレスあるいや不正な形式の URI パラメーターによって引き起こされる場合があります。</translation>
./qt/locale/bitcoin_ja.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ja.ts:        <translation>Litecoinアドレスを入力してください (例 %1)</translation>
./qt/locale/bitcoin_ja.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ja.ts:        <translation>支払リクエストが開始された時に表示される、支払リクエストに添える任意のメッセージです。注意：メッセージはLitecoinネットワークを通じて、支払と共に送られるわけではありません。</translation>
./qt/locale/bitcoin_ja.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ja.ts:        <translation>ブロックの容量に比べてトランザクション流量が少ないうちは最小手数料のみの支払で十分です。しかしながらネットワークが処理しきれないほどlitecoinトランザクションの需要がひとたび生まれてしまった場合には、永遠に検証がされないトランザクションになってしまう可能性があることに注意してください。</translation>
./qt/locale/bitcoin_ja.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ja.ts:        <translation>警告：無効なLitecoinアドレスです</translation>
./qt/locale/bitcoin_ja.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ja.ts:        <translation>支払の送金先Litecoinアドレス</translation>
./qt/locale/bitcoin_ja.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ja.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ja.ts:        <translation>litecoin: URIに添付されていたメッセージです。これは参照用としてトランザクションとともに保存されます。注意：このメッセージはLitecoinネットワークを通して送信されるわけではありません。</translation>
./qt/locale/bitcoin_ja.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ja.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ja.ts:        <translation>メッセージを署名するLitecoinアドレス</translation>
./qt/locale/bitcoin_ja.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ja.ts:        <translation>この Litecoin アドレスを所有していることを証明するためにメッセージに署名</translation>
./qt/locale/bitcoin_ja.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ja.ts:        <translation>メッセージの署名に使われたLitecoinアドレス</translation>
./qt/locale/bitcoin_ja.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ja.ts:        <translation>指定された Litecoin アドレスで署名されたことを保証するメッセージを検証</translation>
./qt/locale/bitcoin_ja.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ja.ts:        <translation>Litecoin のコア</translation>
Binary file ./qt/locale/bitcoin_ro_RO.qm matches
Binary file ./qt/locale/bitcoin_bg.qm matches
./qt/locale/bitcoin_el_GR.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Αυτές είναι οι Litecoin διευθύνσεις σας για να στέλνετε πληρωμές. Να ελέγχετε πάντα το ποσό, καθώς και τη διεύθυνση παραλήπτη πριν στείλετε νομίσματα.</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Αυτές είναι οι Litecoin διευθύνσεις σας για να λαμβάνετε πληρωμές. Προτείνετε να χρησιμοποιείτε μια νέα διεύθυνση παραλήπτη για κάθε συναλλαγή.</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Στείλε νομίσματα σε μια διεύθυνση litecoin</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_el_GR.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Υπογράψτε ένα μήνυμα για ν' αποδείξετε πως ανήκει μια συγκεκριμένη διεύθυνση Litecoin</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Αίτηση πληρωμών (δημιουργεί QR codes και διευθύνσεις litecoin: )</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Άνοιγμα litecoin: URI αίτησης πληρωμής</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Αυτόματο άνοιγμα των θυρών Litecoin στον δρομολογητή. Λειτουργεί μόνο αν ο δρομολογητής σας υποστηρίζει τη λειτουργία UPnP.</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Σύνδεση στο Litecoin δίκτυο μέσω διαμεσολαβητή SOCKS5 (π.χ. για σύνδεση μέσω Tor)</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Οι πληροφορίες που εμφανίζονται μπορεί να είναι ξεπερασμένες. Το πορτοφόλι σας συγχρονίζεται αυτόματα με το δίκτυο Litecoin μετά από μια σύνδεση, αλλά αυτή η διαδικασία δεν έχει ακόμη ολοκληρωθεί. </translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Εισάγετε μια διεύθυνση Litecoin (π.χ. %1)</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Η διεύθυνση Litecoin που θα σταλεί η πληρωμή</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Διεύθυνση Litecoin που θα σταλεί το μήνυμα</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Υπογράψτε ένα μήνυμα για ν' αποδείξετε πως σας ανήκει μια συγκεκριμένη διεύθυνση Litecoin</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Διεύθυνση Litecoin η οποία το μήνυμα έχει υπογραφεί</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Υπογράψτε ένα μήνυμα για ν' αποδείξετε πως υπογραφθηκε απο μια συγκεκριμένη διεύθυνση Litecoin</translation>
./qt/locale/bitcoin_el_GR.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_el_GR.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_eo.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_eo.ts:        <translation>Jen viaj Litecoin-adresoj por sendi pagojn. Zorge kontrolu la sumon kaj la alsendan adreson antaŭ ol sendi.</translation>
./qt/locale/bitcoin_eo.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_eo.ts:        <translation>Jen viaj litecoinj adresoj por ricevi pagojn. Estas konsilinde uzi apartan ricevan adreson por ĉiu transakcio.</translation>
./qt/locale/bitcoin_eo.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_eo.ts:        <translation>Sendi monon al Litecoin-adreso</translation>
./qt/locale/bitcoin_eo.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_eo.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_eo.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_eo.ts:        <translation>Subskribi mesaĝojn per via Litecoin-adresoj por pravigi, ke vi estas la posedanto</translation>
./qt/locale/bitcoin_eo.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_eo.ts:        <translation>Kontroli mesaĝojn por kontroli ĉu ili estas subskribitaj per specifaj Litecoin-adresoj</translation>
./qt/locale/bitcoin_eo.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_eo.ts:        <translation>Peti pagon (kreas QR-kodojn kaj URI-ojn kun prefikso litecoin:)</translation>
./qt/locale/bitcoin_eo.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_eo.ts:        <translation>Malfermi litecoin:-URI-on aŭ pagpeton</translation>
./qt/locale/bitcoin_eo.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_eo.ts:        <translation>Aŭtomate malfermi la kursilan pordon por Litecoino. Tio funkcias nur se via kursilo havas la UPnP-funkcion, kaj se tiu ĉi estas ŝaltita.</translation>
./qt/locale/bitcoin_eo.ts:        <translation>Elekti la defaŭltan manieron por montri litecoinjn sumojn en la interfaco, kaj kiam vi sendos bitmonon.</translation>
./qt/locale/bitcoin_eo.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_eo.ts:        <translation>Eblas, ke la informoj videblaj ĉi tie estas eksdataj. Via monujo aŭtomate sinkoniĝas kun la litecoin reto kiam ili konektiĝas, sed tiu procezo ankoraŭ ne finfariĝis.</translation>
./qt/locale/bitcoin_eo.ts:        <translation>Sendi Litecoinn</translation>
./qt/locale/bitcoin_eo.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_eo.ts:        <translation>Subskribi la mesaĝon por pravigi, ke vi estas la posedanto de tiu Litecoin-adreso</translation>
./qt/locale/bitcoin_eo.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_eo.ts:        <translation>Kontroli la mesaĝon por pravigi, ke ĝi ja estas subskribita per la specifa Litecoin-adreso</translation>
./qt/locale/bitcoin_eo.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_eo.ts:        <translation>Kerno de Litecoino</translation>
Binary file ./qt/locale/bitcoin_mn.qm matches
./qt/locale/bitcoin_id_ID.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Ini adalah alamat- alamat Litecoin Anda untuk mengirimkan pembayaran. Selalu periksa jumlah dan alamat penerima sebelum mengirimkan koin.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Ini adalah alamat- alamat Litecoin Anda untuk menerima pembayaran. Dianjurkan untuk menggunakan alamat penerima yang baru setiap melakukan transaksi.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Peringatan: Jika Anda enkripsi dompet Anda dan lupa kata sandi anda, Anda akan &lt;b&gt;KEHILANGAN SEMUA LITECOIN ANDA&lt;/b&gt;!</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_id_ID.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Kirim koin ke alamat Litecoin</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Tanda tangani sebuah pesan menggunakan alamat Litecoin Anda untuk membuktikan bahwa Anda adalah pemilik alamat tersebut</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Verifikasi pesan untuk memastikan bahwa pesan tersebut ditanda tangani oleh suatu alamat Litecoin tertentu</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Permintaan pembayaran (membuat kode QR dan litecoin: URIs)</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Buka URI litecoin: atau permintaan pembayaran</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_id_ID.ts:        <translation><numerusform>%n koneksi aktif ke jaringan Litecoin</numerusform></translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Tampilkan %1 pesan bantuan untuk mendapatkan daftar opsi baris perintah Litecoin yang memungkinkan</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Terjadi Kesalahan Fatal. Litecoin Tidak Dapat Melanjutkan Dengan Aman Dan Akan Keluar</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Alamat yang dimasukkan "%1" bukanlah alamat Litecoin yang valid.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Otomatis membuka port client Litecoin di router. Hanya berjalan apabila router anda mendukung UPnP dan di-enable.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Hubungkan ke jaringan Litecoin melalui SOCKS5 proxy.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Informasi terlampir mungkin sudah kedaluwarsa. Dompet Anda secara otomatis mensinkronisasi dengan jaringan Litecoin ketika sebuah hubungan terbentuk, namun proses ini belum selesai.</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Masukkan alamat Litecoin (contoh %1)</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Tandai pesan untuk menyetujui kamu pemiliki alamat Litecoin ini</translation>
./qt/locale/bitcoin_id_ID.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_id_ID.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_es_CO.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_CO.ts:        <translation>Enviando monedas a una dirección de Litecoin</translation>
./qt/locale/bitcoin_es_CO.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_CO.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_CO.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_CO.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_eu_ES.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_eu_ES.ts:        <translation>Hauek dira zure Litecoin helbideak dirua bidaltzeko. Beti egiaztatu diru-kantitatea eta jasotzeko helbidea bidali baino lehen.</translation>
./qt/locale/bitcoin_eu_ES.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_eu_ES.ts:        <translation>Hauek dira zure Litecoin helbideak dirua jasotzeko. Gomendagarria da erabiltzea jasotzeko helbide berri bat operazio bakoitzeko.</translation>
./qt/locale/bitcoin_eu_ES.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_eu_ES.ts:        <translation>Abisua: Zuk enkriptatzen baduzu zure diruzorroa eta zure pasahitza galtzen baduzu, &lt;b&gt;LITECOIN GUZTIAK GALDUKO DITUZU&lt;/b&gt;!</translation>
./qt/locale/bitcoin_eu_ES.ts:        <translation>Erakutsi Litecoin-i buruzko informazioa</translation>
Binary file ./qt/locale/bitcoin_uz@Cyrl.qm matches
Binary file ./qt/locale/bitcoin_nl_NL.qm matches
./qt/locale/bitcoin_en.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_en.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_en.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_en.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_en.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_en.ts:        <translation>Send coins to a Litecoin address</translation>
./qt/locale/bitcoin_en.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_en.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_en.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_en.ts:        <translation>Sign messages with your Litecoin addresses to prove you own them</translation>
./qt/locale/bitcoin_en.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_en.ts:        <translation>Verify messages to ensure they were signed with specified Litecoin addresses</translation>
./qt/locale/bitcoin_en.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_en.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_en.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_en.ts:            <numerusform>%n active connection to Litecoin network</numerusform>
./qt/locale/bitcoin_en.ts:            <numerusform>%n active connections to Litecoin network</numerusform>
./qt/locale/bitcoin_en.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_en.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_en.ts:        <source>The entered address &quot;%1&quot; is not a valid Litecoin address.</source>
./qt/locale/bitcoin_en.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_en.ts:        <translation type="unfinished">Litecoin</translation>
./qt/locale/bitcoin_en.ts:        <source>%1 will download and store a copy of the Litecoin block chain.</source>
./qt/locale/bitcoin_en.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet&apos;s balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_en.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_en.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_en.ts:        <translation>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</translation>
./qt/locale/bitcoin_en.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_en.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_en.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_en.ts:        <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</translation>
./qt/locale/bitcoin_en.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_en.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_en.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_en.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_en.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_en.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_en.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_en.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_en.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_en.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_en.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_en.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_en.ts:        <translation>Sign the message to prove you own this Litecoin address</translation>
./qt/locale/bitcoin_en.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_en.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_en.ts:        <translation>Verify the message to ensure it was signed with the specified Litecoin address</translation>
./qt/locale/bitcoin_en.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_en.ts:        <translation type="unfinished">Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_fr.qm matches
Binary file ./qt/locale/bitcoin_uk.qm matches
Binary file ./qt/locale/bitcoin_mk_MK.qm matches
Binary file ./qt/locale/bitcoin_id_ID.qm matches
Binary file ./qt/locale/bitcoin_zh_TW.qm matches
Binary file ./qt/locale/bitcoin_hr.qm matches
Binary file ./qt/locale/bitcoin_fa.qm matches
./qt/locale/bitcoin_nb_NO.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Dette er dine Litecoin adresser for å sende  å sende betalinger. Husk å sjekke beløp og mottager adresser før du sender mynter.</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Dette er dine Litecoin adresse for å motta betalinger. Det er anbefalt å bruke en ny mottager adresse for hver transaksjon.</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Advarsel: Dersom du krypterer lommeboken og mister passordsetningen vil du &lt;b&gt;MISTE ALLE DINE LITECOIN&lt;/b&gt;!</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>%1 vil nå lukkes for å fullføre krypteringsprosessen. Husk at å kryptere lommeboken ikke kan beskytte dine litecoin fullstendig fra å bli stjålet av skadelig programvare som har infisert datamaskinen din.</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Send mynter til en Litecoin adresse</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Signer meldingene med Litecoin adresse for å bevise at diu eier dem</translation>
./qt/locale/bitcoin_nb_NO.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_nb_NO.ts:        <translation>Verifiser meldinger for å sikre at de ble signert med en angitt Litecoin adresse</translation>
Binary file ./qt/locale/bitcoin_ca@valencia.qm matches
Binary file ./qt/locale/bitcoin_la.qm matches
./qt/locale/bitcoin_ro.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ro.ts:        <translation>Trimite monedele către o adresă Litecoin</translation>
./qt/locale/bitcoin_ro.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ro.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ro.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ro.ts:        <translation>Semnează mesajele cu adresa ta de Litecoin pentru a face dovada că îți aparțin.</translation>
./qt/locale/bitcoin_ro.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ro.ts:        <translation>Verifică mesajele cu scopul de a asigura faptul că au fost semnate cu adresa de Litecoin specificată.</translation>
./qt/locale/bitcoin_ro.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ro.ts:        <translation>Cerere plată (generează coduri QR și litecoin: URIs)</translation>
./qt/locale/bitcoin_ro.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ro.ts:        <translation>Deschide un litecoin: URI sau cerere de plată</translation>
./qt/locale/bitcoin_ro.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ro.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_fi.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Nämä ovat Litecoin-osoitteesi maksujen lähettämistä varten. Tarkista aina määrä ja vastaanotto-osoite ennen kolikoiden lähettämistä.</translation>
./qt/locale/bitcoin_fi.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Tässä ovat Litecoin vastaanotto-osoitteesi. On suositeltavaa käyttää uutta vastaanotto-osoitetta jokaista lähetystä varten.</translation>
./qt/locale/bitcoin_fi.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_fi.ts:        <translation>Varoitus: Jos salaat lompakkosi ja menetät tunnuslauseesi, &lt;b&gt;MENETÄT KAIKKI LITECOINISI&lt;/b&gt;!</translation>
./qt/locale/bitcoin_fi.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_fi.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_fi.ts:        <translation>Lähetä kolikoita Litecoin-osoitteeseen</translation>
./qt/locale/bitcoin_fi.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_fi.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_fi.ts:        <translation>Näytä tai piilota Litecoin-ikkuna</translation>
./qt/locale/bitcoin_fi.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_fi.ts:        <translation>Allekirjoita viestisi omalla Litecoin -osoitteellasi todistaaksesi, että omistat ne</translation>
./qt/locale/bitcoin_fi.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_fi.ts:        <translation>Varmista, että viestisi on allekirjoitettu määritetyllä Litecoin -osoitteella</translation>
./qt/locale/bitcoin_fi.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_fi.ts:        <translation>Pyydä maksuja (Luo QR koodit ja litecoin: URIt)</translation>
./qt/locale/bitcoin_fi.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_fi.ts:        <translation>Avaa litecoin: URI tai maksupyyntö</translation>
./qt/locale/bitcoin_fi.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_fi.ts:        <translation><numerusform>%n aktiivinen yhteys Litecoin-verkkoon</numerusform><numerusform>%n aktiivista yhteyttä Litecoin-verkkoon</numerusform></translation>
./qt/locale/bitcoin_fi.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_fi.ts:        <translation>Näytä %1 ohjeet saadaksesi listan mahdollisista Litecoinin komentorivivalinnoista</translation>
./qt/locale/bitcoin_fi.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Peruuttamaton virhe on tapahtunut. Litecoin ei voi enää jatkaa turvallisesti ja sammutetaan.</translation>
./qt/locale/bitcoin_fi.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Antamasi osoite "%1" ei ole kelvollinen Litecoin-osoite.</translation>
./qt/locale/bitcoin_fi.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_fi.ts:        <translation>%1 lataa ja tallentaa kopion Litecoinin lohkoketjusta. Vähintään %2Gt dataa tullaan tallentamaan tähän hakemistoon, ja tarve kasvaa ajan myötä. Lompakko tullaan myös tallentamaan tähän hakemistoon.</translation>
./qt/locale/bitcoin_fi.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Avaa Litecoin-asiakasohjelman portti reitittimellä automaattisesti. Tämä toimii vain, jos reitittimesi tukee UPnP:tä ja se on käytössä.</translation>
./qt/locale/bitcoin_fi.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Yhdistä Litecoin-verkkoon SOCKS5-välityspalvelimen kautta.</translation>
./qt/locale/bitcoin_fi.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Yhdistä Litecoin-verkkoon erillisen SOCKS5-välityspalvelimen kautta piilotettuja Tor-palveluja varten.</translation>
./qt/locale/bitcoin_fi.ts:        <translation>Yksikkö jona litecoin-määrät näytetään</translation>
./qt/locale/bitcoin_fi.ts:        <translation>Valitse mitä yksikköä käytetään ensisijaisesti litecoin-määrien näyttämiseen.</translation>
./qt/locale/bitcoin_fi.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Näytetyt tiedot eivät välttämättä ole ajantasalla. Lompakkosi synkronoituu Litecoin-verkon kanssa automaattisesti yhteyden muodostamisen jälkeen, mutta synkronointi on vielä meneillään.</translation>
./qt/locale/bitcoin_fi.ts:        <translation>Tililläsi tällä hetkellä olevien Litecoinien määrä</translation>
./qt/locale/bitcoin_fi.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_fi.ts:        <translation>Syötä Litecoin-osoite (esim. %1)</translation>
./qt/locale/bitcoin_fi.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Valinnainen viesti liitetään maksupyyntöön ja näytetään avattaessa. Viestiä ei lähetetä Litecoin-verkkoon.</translation>
./qt/locale/bitcoin_fi.ts:        <translation>Lähetä Litecoineja</translation>
./qt/locale/bitcoin_fi.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_fi.ts:        <translation>Litecoin-osoite johon maksu lähetetään</translation>
./qt/locale/bitcoin_fi.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Kulu vähennetään lähetettävästä määrästä. Saaja vastaanottaa vähemmän litecoineja kuin merkitset Määrä-kenttään. Jos saajia on monia, kulu jaetaan tasan.</translation>
./qt/locale/bitcoin_fi.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_fi.ts:        <translation>Viesti joka liitettiin litecoin: URI:iin tallennetaan rahansiirtoon viitteeksi. Tätä viestiä ei lähetetä Litecoin-verkkoon.</translation>
./qt/locale/bitcoin_fi.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_fi.ts:        <translation>Litecoin-osoite jolla viesti allekirjoitetaan</translation>
./qt/locale/bitcoin_fi.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_fi.ts:        <translation>Allekirjoita viesti todistaaksesi, että omistat tämän Litecoin-osoitteen</translation>
./qt/locale/bitcoin_fi.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_fi.ts:        <translation>Litecoin-osoite jolla viesti on allekirjoitettu</translation>
./qt/locale/bitcoin_fi.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_fi.ts:        <translation>Tarkista viestin allekirjoitus varmistaaksesi, että se allekirjoitettiin tietyllä Litecoin-osoitteella</translation>
./qt/locale/bitcoin_fi.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_fi.ts:        <translation>Litecoin-ydin</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Estas son sus direcciones Litecoin para enviar pagos. Verifique siempre la cantidad y la dirección de destino antes de enviar monedas.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Estas son sus direcciones Litecoin para recibir pagos. Se recomienda utilizar una nueva dirección de recepción para cada transacción</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Advertencia: Si encripta su monedero y pierde su frase clave &lt;b&gt;PERDERÁ TODOS SUS LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_es_ES.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Enviar litecoins a una dirección Litecoin</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Firmar mensajes con sus direcciones Litecoin para demostrar la propiedad</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Verificar mensajes comprobando que están firmados con direcciones Litecoin concretas</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Solicitar pagos (generando códigos QR e identificadores URI "litecoin:")</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Abrir un identificador URI "litecoin:" o una petición de pago</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_es_ES.ts:        <translation><numerusform>%n conexión activa hacia la red Litecoin</numerusform><numerusform>%n conexiones activas hacia la red Litecoin</numerusform></translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Mostrar el mensaje de ayuda %1 para obtener una lista de los posibles comandos de linea de comandos de Litecoin</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Ha ocurrido un error fatal. Litecoin no puede continuar de manera segura y se cerrará.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>La dirección introducida "%1" no es una dirección Litecoin válida.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>%1 va a descargar y almacenar una copia de la cadena de bloques de Litecoin. Al menos %2GB de datos seran almacenados en este directorio, que ira creciendo con el tiempo. El monedero se guardara tambien en ese directorio. </translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Las transacciones recientes podrían no ser visibles todavía, por lo que el balance de la cartera podría ser incorrecto. Esta información será correcta una vez su cartera se haya terminado de sincronizar con la red litecoin, como se detalla más abajo.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Abrir automáticamente el puerto del cliente Litecoin en el router. Esta opción solo funciona si el router admite UPnP y está activado.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Conectarse a la red Litecoin a través de un proxy SOCKS5.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Conectar a la red Litecoin mediante un proxy SOCKS5 por separado para los servicios ocultos de Tor.</translation>
./qt/locale/bitcoin_es_ES.ts:        <translation>Elegir la subdivisión predeterminada para mostrar cantidades en la interfaz y cuando se envían litecoins.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>La información mostrada puede estar desactualizada. Su monedero se sincroniza automáticamente con la red Litecoin después de que se haya establecido una conexión, pero este proceso aún no se ha completado.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>No se puede iniciar litecoin: encargado click-para-pagar</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>URI no puede ser analizado! Esto puede ser causado por una dirección Litecoin inválida o parametros URI mal formados.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Introducir una dirección Litecoin (p. ej. %1)</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Un mensaje opcional para adjuntar a la solicitud de pago, que se muestra cuando se abre la solicitud. Nota: El mensaje no se enviará con el pago por la red Litecoin.</translation>
./qt/locale/bitcoin_es_ES.ts:        <translation>Enviar litecoins</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Pagando solamente la cuota mínima es correcto, siempre y cuando haya menos volumen de transacciones que el espacio en los bloques. Pero tenga en cuenta que esto puede terminar en una transacción nunca confirmada, una vez que haya más demanda para transacciones Litecoin que la red pueda procesar.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Alerta: dirección Litecoin inválida</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Dirección Litecoin a la que enviar el pago</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>La cuota será deducida de la cantidad que sea mandada. El destinatario recibirá menos litecoins de los que entres en el  </translation>
./qt/locale/bitcoin_es_ES.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Un mensaje que se adjuntó a la litecoin: URL que será almacenada con la transacción para su referencia. Nota: Este mensaje no se envía a través de la red Litecoin.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_es_ES.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Dirección Litecoin con la que firmar el mensaje</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Firmar el mensaje para demostrar que se posee esta dirección Litecoin</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>La dirección Litecoin con la que se firmó el mensaje</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Verificar el mensaje para comprobar que fue firmado con la dirección Litecoin indicada</translation>
./qt/locale/bitcoin_es_ES.ts:        <translation>Los litecoins generados deben madurar %1 bloques antes de que puedan gastarse. Cuando generó este bloque, se transmitió a la red para que se añadiera a la cadena de bloques. Si no consigue entrar en la cadena, su estado cambiará a "no aceptado" y ya no se podrá gastar. Esto puede ocurrir ocasionalmente si otro nodo genera un bloque a pocos segundos del suyo.</translation>
./qt/locale/bitcoin_es_ES.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_ES.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_fr.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Voici vos adresses Litecoin pour envoyer des paiements. Vérifiez toujours le montant et l'adresse du destinataire avant d'envoyer des pièces.</translation>
./qt/locale/bitcoin_fr.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Voici vos adresses Litecoin pour recevoir des paiements. Il est recommandé d'utiliser une nouvelle adresse de réception pour chaque transaction.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_fr.ts:        <translation>Avertissement : si vous chiffrez votre porte-monnaie et perdez votre phrase de passe, vous &lt;b&gt;PERDREZ TOUS VOS LITECOINS&lt;/b&gt; !</translation>
./qt/locale/bitcoin_fr.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_fr.ts:        <translation>%1 va maintenant se fermer pour terminer le processus de chiffrement. Souvenez-vous que le chiffrement de votre porte-monnaie ne peut pas protéger entièrement vos litecoins contre le vol par des logiciels malveillants qui infecteraient votre ordinateur.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_fr.ts:        <translation>Envoyer des pièces à une adresse Litecoin</translation>
./qt/locale/bitcoin_fr.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_fr.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_fr.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_fr.ts:        <translation>Signer les messages avec vos adresses Litecoin pour prouver que vous les détenez</translation>
./qt/locale/bitcoin_fr.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_fr.ts:        <translation>Vérifier les messages pour s'assurer qu'ils ont été signés avec les adresses Litecoin spécifiées</translation>
./qt/locale/bitcoin_fr.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_fr.ts:        <translation>Demander des paiements (génère des codes QR et des URI litecoin:)</translation>
./qt/locale/bitcoin_fr.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_fr.ts:        <translation>Ouvrir une URI litecoin: ou une demande de paiement</translation>
./qt/locale/bitcoin_fr.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_fr.ts:        <translation><numerusform>%n connexion active avec le réseau Litecoin</numerusform><numerusform>%n connexions actives avec le réseau Litecoin</numerusform></translation>
./qt/locale/bitcoin_fr.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_fr.ts:        <translation>Afficher le message d'aide de %1 pour obtenir la liste des options de ligne de commande Litecoin possibles.</translation>
./qt/locale/bitcoin_fr.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Une erreur fatale est survenue. Litecoin ne peut plus continuer en toute sécurité et va s'arrêter.</translation>
./qt/locale/bitcoin_fr.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_fr.ts:        <translation>L'adresse saisie « %1 » n'est pas une adresse Litecoin valide.</translation>
./qt/locale/bitcoin_fr.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_fr.ts:        <translation>%1 téléchargera et stockera une copie de la chaîne de blocs de Litecoin. Au moins %2 Go de données seront stockés dans ce répertoire et sa taille augmentera avec le temps. Le porte-monnaie sera également stocké dans ce répertoire.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Les transactions récentes ne sont peut-être pas encore visibles et par conséquent le solde de votre porte-monnaie est peut-être erroné. Cette information sera juste quand votre porte-monnaie aura fini de se synchroniser avec le réseau Litecoin, comme décrit ci-dessous.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Toute tentative de dépense de litecoins affectés par des transactions qui ne sont pas encore affichées ne sera pas acceptée par le réseau.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Ouvrir automatiquement le port du client Litecoin sur le routeur. Cela ne fonctionne que si votre routeur prend en charge l'UPnP et si la fonction est activée.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Se connecter au réseau Litecoin par un mandataire SOCKS5.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Se connecter au réseau Litecoin au travers d'un mandataire SOCKS5 séparé pour les services cachés de Tor.</translation>
./qt/locale/bitcoin_fr.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Les informations affichées peuvent être obsolètes. Votre porte-monnaie est automatiquement synchronisé avec le réseau Litecoin lorsque la connexion s'établit, or ce processus n'est pas encore terminé.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_fr.ts:        <translation>Impossible de démarrer le gestionnaire de cliquer-pour-payer litecoin:</translation>
./qt/locale/bitcoin_fr.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_fr.ts:        <translation>L'URI ne peut pas être analysée ! Cela peut être causé par une adresse Litecoin invalide ou par des paramètres d'URI mal formés.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_fr.ts:        <translation>Saisir une adresse Litecoin (p. ex. %1)</translation>
./qt/locale/bitcoin_fr.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Un message facultatif à joindre à la demande de paiement et qui sera affiché à l'ouverture de celle-ci. Note : le message ne sera pas envoyé avec le paiement par le réseau Litecoin.</translation>
./qt/locale/bitcoin_fr.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_fr.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_fr.ts:        <translation>Avertissement : adresse Litecoin invalide</translation>
./qt/locale/bitcoin_fr.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_fr.ts:        <translation>L'adresse Litecoin à laquelle envoyer le paiement</translation>
./qt/locale/bitcoin_fr.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Les frais seront déduits du montant envoyé. Le destinataire recevra moins de litecoins que le montant saisi dans le champ de montant. Si plusieurs destinataires sont sélectionnés, les frais seront partagés également..</translation>
./qt/locale/bitcoin_fr.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Un message qui était joint à l'URI litecoin: et qui sera stocké avec la transaction pour référence. Note : ce message ne sera pas envoyé par le réseau Litecoin.</translation>
./qt/locale/bitcoin_fr.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_fr.ts:        <translation>Vous pouvez signer des messages ou des accords avec vos adresses pour prouver que vous pouvez recevoir des litecoins à ces dernières. Faites attention de ne rien signer de vague ou au hasard, car des attaques d'hameçonnage pourraient essayer de vous faire signer avec votre identité afin de l'usurper. Ne signez que des déclarations entièrement détaillées et avec lesquelles vous êtes d'accord.</translation>
./qt/locale/bitcoin_fr.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_fr.ts:        <translation>L'adresse Litecoin avec laquelle signer le message</translation>
./qt/locale/bitcoin_fr.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_fr.ts:        <translation>Signer le message afin de prouver que vous détenez cette adresse Litecoin</translation>
./qt/locale/bitcoin_fr.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_fr.ts:        <translation>L'adresse Litecoin avec laquelle le message a été signé</translation>
./qt/locale/bitcoin_fr.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_fr.ts:        <translation>Vérifier le message pour s'assurer qu'il a été signé avec l'adresse Litecoin spécifiée</translation>
./qt/locale/bitcoin_fr.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_fr.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_ca_ES.qm matches
./qt/locale/bitcoin_pt_BR.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Aviso: Se você criptografar sua carteira e perder sua senha, você vai &lt;b&gt;PERDER TODOS OS SEUS LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Enviar moedas para um endereço litecoin</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Assine mensagens com seus endereços Litecoin para provar que você é dono delas</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Verificar mensagens para se assegurar que elas foram assinadas pelo dono de Endereços Litecoin específicos</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Solicitações de pagamentos (gera códigos QR e litecoin: URIs)</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Abrir um litecoin: URI ou cobrança</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation><numerusform>%n conexão ativa na rede Litecoin</numerusform><numerusform>%n conexões ativas na rede Litecoin</numerusform></translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Mostrar a mensagem de ajuda do %1 para obter uma lista com possíveis opções de linha de comando Litecoin</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Um erro fatal ocorreu. Litecoin não pode continuar em segurança e irá fechar.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>O %1 irá baixar e armazenar uma cópia do block chain do Litecoin. Pelo menos %2GB de dados serão armazenados neste diretório, e ele crescerá ao longo do tempo. A carteira também será armazenada neste diretório.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Abrir as portas do cliente Litecoin automaticamente no roteador. Isto só funcionará se seu roteador suportar UPnP e esta função estiver habilitada.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Conectar na rede Litecoin através de um proxy SOCKS5.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Conecte-se à rede Litecoin através de um proxy SOCKS5 separado para utilizar serviços ocultos Tor.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Escolha a unidade padrão de subdivisão para interface mostrar quando enviar litecoins.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>A informação mostrada pode estar desatualizada. Sua carteira sincroniza automaticamente com a rede Litecoin depois que a conexão é estabelecida, mas este processo pode não estar completo ainda.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Não foi possível iniciar litecoin: manipulador click-to-pay</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Informe um endereço Litecoin (ex: %1)</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Uma mensagem opcional que será anexada na cobrança e será mostrada quando ela for aberta. Nota: A mensagem não será enviada com o pagamento pela rede Litecoin.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_pt_BR.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>A taxa será deduzida da quantia que está sendo enviada. O destinatário receberá menos litecoins do que você colocou no campo de quantidade. Se vários destinatários estão selecionados, a taxa é dividida igualmente.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>A mensagem que foi anexada ao litecoin: URI na qual será gravada na transação para sua referência. Nota: Essa mensagem não será gravada publicamente na rede Litecoin.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Você pode assinar mensagens com seus endereços para provar que você pode receber litecoins enviados por alguém. Cuidado para não assinar nada vago ou aleatório, pois ataques phishing podem tentar te enganar para assinar coisas para eles como se fosse você. Somente assine termos bem detalhados que você concorde.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>O enderesso Litecoin que assinará a mensagem</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Assinar mensagem para provar que você é dono deste endereço Litecoin</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>O enderesso Litecoin que assionou a mesnagem</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Verificar mensagem para se assegurar que ela foi assinada pelo dono de um endereço Litecoin específico.</translation>
./qt/locale/bitcoin_pt_BR.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_pt_BR.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_ko_KR.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ko_KR.ts:        <translation>litecoin: URI 또는 지불요청 열기</translation>
./qt/locale/bitcoin_ko_KR.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ko_KR.ts:        <translation>라우터에서 Litecoin 클라이언트 포트를 자동적으로 엽니다. 라우터에서 UPnP를 지원하고 활성화 했을 경우에만 동작합니다.</translation>
./qt/locale/bitcoin_ko_KR.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ko_KR.ts:        <source>Litecoin Core</source>
Binary file ./qt/locale/bitcoin_th_TH.qm matches
./qt/locale/bitcoin_th_TH.ts:        <translation>&amp;ที่เก็บเงิน ที่จะส่ง litecoin</translation>
./qt/locale/bitcoin_th_TH.ts:        <translation>&amp;ที่เก็บเงิน ที่จะรับ litecoin</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>ส่ง coins ไปยัง ที่เก็บ Litecoin</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เซ็นชื่อด้วยข้อความ ที่เก็บ Litecoin เพื่อแสดงว่าท่านเป็นเจ้าของ litecoin นี้จริง</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>ตรวจสอบ ข้อความ เพื่อให้แน่ใจว่า การเซ็นต์ชื่อ ด้วยที่เก็บ Litecoin แล้ว</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เรียกเก็บ การชำระเงิน (สร้าง QR codes และ litecoin: URIs)</translation>
./qt/locale/bitcoin_th_TH.ts:        <translation>แสดงรายการ ที่เก็บเงินที่จะส่ง litecoin ออก และป้ายชื่อ ที่ใช้ไปแล้ว</translation>
./qt/locale/bitcoin_th_TH.ts:        <translation>แสดงรายการ ที่เก็บเงินที่จะรับ litecoin เข้า และป้ายชื่อ ที่ใช้ไปแล้ว</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เปิด litecoin: URI หรือ การเรียกเก็บเงิน (การเรียกให้ชำระเงิน)</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_th_TH.ts:        <translation><numerusform>%n ช่องการเชื่อมต่อที่ใช้งานได้ เพื่อเชื่อมกับเครือข่าย Litecoin</numerusform></translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>แสดง %1 ข้อความช่วยเหลือ เพื่อแสดงรายการ ตัวเลือกที่เป็นไปได้สำหรับ Litecoin command-line</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>%1 จะดาวน์โหลดและเก็บกอปปี้ชุดหนึ่งของ บล็อกเชน Litecoin ไว้ ข้อมูลขนานอย่างน้อย %2GB จะเก็บไว้ในไดเร็กทอรี่นี้ และข้อมูลจะมีขนาดใหญ่ขึ้นเรื่อยๆ กระเป๋าเงิน จะเก็บไว้ในไดเร็กทอรี่นี้ด้วย</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เปิด Litecoin ไคล์เอ็นท์พอร์ต/client port บน router โดยอัตโนมัติ วิธีนี้ใช้ได้เมื่อ router สนับสนุน UPnP และสถานะเปิดใช้งาน</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เชื่อมต่อกับ Litecoin เน็ตเวิร์ก ผ่านพร็อกซี่แบบ SOCKS5</translation>
./qt/locale/bitcoin_th_TH.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_th_TH.ts:        <translation>เชื่อมต่อกับ เครือข่าย Litecoin ผ่านทาง พร้อกซี่ SOCKS5 แยกต่างหาก สำหรับ Tor เซอร์วิส</translation>
Binary file ./qt/locale/bitcoin_ro.qm matches
Binary file ./qt/locale/bitcoin_bg_BG.qm matches
Binary file ./qt/locale/bitcoin_en_AU.qm matches
./qt/locale/bitcoin_ne.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ne.ts:        <translation>Litecoin ठेगानामा सिक्का पठाउनुहोस्</translation>
./qt/locale/bitcoin_ne.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ne.ts:        <translation>%1 ले Litecoin ब्लक चेनको एउटा प्रतिलिपि डाउनलोड र भण्डारण गर्नेछ । यो निर्देशिकामा कम्तिमा पनि %2GB डाटा भण्डारण गरिनेछ, र यो समयसँगै बढ्नेछ । वालेटलाई पनि यो निर्देशिकामा भण्डारण गरिनेछ ।</translation>
./qt/locale/bitcoin_ne.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ne.ts:        <translation>देखाइएको सूचना पूरानो हुन सक्छ । कनेक्सन स्थापित भएपछि, तपाईंको वालेट Litecoin नेटवर्कमा स्वचालित रूपमा समिकरण हुन्छ , तर यो प्रक्रिया अहिले सम्म पूरा भएको छैन ।</translation>
./qt/locale/bitcoin_ne.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ne.ts:        <translation>कृपया Litecoin ठेगाना प्रवेश गर्नुहोस् (उदाहरण %1)</translation>
./qt/locale/bitcoin_ne.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ne.ts:        <translation>पठाइँदै गरेको रकमबाट शुल्क कटौती गरिनेछ । प्राप्तकर्ताले तपाईंले रकम क्षेत्रमा प्रवेष गरेको भन्दा थोरै Litecoin प्राप्त गर्ने छन् । धेरै प्राप्तकर्ता चयन गरिएको छ भने समान रूपमा शुल्क विभाजित गरिनेछ ।</translation>
./qt/locale/bitcoin_ne.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ne.ts:        <translation>Litecoinमा संलग्न गरिएको सन्देश: तपाईंको मध्यस्थको लागि कारोबारको साथमा भण्डारण गरिने URI । नोट: यो सन्देश Litecoin नेटवर्क मार्फत पठाइने छैन ।</translation>
./qt/locale/bitcoin_ne.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ne.ts:        <translation>आफ्नो ठेगानामा पठाइएको Litecoin प्राप्त गर्न सकिन्छ भनेर प्रमाणित गर्न तपाईंले ती ठेगानाले सन्देश/सम्झौताहरूमा हस्ताक्षर गर्न सक्नुहुन्छ । फिसिङ आक्रमणले तपाईंलाई छक्याएर अरूका लागि तपाईंको परिचयमा हस्ताक्षर गराउने प्रयास गर्न सक्ने भएकाले अस्पष्ट वा जथाभावीमा हस्ताक्षर गर्दा ध्यान दिनुहोस् । आफू सहमत भएको पूर्ण विस्तृत-कथनमा मात्र हस्ताक्षर गर्नुहोस् ।</translation>
Binary file ./qt/locale/bitcoin_pl.qm matches
./qt/locale/bitcoin_vi_VN.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Gửi coins đến tài khoản Litecoin</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Dùng địa chỉ Litecoin của bạn ký các tin nhắn để xác minh những nội dung tin nhắn đó là của bạn.</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Kiểm tra các tin nhắn để chắc chắn rằng chúng được ký bằng các địa chỉ Litecoin xác định.</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Yêu cầu thanh toán(tạo mã QR và địa chỉ Litecoin: URLs)</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Mở litecoin:URL hoặc yêu cầu thanh toán</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Kết nối đến máy chủ Litecoin thông qua SOCKS5 proxy.</translation>
./qt/locale/bitcoin_vi_VN.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_vi_VN.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_cy.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_cy.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_cy.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_cy.ts:        <translation>Craidd Litecoin</translation>
./qt/locale/bitcoin_zh_CN.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_zh_CN.ts:        <translation>请求支付 (生成二维码和 litecoin: URI)</translation>
./qt/locale/bitcoin_zh_CN.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_zh_CN.ts:        <translation>打开一个 litecoin: URI 或支付请求</translation>
./qt/locale/bitcoin_zh_CN.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_zh_CN.ts:        <translation>无法启动 litecoin 协议的“
./qt/locale/bitcoin_zh_CN.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_zh_CN.ts:        <translation>litecoin:URI 附带的备注信息，将会和交易一起存储，备查。 注意：该消息不会通过莱特币网络传输。</translation>
./qt/locale/bitcoin_zh_CN.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_zh_CN.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_zh_CN.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_cs.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Tohle jsou tvé litecoinové adresy pro posílání plateb. Před odesláním mincí si vždy zkontroluj částku a cílovou adresu.</translation>
./qt/locale/bitcoin_cs.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Tohle jsou tvé litecoinové adresy pro příjem plateb. Nezapomeň si pro každou transakci vždy vygenerovat novou adresu.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_cs.ts:        <translation>Upozornění: Pokud si zašifruješ peněženku a ztratíš či zapomeneš heslo, &lt;b&gt;PŘIJDEŠ O VŠECHNY LITECOINY&lt;/b&gt;!</translation>
./qt/locale/bitcoin_cs.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_cs.ts:        <translation>%1 se teď ukončí, aby dokončil zašifrování. Pamatuj však, že pouhé zašifrování peněženky nemůže zabránit krádeži tvých litecoinů malwarem, kterým se může počítač nakazit.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_cs.ts:        <translation>Pošli mince na litecoinovou adresu</translation>
./qt/locale/bitcoin_cs.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_cs.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_cs.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_cs.ts:        <translation>Podepiš zprávy svými litecoinovými adresami, čímž prokážeš, že jsi jejich vlastníkem</translation>
./qt/locale/bitcoin_cs.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_cs.ts:        <translation>Ověř zprávy, aby ses ujistil, že byly podepsány danými litecoinovými adresami</translation>
./qt/locale/bitcoin_cs.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_cs.ts:        <translation>Požaduj platby (generuje QR kódy a litecoin: URI)</translation>
./qt/locale/bitcoin_cs.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_cs.ts:        <translation>Načti litecoin: URI nebo platební požadavek</translation>
./qt/locale/bitcoin_cs.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_cs.ts:        <translation><numerusform>%n aktivní spojení do litecoinové sítě</numerusform><numerusform>%n aktivní spojení do litecoinové sítě</numerusform><numerusform>%n aktivních spojení do litecoinové sítě</numerusform></translation>
./qt/locale/bitcoin_cs.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_cs.ts:        <translation>Seznam argumentů Litecoinu pro příkazovou řádku získáš v nápovědě %1</translation>
./qt/locale/bitcoin_cs.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Stala se fatální chyba. Litecoin nemůže bezpečně pokračovat v činnosti, a proto skončí.</translation>
./qt/locale/bitcoin_cs.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Zadaná adresa „%1“ není platná litecoinová adresa.</translation>
./qt/locale/bitcoin_cs.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_cs.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Nedávné transakce ještě nemusí být vidět, takže stav tvého účtu nemusí být platný. Jakmile se však tvá peněženka dosynchronizuje s litecoinovou sítí (viz informace níže), tak už bude stav správně.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Utrácení litecoinů, které už utratily zatím nezobrazené transakce, nebude litecoinovou sítí umožněno.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_cs.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Připojí se do litecoinové sítě přes SOCKS5 proxy.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Připojí se do litecoinové sítě přes SOCKS5 proxy vyhrazenou pro skryté služby v Tor síti.</translation>
./qt/locale/bitcoin_cs.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Zobrazené informace nemusí být aktuální. Tvá peněženka se automaticky sesynchronizuje s litecoinovou sítí, jakmile se s ní spojí. Zatím ale ještě není synchronizace dokončena.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_cs.ts:        <translation>Nemůžu spustit litecoin: obsluha click-to-pay</translation>
./qt/locale/bitcoin_cs.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Nepodařilo se analyzovat URI! Důvodem může být neplatná litecoinová adresa nebo poškozené parametry URI.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_cs.ts:        <translation>Zadej litecoinovou adresu (např. %1)</translation>
./qt/locale/bitcoin_cs.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Volitelná zpráva, která se připojí k platebnímu požadavku a která se zobrazí, když se požadavek otevře. Poznámka: tahle zpráva se neposílá s platbou po litecoinové síti.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Platit jen minimální poplatek je v pořádku, pokud je zrovna méně transakcí než místa v blocích. Ale počítej s tím, že to také může skončit transakcí, která nikdy nebude potvrzena, pokud je větší poptávka po litecoinových transakcích, než síť zvládne zpracovat.</translation>
./qt/locale/bitcoin_cs.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_cs.ts:        <translation>Upozornění: Neplatná litecoinová adresa</translation>
./qt/locale/bitcoin_cs.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_cs.ts:        <translation>Litecoinová adresa příjemce</translation>
./qt/locale/bitcoin_cs.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Poplatek se odečte od posílané částky. Příjemce tak dostane méně litecoinů, než zadáš do pole Částka. Pokud vybereš více příjemců, tak se poplatek rovnoměrně rozloží.</translation>
./qt/locale/bitcoin_cs.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Zpráva, která byla připojena k litecoin: URI a která se ti pro přehled uloží k transakci. Poznámka: Tahle zpráva se neposílá s platbou po litecoinové síti.</translation>
./qt/locale/bitcoin_cs.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_cs.ts:        <translation>Podepsáním zprávy/smlouvy svými adresami můžeš prokázat, že jsi na ně schopen přijmout litecoiny. Buď opatrný a nepodepisuj nic vágního nebo náhodného; například při phishingových útocích můžeš být lákán, abys něco takového podepsal. Podepisuj pouze naprosto úplná a detailní prohlášení, se kterými souhlasíš.</translation>
./qt/locale/bitcoin_cs.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_cs.ts:        <translation>Litecoinová adresa, kterou se zpráva podepíše</translation>
./qt/locale/bitcoin_cs.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_cs.ts:        <translation>Podepiš zprávu, čímž prokážeš, že jsi vlastníkem této litecoinové adresy</translation>
./qt/locale/bitcoin_cs.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_cs.ts:        <translation>Litecoinová adresa, kterou je zpráva podepsána</translation>
./qt/locale/bitcoin_cs.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_cs.ts:        <translation>Ověř zprávu, aby ses ujistil, že byla podepsána danou litecoinovou adresou</translation>
./qt/locale/bitcoin_cs.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_cs.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_nb.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Dette er dine Litecoin-adresser for sending av betalinger. Sjekk alltid beløpet og mottakeradressen før sending av mynter.</translation>
./qt/locale/bitcoin_nb.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Dette er dine Litecoin-adresser for å sende betalinger med. Det er anbefalt å bruke en ny mottaksadresse for hver transaksjon.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_nb.ts:        <translation>Advarsel: Hvis du krypterer lommeboken og mister adgangsfrasen, så vil du &lt;b&gt;MISTE ALLE DINE LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_nb.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_nb.ts:        <translation>%1 vil nå lukkes for å fullføre krypteringsprosessen. Husk at kryptering av lommeboken ikke fullt ut kan beskytte dine litecoins fra å bli stjålet om skadevare infiserer datamaskinen din.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_nb.ts:        <translation>Send til en Litecoin-adresse</translation>
./qt/locale/bitcoin_nb.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_nb.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_nb.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_nb.ts:        <translation>Signer en melding med Litecoin-adressene dine for å bevise at du eier dem</translation>
./qt/locale/bitcoin_nb.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_nb.ts:        <translation>Bekreft meldinger for å være sikker på at de ble signert av en angitt Litecoin-adresse</translation>
./qt/locale/bitcoin_nb.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_nb.ts:        <translation>Forespør betalinger (genererer QR-koder og litecoin: URIer)</translation>
./qt/locale/bitcoin_nb.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_nb.ts:        <translation>Åpne en Litecoin: URI eller betalingsetterspørring</translation>
./qt/locale/bitcoin_nb.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_nb.ts:        <translation><numerusform>%n aktiv forbindelse til Litecoin-nettverket</numerusform><numerusform>%n aktive forbindelser til Litecoin-nettverket</numerusform></translation>
./qt/locale/bitcoin_nb.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_nb.ts:        <translation>En fatal feil har inntruffet. Litecoin kan ikke lenger trygt fortsette, og må derfor avslutte.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Åpne automatisk Litecoin klientporten på ruteren. Dette virker kun om din ruter støtter UPnP og dette er påslått.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Koble til Litecoin-nettverket gjennom en SOCKS5 proxy.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Koble til Litecoin-nettverket gjennom en separat SOCKS5 mellomtjener for Tor skjulte tjenester.</translation>
./qt/locale/bitcoin_nb.ts:        <translation>Velg standard delt enhet for visning i grensesnittet og for sending av litecoins.</translation>
./qt/locale/bitcoin_nb.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Informasjonen som vises kan være foreldet. Din lommebok synkroniseres automatisk med Litecoin-nettverket etter at tilkobling er opprettet, men denne prosessen er ikke ferdig enda.</translation>
./qt/locale/bitcoin_nb.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_nb.ts:        <translation>Oppgi en Litecoin-adresse (f.eks. %1)</translation>
./qt/locale/bitcoin_nb.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_nb.ts:        <translation>En valgfri melding å tilknytte betalingsetterspørringen, som vil bli vist når forespørselen er åpnet. Meldingen vil ikke bli sendt med betalingen over Litecoin-nettverket.</translation>
./qt/locale/bitcoin_nb.ts:        <translation>Send Litecoins</translation>
./qt/locale/bitcoin_nb.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Betaling av bare minimumsavgiften går helt fint så lenge det er mindre transaksjonsvolum enn plass i blokkene. Men vær klar over at dette kan ende opp i en transaksjon som aldri blir bekreftet når det er mer etterspørsel etter Litecoin-transaksjoner enn nettverket kan behandle.</translation>
./qt/locale/bitcoin_nb.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_nb.ts:        <translation>Litecoin-adressen betalingen skal sendes til</translation>
./qt/locale/bitcoin_nb.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Gebyret vil bli trukket fra beløpet som blir sendt. Mottakeren vil motta mindre litecoins enn det du skriver inn i beløpsfeltet. Hvis det er valgt flere mottakere, deles gebyret likt.</translation>
./qt/locale/bitcoin_nb.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_nb.ts:        <translation>En melding som var tilknyttet litecoinen: URI vil bli lagret med transaksjonen for din oversikt. Denne meldingen vil ikke bli sendt over Litecoin-nettverket.</translation>
./qt/locale/bitcoin_nb.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_nb.ts:        <translation>Du kan signere meldinger/avtaler med adresser for å bevise at du kan motta litecoins sendt til dem. Vær forsiktig med å signere noe vagt eller tilfeldig, siden phishing-angrep kan prøve å lure deg til å signere din identitet over til dem. Bare signer fullt detaljerte utsagn som du er enig i.</translation>
./qt/locale/bitcoin_nb.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_nb.ts:        <translation>Litecoin-adressen meldingen skal signeres med</translation>
./qt/locale/bitcoin_nb.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_nb.ts:        <translation>Signer meldingen for å bevise at du eier denne Litecoin-adressen</translation>
./qt/locale/bitcoin_nb.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_nb.ts:        <translation>Litecoin-adressen meldingen ble signert med</translation>
./qt/locale/bitcoin_nb.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_nb.ts:        <translation>Verifiser meldingen for å være sikker på at den ble signert av den angitte Litecoin-adressen</translation>
./qt/locale/bitcoin_nb.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_nb.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_hu.qm matches
./qt/locale/bitcoin_pam.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_pam.ts:        <translation>Magpadalang barya king Litecoin address</translation>
./qt/locale/bitcoin_pam.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_pam.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_pam.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_pam.ts:        <translation>Ibuklat yang antimanu ing Litecoin client port king router. Gagana yamu ini istung ing router mu susuporta yang UPnP at magsilbi ya.</translation>
./qt/locale/bitcoin_pam.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_pam.ts:        <translation>Ing makaltong impormasion mapalyaring luma ne. Ing kekang wallet otomatiku yang mag-synchronize keng Litecoin network istung mekakonekta ne king network, oneng ing prosesung ini ali ya pa kumpletu.</translation>
./qt/locale/bitcoin_pam.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_pam.ts:        <translation>Pirman ing mensayi ban patune na keka ya ining Litecoin address</translation>
./qt/locale/bitcoin_pam.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_pam.ts:        <translation>Beripikan ing mensayi ban asiguradu a me pirma ya ini gamit ing mepiling Litecoin address</translation>
./qt/locale/bitcoin_pam.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_pam.ts:        <translation>Kapilubluban ning Litecoin</translation>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Choisissez une adresse où envoyer les litecoins</translation>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Choisissez une adresse où recevoir les litecoins</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Attention : Si vous chiffrez votre portefeuille et que vous perdez votre mot de passe vous &lt;b&gt; PERDREZ TOUS VOS LITECOINS&lt;/b&gt; !</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Envoyer des pièces à une adresse Litecoin</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Signer vos messages avec vos adresses Litecoin pour prouver que vous les détenez</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Demander des paiements (générer QR codes et litecoin: URIs)</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Ouvrir un litecoin: URI ou demande de paiement</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation><numerusform>%n connexion active au réseau Litecoin</numerusform><numerusform>%n connexions actives au réseau Litecoin</numerusform></translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Ouvrir le port du client Litecoin automatiquement sur le routeur. Cela ne fonctionne que si votre routeur supporte l'UPnP et si la fonctionnalité est activée.</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Entrer une adresse Litecoin (e.g. %1)</translation>
./qt/locale/bitcoin_fr_FR.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_fr_FR.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_he.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_he.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_he.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_he.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_he.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_he.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_he.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_he.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_he.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_he.ts:        <translation>בקשת תשלומים (יצירה של קודים מסוג QR וסכימות כתובות משאב של :litecoin)</translation>
./qt/locale/bitcoin_he.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_he.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_he.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_he.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_he.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_he.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_he.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_he.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_he.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_he.ts:        <translation>לא ניתן להפעיל את המקשר litecoin: click-to-pay</translation>
./qt/locale/bitcoin_he.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_he.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_he.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_he.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_he.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_he.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_he.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_he.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_he.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_he.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_he.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_UY.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_UY.ts:        <translation>Enviar monedas a una dirección Litecoin</translation>
./qt/locale/bitcoin_es_UY.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_UY.ts:        <translation>Litecoin</translation>
Binary file ./qt/locale/bitcoin_da.qm matches
Binary file ./qt/locale/bitcoin_ky.qm matches
Binary file ./qt/locale/bitcoin_ms_MY.qm matches
./qt/locale/bitcoin_ky.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ky.ts:        <translation>Litecoin</translation>
Binary file ./qt/locale/bitcoin_af_ZA.qm matches
./qt/locale/bitcoin_bs.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_bs.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_bs.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_bs.ts:        <translation>Litecoin Jezrga</translation>
./qt/locale/bitcoin_es_419.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_es_419.ts:        <translation>Estas son sus direcciones de Litecoin para enviar sus pagos. Siempre revise el monto y la dirección recibida antes de enviar monedas.</translation>
Binary file ./qt/locale/bitcoin_ru_RU.qm matches
./qt/locale/bitcoin_af_ZA.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_af_ZA.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Это ваши адреса Litecoin для отправки платежей. Всегда проверяйте сумму и адрес получателя перед отправкой перевода.</translation>
./qt/locale/bitcoin_ru.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Это ваши адреса Litecoin для приёма платежей. Рекомендуется использовать новый адрес получения для каждой транзакции.</translation>
./qt/locale/bitcoin_ru.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ru.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ru.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ru.ts:        <translation>Отправить монеты на указанный адрес Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ru.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ru.ts:        <translation>Подписать сообщения вашим адресом Litecoin, чтобы доказать, что вы им владеете</translation>
./qt/locale/bitcoin_ru.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ru.ts:        <translation>Проверить сообщения, чтобы удостовериться, что они были подписаны определённым адресом Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ru.ts:        <translation>Запросить платежи (создаёт QR-коды и litecoin: ссылки)</translation>
./qt/locale/bitcoin_ru.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ru.ts:        <translation>Открыть litecoin: URI или запрос платежа</translation>
./qt/locale/bitcoin_ru.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ru.ts:        <translation><numerusform>%n активных соединений с сетью Litecoin</numerusform><numerusform>%n активных соединений с сетью Litecoin</numerusform><numerusform>%n активных соединений с сетью Litecoin</numerusform><numerusform>%n активных соединений с сетью Litecoin</numerusform></translation>
./qt/locale/bitcoin_ru.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ru.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Произошла неисправимая ошибка. Litecoin не может безопасно продолжать работу и будет закрыт.</translation>
./qt/locale/bitcoin_ru.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Введённый адрес "%1" не является правильным Litecoin-адресом.</translation>
./qt/locale/bitcoin_ru.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ru.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_ru.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_ru.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Автоматически открыть порт для Litecoin-клиента на роутере. Работает только если Ваш роутер поддерживает UPnP, и данная функция включена.</translation>
./qt/locale/bitcoin_ru.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Подключаться к сети Litecoin через прокси SOCKS5</translation>
./qt/locale/bitcoin_ru.ts:        <translation>&amp;Подключаться к сети Litecoin через прокси SOCKS5 (прокси по умолчанию):</translation>
./qt/locale/bitcoin_ru.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Подключаться к сети Litecoin через прокси SOCKS5 для скрытых сервисов Tor.</translation>
./qt/locale/bitcoin_ru.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Отображаемая информация может быть устаревшей. Ваш бумажник автоматически синхронизируется с сетью Litecoin после подключения, но этот процесс пока не завершён.</translation>
./qt/locale/bitcoin_ru.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ru.ts:        <translation>Не удаётся запустить litecoin: обработчик click-to-pay</translation>
./qt/locale/bitcoin_ru.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Не удалось обработать URI! Это может быть связано с неверным адресом Litecoin или неправильными параметрами URI.</translation>
./qt/locale/bitcoin_ru.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ru.ts:        <translation>Введите адрес Litecoin (например, %1)</translation>
./qt/locale/bitcoin_ru.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ru.ts:        <translation>Необязательное сообщение для запроса платежа, которое будет показано при открытии запроса. Заметьте: сообщение не будет отправлено вместе с платежом через сеть Litecoin.</translation>
./qt/locale/bitcoin_ru.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ru.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ru.ts:        <translation>Внимание: неверный адрес Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ru.ts:        <translation>Адрес Litecoin, на который отправить платёж</translation>
./qt/locale/bitcoin_ru.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ru.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ru.ts:        <translation>К litecoin: URI было прикреплено сообщение, которое будет сохранено вместе с транзакцией для вашего сведения. Заметьте: сообщение не будет отправлено через сеть Litecoin.</translation>
./qt/locale/bitcoin_ru.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ru.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ru.ts:        <translation>Адрес Litecoin, которым подписать сообщение</translation>
./qt/locale/bitcoin_ru.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ru.ts:        <translation>Подписать сообщение, чтобы доказать владение адресом Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ru.ts:        <translation>Адрес Litecoin, которым было подписано сообщение</translation>
./qt/locale/bitcoin_ru.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ru.ts:        <translation>Проверить сообщение, чтобы убедиться, что оно было подписано указанным адресом Litecoin</translation>
./qt/locale/bitcoin_ru.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ru.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_af.qm matches
Binary file ./qt/locale/bitcoin_cy.qm matches
Binary file ./qt/locale/bitcoin_es_CL.qm matches
./qt/locale/bitcoin_ro_RO.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Acestea sunt adresele tale Litecoin pentru efectuarea platilor. Intotdeauna verifica atent suma de plata si adresa beneficiarului inainte de a trimite monede.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Acestea sunt adresele tale Litecoin pentru receptionarea platilor. Este recomandat sa folosesti mereu o adresa noua pentru primirea platilor.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Trimite monede către o adresă Litecoin</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Semnaţi mesaje cu adresa dvs. Litecoin pentru a dovedi că vă aparţin</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Verificaţi mesaje pentru a vă asigura că au fost semnate cu adresa Litecoin specificată</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Cereţi plăţi (generează coduri QR şi litecoin-uri: URls)</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Deschidere litecoin: o adresa URI sau o cerere de plată</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation><numerusform>%n conexiune activă către reţeaua Litecoin</numerusform><numerusform>%n conexiuni active către reţeaua Litecoin</numerusform><numerusform>%n de conexiuni active către reţeaua Litecoin</numerusform></translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Deschide automat în router portul aferent clientului Litecoin. Funcţionează doar dacă routerul duportă UPnP şi e activat.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Conectare la reţeaua Litecoin printr-un proxy SOCKS.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Alegeţi subdiviziunea folosită la afişarea interfeţei şi la trimiterea de litecoin.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Adresa litecoin pe care aţi specificat-o nu este validă.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Informaţiile afişate pot fi neactualizate. Portofelul dvs. se sincronizează automat cu reţeaua Litecoin după ce o conexiune este stabilită, dar acest proces nu a fost finalizat încă.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Introduceţi o adresă Litecoin (de exemplu %1)</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Un mesaj opţional de ataşat la cererea de plată, care va fi afişat cînd cererea este deschisă. Notă: Acest mesaj nu va fi trimis cu plata către reţeaua Litecoin.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Adresa litecoin către care se face plata</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>un mesaj a fost ataşat la litecoin: URI care va fi stocat cu tranzacţia pentru referinţa dvs. Notă: Acest mesaj nu va fi trimis către reţeaua litecoin.</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ro_RO.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Semnează mesajul pentru a dovedi ca deţineţi acestă adresă Litecoin</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Introduceţi o adresă Litecoin</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Verificaţi mesajul pentru a vă asigura că a fost semnat cu adresa Litecoin specificată</translation>
./qt/locale/bitcoin_ro_RO.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ro_RO.ts:        <translation>Nucleul Litecoin</translation>
Binary file ./qt/locale/bitcoin_pt_PT.qm matches
./qt/locale/bitcoin_hi_IN.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_gl.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_gl.ts:        <translation>Enviar moedas a unha dirección Litecoin</translation>
./qt/locale/bitcoin_gl.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_gl.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_gl.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_gl.ts:        <translation>Asina mensaxes coas túas direccións Litecoin para probar que te pertencen</translation>
./qt/locale/bitcoin_gl.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_gl.ts:        <translation>Verificar mensaxes para asegurar que foron asinados con direccións Litecoin dadas.</translation>
./qt/locale/bitcoin_gl.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_gl.ts:        <translation>Solicitar pagos (xenera códigos QR e litecoin: URIs)</translation>
./qt/locale/bitcoin_gl.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_gl.ts:        <translation>Abrir un litecoin: URI ou solicitude de pago</translation>
./qt/locale/bitcoin_gl.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_gl.ts:        <translation>Abrir automáticamente o porto do cliente Litecoin no router. Esto so funciona se o teu router soporta UPnP e está habilitado.</translation>
./qt/locale/bitcoin_gl.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_gl.ts:        <translation>A información amosada por estar desactualizada. O teu moedeiro sincronízase automáticamente coa rede Litecoin despois de que se estableza unha conexión, pero este proceso non está todavía rematado.</translation>
./qt/locale/bitcoin_gl.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_gl.ts:        <translation>Asina a mensaxe para probar que posees esta dirección Litecoin</translation>
./qt/locale/bitcoin_gl.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_gl.ts:        <translation>Verificar a mensaxe para asegurar que foi asinada coa dirección Litecoin especificada</translation>
./qt/locale/bitcoin_gl.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_gl.ts:        <translation>Core de Litecoin</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Send coins to a Litecoin address</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Sign messages with your Litecoin addresses to prove you own them</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Verify messages to ensure they were signed with specified Litecoin addresses</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Request payments (generates QR codes and litecoin: URIs)</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Open a litecoin: URI or payment request</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_en_GB.ts:        <translation><numerusform>%n active connection to Litecoin network</numerusform><numerusform>%n active connections to Litecoin network</numerusform></translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Show the %1 help message to get a list with possible Litecoin command-line options</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Connect to the Litecoin network through a SOCKS5 proxy.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>The displayed information may be out of date. Your Wallet automatically synchronises with the Litecoin Network after a connection is established, but this process has not been completed yet.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Enter a Litecoin address (e.g. %1)</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>The Litecoin address to send the payment to</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>The Litecoin address to sign the message with</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Sign the message to prove you own this Litecoin address</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>The Litecoin address the message was signed with</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Verify the message to ensure it was signed with the specified Litecoin address</translation>
./qt/locale/bitcoin_en_GB.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_en_GB.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_mk_MK.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_mk_MK.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_mk_MK.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_bg_BG.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_bg_BG.ts:        <translation>Тези са вашите Litecoin адреси за изпращане на монети. Винаги проверявайте количеството и получаващия адрес преди изпращане. </translation>
./qt/locale/bitcoin_bg_BG.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_bg_BG.ts:        <translation>Това са вашите Litecoin адреси за получаване на монети. Препоръчително е да ползвате нов адрес на всяка транзакция.</translation>
./qt/locale/bitcoin_bg_BG.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_bg_BG.ts:        <translation>Litecoin ядро</translation>
Binary file ./qt/locale/bitcoin_et_EE.qm matches
./qt/locale/bitcoin_nl_NL.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_nl_NL.ts:        <translation>Dit zijn uw Litecoin adressen voor het versturen van betalingen. Controleer altijd het bedrag en het ontvangstadres voordat u munten verstuurd.</translation>
./qt/locale/bitcoin_nl_NL.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_nl_NL.ts:        <translation>Dit zijn uw Litecoin adressen voor het ontvangen van betalingen. Het wordt aanbevolen om voor elke transactie een nieuw ontvangstadres te gebruiken.</translation>
./qt/locale/bitcoin_hu.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Ezek a Litecoin címeid kifizetések küldéséhez. Mindíg ellenőrizd az összeget és a fogadó címet mielőtt coinokat küldenél.</translation>
./qt/locale/bitcoin_hu.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Ezek a Litecoin címeid kifizetések fogadásához. Ajánlott új címet használni minden új fogadáshoz.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_hu.ts:        <translation>Figyelem: Ha titkosítja a tárcáját és elveszíti a jelszavát, akkor &lt;b&gt;AZ ÖSSZES LITECOINJA ELVESZIK&lt;/b&gt;!</translation>
./qt/locale/bitcoin_hu.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A %1 most bezár, hogy befejezze a titkosítást. Ne feledje, hogy a tárca titkosítása nem nyújt teljes védelmet azzal szemben, hogy kártékony programok megfertőzzék a számítógépét és ellopják a litecoinjait.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_hu.ts:        <translation>Litecoin küldése megadott címre</translation>
./qt/locale/bitcoin_hu.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_hu.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_hu.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_hu.ts:        <translation>Üzenetek aláírása a Litecoin-címmeiddel, amivel bizonyítod, hogy a cím a sajátod</translation>
./qt/locale/bitcoin_hu.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_hu.ts:        <translation>Üzenetek ellenőrzése, hogy valóban a megjelölt Litecoin-címekkel vannak-e aláírva</translation>
./qt/locale/bitcoin_hu.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_hu.ts:        <translation>Fizetési kérelem (QR-kódot és "litecoin:" URI azonosítót hoz létre)</translation>
./qt/locale/bitcoin_hu.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_hu.ts:        <translation>"litecoin:" URI azonosító vagy fizetési kérelem megnyitása</translation>
./qt/locale/bitcoin_hu.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_hu.ts:        <translation><numerusform>%n aktív kapcsolat a Litecoin hálózathoz</numerusform><numerusform>%n aktív kapcsolat a Litecoin hálózathoz</numerusform></translation>
./qt/locale/bitcoin_hu.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_hu.ts:        <translation>A %1 súgó megjelenítése a Litecoin lehetséges parancssori kapcsolóinak listájával</translation>
./qt/locale/bitcoin_hu.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Végzetes hiba történt. A Litecoin működése nem biztonságos és hamarosan leáll.</translation>
./qt/locale/bitcoin_hu.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A megadott "%1" cím nem egy érvényes Litecoin-cím.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A legutóbbi tranzakciók még lehet, hogy nem látszanak, ezért előfordulhat, hogy a pénztárca egyenlege nem a valós állapotot mutatja. Ha a pénztárca befejezte a szinkronizációt a litecoin hálózattal, utána már az aktuális egyenleget fogja mutatni, amint alant részletesen látszik.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A hálózat nem fogadja el azoknak a litecoinoknak az elköltését, amelyek érintettek a még nem látszódó tranzakciókban.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A Litecoin-kliens portjának automatikus megnyitása a routeren. Ez csak akkor működik, ha a routered támogatja az UPnP-t és az engedélyezve is van rajta.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Csatlakozás a Litecoin hálózatához SOCKS5 proxyn keresztül</translation>
./qt/locale/bitcoin_hu.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Csatlakozás a Litecoin hálózathoz külön SOCKS5 proxy használatával a Tor rejtett szolgáltatásainak eléréséhez.</translation>
./qt/locale/bitcoin_hu.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_hu.ts:        <translation>A kijelzett információ lehet, hogy elavult. A pénztárcája automatikusan szinkronizálja magát a Litecoin hálózattal miután a kapcsolat létrejön, de ez e folyamat még nem fejeződött be.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_hu.ts:        <translation>A litecoin nem tud elindulni: click-to-pay kezelő</translation>
./qt/locale/bitcoin_hu.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Nem sikerült az URI elemzése! Ezt okozhatja érvénytelen Litecoin cím, vagy rossz URI paraméterezés.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_hu.ts:        <translation>Ad meg egy Litecoin címet (pl: %1)</translation>
./qt/locale/bitcoin_hu.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_hu.ts:        <translation>Egy opcionális üzenet csatolása a fizetési kérelemhez, amely megjelenik a kérelem megnyitásakor. Megjegyzés: Az üzenet nem lesz elküldve a fizetséggel a Litecoin hálózaton keresztül.</translation>
./qt/locale/bitcoin_hu.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_hu.ts:        <translation>Figyelmeztetés: Érvénytelen Litecoin cím</translation>
./qt/locale/bitcoin_hu.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_hu.ts:        <translation>Erre a Litecoin címre küldje az összeget</translation>
./qt/locale/bitcoin_hu.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_hu.ts:        <translation>Litecoin cím, amivel alá kívánja írni az üzenetet</translation>
./qt/locale/bitcoin_hu.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_hu.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_hu.ts:        <translation>Litecoin cím, amivel aláírta az üzenetet</translation>
./qt/locale/bitcoin_hu.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_hu.ts:        <translation>Ellenőrizze az üzenetet, hogy valóban a megjelölt Litecoin címmel van-e aláírva</translation>
./qt/locale/bitcoin_hu.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_hu.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_hu.ts:        <translation>Nincs elég litecoinod.</translation>
Binary file ./qt/locale/bitcoin_en.qm matches
Binary file ./qt/locale/bitcoin_ka.qm matches
Binary file ./qt/locale/bitcoin_fr_FR.qm matches
Binary file ./qt/locale/bitcoin_eu_ES.qm matches
Binary file ./qt/locale/bitcoin_he.qm matches
./qt/locale/bitcoin_sk.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Toto sú Vaše Litecoin adresy pre posielanie platieb. Vždy skontrolujte sumu a prijímaciu adresu pred poslaním mincí.</translation>
./qt/locale/bitcoin_sk.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Toto sú vaše Litecoin adresy pre prijímanie platieb. Odporúča sa použiť vždy novú prijímaciu adresu pre každú transakciu.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_sk.ts:        <translation>Varovanie: Ak zašifrujete peňaženku a stratíte heslo, &lt;b&gt;STRATÍTE VŠETKY VAŠE LITECOINY&lt;/b&gt;!</translation>
./qt/locale/bitcoin_sk.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_sk.ts:        <translation>%1 sa teraz zavrie, aby sa ukončil proces šifrovania. Zašifrovanie peňaženky neochráni úplne pred krádežou litecoinov škodlivými programami, ktoré prenikli do vášho počítača.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_sk.ts:        <translation>Poslať litecoins na adresu</translation>
./qt/locale/bitcoin_sk.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_sk.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_sk.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_sk.ts:        <translation>Podpísať správu s vašou adresou Litecoin aby ste preukázali že ju vlastníte</translation>
./qt/locale/bitcoin_sk.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_sk.ts:        <translation>Overiť či správa bola podpísaná uvedenou Litecoin adresou</translation>
./qt/locale/bitcoin_sk.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_sk.ts:        <translation>Vyžiadať platby (vygeneruje QR kódy a litecoin: URI)</translation>
./qt/locale/bitcoin_sk.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_sk.ts:        <translation>Otvoriť litecoin URI alebo výzvu k platbe</translation>
./qt/locale/bitcoin_sk.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_sk.ts:        <translation><numerusform>%n aktívne pripojenie do siete Litecoin</numerusform><numerusform>%n aktívne pripojenia do siete Litecoin</numerusform><numerusform>%n aktívnych pripojení do siete Litecoin</numerusform></translation>
./qt/locale/bitcoin_sk.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_sk.ts:        <translation>Ukáž %1 zoznam možných nastavení Litecoinu pomocou príkazového riadku</translation>
./qt/locale/bitcoin_sk.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Vyskytla sa kritická chyba. Litecoin nemôže ďalej bezpečne pokračovať a ukončí sa.</translation>
./qt/locale/bitcoin_sk.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Vložená adresa "%1" nieje platnou adresou Litecoin.</translation>
./qt/locale/bitcoin_sk.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_sk.ts:        <translation>%1 stiahne a uloží kópiu Litecoin block chain. Minimálne %2GB dát bude uložených v tejto zložke, a bude sa zväčšovať postupom času. Peňaženka bude taktiež uložená v tejto zložke.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Nedávne transakcie nemusia byť ešte viditeľné preto môže byť zostatok vo vašej peňaženke nesprávny. Táto informácia bude správna keď sa dokončí synchronizovanie peňaženky so sieťou litecoin, ako je rozpísané nižšie.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Pokus o minutie litecoinov, ktoré sú ovplyvnené ešte nezobrazenými transakciami, nebude sieťou akceptovaný.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Automaticky otvorit port pre Litecoin na routeri. Toto funguje len ak router podporuje UPnP a je táto podpora aktivovaná.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Pripojiť do siete Litecoin cez proxy server SOCKS5.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Pripojiť k Litecoinovej sieti cez separované SOCKS5 proxy pre skrytú službu Tor.</translation>
./qt/locale/bitcoin_sk.ts:        <translation>Zvoľte ako deliť litecoin pri zobrazovaní pri platbách a užívateľskom rozhraní.</translation>
./qt/locale/bitcoin_sk.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Zobrazené informácie môžu byť neaktuálne. Vaša peňaženka sa automaticky synchronizuje so sieťou Litecoin po nadviazaní spojenia, ale tento proces ešte nie je ukončený.</translation>
./qt/locale/bitcoin_sk.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_sk.ts:        <translation>URI sa nedá analyzovať! To môže byť spôsobené neplatnou Litecoin adresou alebo zle nastavenými vlastnosťami URI.</translation>
./qt/locale/bitcoin_sk.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_sk.ts:        <translation>Zadajte litecoin adresu (napr. %1)</translation>
./qt/locale/bitcoin_sk.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Pridať voliteľnú správu k výzve na zaplatenie, ktorá sa zobrazí keď bude výzva otvorená. Poznámka: Správa nebude poslaná s platbou cez sieť Litecoin.</translation>
./qt/locale/bitcoin_sk.ts:        <translation>Poslať Litecoins</translation>
./qt/locale/bitcoin_sk.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_sk.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_sk.ts:        <translation>Varovanie: Neplatná Litecoin adresa</translation>
./qt/locale/bitcoin_sk.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_sk.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Poplatok sa odpočíta od čiastky, ktorú odosielate. Príjemca dostane menej litecoinov ako zadáte. Ak je vybraných viacero príjemcov, poplatok je rozdelený rovným dielom.</translation>
./qt/locale/bitcoin_sk.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_sk.ts:        <translation>Správa ktorá bola pripojená k litecoin: URI a ktorá bude uložená s transakcou pre Vaše potreby. Poznámka: Táto správa nebude poslaná cez sieť Litecoin.</translation>
./qt/locale/bitcoin_sk.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_sk.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_sk.ts:        <translation>Litecoin adresa pre podpísanie správy s</translation>
./qt/locale/bitcoin_sk.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_sk.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_sk.ts:        <translation>Adresa Litecoin, ktorou bola podpísaná správa</translation>
./qt/locale/bitcoin_sk.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_sk.ts:        <translation>Overím správy sa uistiť že bola podpísaná označenou Litecoin adresou</translation>
./qt/locale/bitcoin_sk.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_sk.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_sr@latin.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_sr@latin.ts:        <translation>Ovo su Vaše Litecoin adrese na koju se vrše uplate. Uvek proverite iznos i prijemnu adresu pre slanja novčića</translation>
./qt/locale/bitcoin_sr@latin.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_sr@latin.ts:        <translation>Ovo su Vaše Litecoin adrese za primanje uplata. Preporučuje se upotreba nove adrese za svaku transakciju.</translation>
./qt/locale/bitcoin_sr@latin.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_sr@latin.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_sr@latin.ts:        <translation>Pošalji novčiće na Litecoin adresu</translation>
./qt/locale/bitcoin_sr@latin.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_sr@latin.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_sr@latin.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_sr@latin.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_ka.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ka.ts:        <translation>მონეტების გაგზავნა Litecoin-მისამართზე</translation>
./qt/locale/bitcoin_ka.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ka.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ka.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ka.ts:        <translation>მესიჯებზე ხელმოწერა თქვენი Litecoin-მისამართებით იმის დასტურად, რომ ის თქვენია</translation>
./qt/locale/bitcoin_ka.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ka.ts:        <translation>შეამოწმეთ, რომ მესიჯები ხელმოწერილია მითითებული Litecoin-მისამართით</translation>
./qt/locale/bitcoin_ka.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ka.ts:        <translation>გადახდის მოთხოვნა (შეიქმნება QR-კოდები და litecoin: ბმულები)</translation>
./qt/locale/bitcoin_ka.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ka.ts:        <translation>litecoin: URI-ის ან გადახდის მოთხოვნის გახსნა</translation>
./qt/locale/bitcoin_ka.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ka.ts:        <translation>როუტერში Litecoin-კლიენტის პორტის ავტომატური გახსნა. მუშაობს, თუ თქვენს როუტერს ჩართული აქვს UPnP.</translation>
./qt/locale/bitcoin_ka.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ka.ts:        <translation>ნაჩვენები ინფორმაცია შეიძლება მოძველებული იყოს. თქვენი საფულე ავტომატურად სინქრონიზდება Litecoin-ის ქსელთან კავშირის დამყარების შემდეგ, ეს პროცესი ჯერ არ არის დასრულებული.</translation>
./qt/locale/bitcoin_ka.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ka.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ka.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ka.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ka.ts:        <translation>შეამოწმეთ, რომ მესიჯი ხელმოწერილია მითითებული Litecoin-მისამართით</translation>
./qt/locale/bitcoin_ka.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ka.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_la.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_la.ts:        <translation>Mitte nummos ad inscriptionem Litecoin</translation>
./qt/locale/bitcoin_la.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_la.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_la.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_la.ts:        <translation>Signa nuntios cum tuis inscriptionibus Litecoin ut demonstres te eas possidere</translation>
./qt/locale/bitcoin_la.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_la.ts:        <translation>Verifica nuntios ut certus sis eos signatos esse cum specificatis inscriptionibus Litecoin</translation>
./qt/locale/bitcoin_la.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_la.ts:        <translation>Aperi per se portam clientis Litecoin in itineratore.  Hoc tantum effectivum est si itineratrum tuum supportat UPnP et id activum est.</translation>
./qt/locale/bitcoin_la.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_la.ts:        <translation>Monstrata informatio fortasse non recentissima est.  Tuum cassidile per se synchronizat cum rete Litecoin postquam conexio constabilita est, sed hoc actio nondum perfecta est.</translation>
./qt/locale/bitcoin_la.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_la.ts:        <translation>Signa nuntium ut demonstres hanc inscriptionem Litecoin a te possessa esse</translation>
./qt/locale/bitcoin_la.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_la.ts:        <translation>Verifica nuntium ut cures signatum esse cum specifica inscriptione Litecoin</translation>
./qt/locale/bitcoin_la.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_la.ts:        <translation>Litecoin Nucleus</translation>
Binary file ./qt/locale/bitcoin_zh_CN.qm matches
Binary file ./qt/locale/bitcoin_it.qm matches
Binary file ./qt/locale/bitcoin_pam.qm matches
Binary file ./qt/locale/bitcoin_sl_SI.qm matches
./qt/locale/bitcoin_zh.ts:        <source>Warning: Invalid Litecoin address</source>
Binary file ./qt/locale/bitcoin_es.qm matches
Binary file ./qt/locale/bitcoin_ja.qm matches
Binary file ./qt/locale/bitcoin_nl.qm matches
./qt/locale/bitcoin_he_IL.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_he_IL.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_he_IL.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_te.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_te.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_te.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
Binary file ./qt/locale/bitcoin_nb.qm matches
Binary file ./qt/locale/bitcoin_et.qm matches
Binary file ./qt/locale/bitcoin_ne.qm matches
./qt/locale/bitcoin_da.ts:        <translation>Vælg adresse at sende litecoins til</translation>
./qt/locale/bitcoin_da.ts:        <translation>Vælg adresse at modtage litecoins med</translation>
./qt/locale/bitcoin_da.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_da.ts:        <translation>Disse er dine Litecoin-adresser til afsendelse af betalinger. Tjek altid beløb og modtagelsesadresse, inden du sender litecoins.</translation>
./qt/locale/bitcoin_da.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_da.ts:        <translation>Dette er dine Litecoin-adresser til modtagelse af betalinger. Det anbefales at bruge en ny modtagelsesadresse for hver transaktion.</translation>
./qt/locale/bitcoin_da.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_da.ts:        <translation>Advarsel: Hvis du krypterer din tegnebog og mister din adgangskode, vil du &lt;b&gt;MISTE ALLE DINE LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_da.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_da.ts:        <translation>%1 vil nu lukke for at færdiggøre krypteringsprocessen. Husk at kryptering af din tegnebog kan ikke beskytte dine litecoin fuldt ud mod at blive stjålet af eventuel malware, der måtte have inficeret din computer.</translation>
./qt/locale/bitcoin_da.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_da.ts:        <translation>Send litecoins til en Litecoin-adresse</translation>
./qt/locale/bitcoin_da.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_da.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_da.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_da.ts:        <translation>Signér beskeder med dine Litecoin-adresser for at bevise, at de tilhører dig</translation>
./qt/locale/bitcoin_da.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_da.ts:        <translation>Verificér beskeder for at sikre, at de er signeret med de angivne Litecoin-adresser</translation>
./qt/locale/bitcoin_da.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_da.ts:        <translation>Anmod om betalinger (genererer QR-koder og “litecoin:”-URI'er)</translation>
./qt/locale/bitcoin_da.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_da.ts:        <translation>Åbn en “litecoin:”-URI eller betalingsanmodning</translation>
./qt/locale/bitcoin_da.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_da.ts:        <translation><numerusform>%n aktiv forbindelse til Litecoin-netværket</numerusform><numerusform>%n aktive forbindelser til Litecoin-netværket</numerusform></translation>
./qt/locale/bitcoin_da.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_da.ts:        <translation>Vis %1 hjælpebesked for at få en liste over mulige tilvalg for Litecoin kommandolinje</translation>
./qt/locale/bitcoin_da.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_da.ts:        <translation>Der opstod en fatal fejl. Litecoin kan ikke længere fortsætte sikkert og vil afslutte.</translation>
./qt/locale/bitcoin_da.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_da.ts:        <translation>Den indtastede adresse “%1” er ikke en gyldig Litecoin-adresse.</translation>
./qt/locale/bitcoin_da.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_da.ts:        <translation>%1 vil downloade og gemme et kopi af Litecoin-blokkæden. Mindst %2 GB data vil blive gemt i denne mappe, og den vil vokse over tid. Tegnebogen vil også blive gemt i denne mappe.</translation>
./qt/locale/bitcoin_da.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_da.ts:        <translation>Nylige transaktioner er måske ikke synlige endnu, og derfor kan din tegnebogs saldo være ukorrekt. Denne information vil være korrekt, når din tegnebog er færdig med at synkronisere med litecoin-netværket, som detaljerne herunder viser.</translation>
./qt/locale/bitcoin_da.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_da.ts:        <translation>Forsøg på at bruge litecoin, som er indeholdt i endnu-ikke-viste transaktioner, accepteres ikke af netværket.</translation>
./qt/locale/bitcoin_da.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_da.ts:        <translation>Åbn automatisk Litecoin-klientens port på routeren. Dette virker kun, når din router understøtter UPnP, og UPnP er aktiveret.</translation>
./qt/locale/bitcoin_da.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_da.ts:        <translation>Forbind til Litecoin-netværket gennem en SOCKS5-proxy.</translation>
./qt/locale/bitcoin_da.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_da.ts:        <translation>Forbind til Litecoin-netværket gennem en separat SOCKS5-proxy for skjulte Tor-tjenester.</translation>
./qt/locale/bitcoin_da.ts:        <translation>Vælg standard for underopdeling af enhed, som skal vises i brugergrænsefladen og ved afsendelse af litecoins.</translation>
./qt/locale/bitcoin_da.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_da.ts:        <translation>Den viste information kan være forældet. Din tegnebog synkroniserer automatisk med Litecoin-netværket, når en forbindelse etableres, men denne proces er ikke gennemført endnu.</translation>
./qt/locale/bitcoin_da.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_da.ts:        <translation>Kan ikke starte litecoin: click-to-pay-håndtering</translation>
./qt/locale/bitcoin_da.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_da.ts:        <translation>URI kan ikke tolkes! Dette kan skyldes en ugyldig Litecoin-adresse eller forkert udformede URL-parametre.</translation>
./qt/locale/bitcoin_da.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_da.ts:        <translation>Indtast en Litecoin-adresse (fx %1)</translation>
./qt/locale/bitcoin_da.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_da.ts:        <translation>En valgfri besked, der føjes til betalingsanmodningen, og som vil vises, når anmodningen åbnes. Bemærk: Beskeden vil ikke sendes sammen med betalingen over Litecoin-netværket.</translation>
./qt/locale/bitcoin_da.ts:        <translation>Send litecoins</translation>
./qt/locale/bitcoin_da.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_da.ts:        <translation>Det er helt fint kun at betale det minimale gebyr, så længe den totale transaktionsvolumen er mindre end den plads, der er tilgængelig i blokkene. Men vær opmærksom på, at dette kan ende ud i transaktioner, der aldrig bliver bekræftet, når der bliver større forespørgsel efter litecoin-transaktioner, end hvad netværket kan bearbejde.</translation>
./qt/locale/bitcoin_da.ts:        <translation>Bekræft afsendelse af litecoins</translation>
./qt/locale/bitcoin_da.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_da.ts:        <translation>Advarsel: Ugyldig Litecoin-adresse</translation>
./qt/locale/bitcoin_da.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_da.ts:        <translation>Litecoin-adresse, som betalingen skal sendes til</translation>
./qt/locale/bitcoin_da.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_da.ts:        <translation>Gebyret vil blive trukket fra det sendte beløb. Modtageren vil modtage færre litecoin, end du indtaster i beløbfeltet. Hvis flere modtagere vælges, vil gebyret deles ligeligt.</translation>
./qt/locale/bitcoin_da.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_da.ts:        <translation>En besked, som blev føjet til “bitcon:”-URI'en, som vil gemmes med transaktionen til din reference. Bemærk: Denne besked vil ikke blive sendt over Litecoin-netværket.</translation>
./qt/locale/bitcoin_da.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_da.ts:        <translation>Du kan signere beskeder/aftaler med dine adresser for at bevise, at du kan modtage litecoin, der bliver sendt til adresserne. Vær forsigtig med ikke at signere noget vagt eller tilfældigt, da eventuelle phishing-angreb kan snyde dig til at overlade din identitet til dem. Signér kun fuldt ud detaljerede udsagn, som du er enig i.</translation>
./qt/locale/bitcoin_da.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_da.ts:        <translation>Litecoin-adresse, som beskeden skal signeres med</translation>
./qt/locale/bitcoin_da.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_da.ts:        <translation>Signér denne besked for at bevise, at Litecoin-adressen tilhører dig</translation>
./qt/locale/bitcoin_da.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_da.ts:        <translation>Litecoin-adressen, som beskeden blev signeret med</translation>
./qt/locale/bitcoin_da.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_da.ts:        <translation>Verificér beskeden for at sikre, at den er signeret med den angivne Litecoin-adresse</translation>
./qt/locale/bitcoin_da.ts:        <translation>Minede litecoins skal modne %1 blokke, før de kan bruges. Da du genererede denne blok, blev den transmitteret til netværket for at blive føjet til blokkæden. Hvis det ikke lykkes at få den i kæden, vil dens tilstand ændres til “ikke accepteret”, og den vil ikke kunne bruges. Dette kan ske nu og da, hvis en anden knude udvinder en blok inden for nogle få sekunder fra din.</translation>
./qt/locale/bitcoin_da.ts:        <translation>Send litecoins</translation>
./qt/locale/bitcoin_da.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_da.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_ja_JP.qm matches
./qt/locale/bitcoin_ca@valencia.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Estes són les vostres adreces de Litecoin per enviar els pagaments. Sempre reviseu l'import i l'adreça del destinatari abans de transferir monedes.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Estes són les vostres adreces Litecoin per rebre pagaments. Es recomana utilitzar una adreça nova de recepció per a cada transacció.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Avís: si encripteu el vostre moneder i perdeu la contrasenya, &lt;b&gt;PERDREU TOTS ELS VOSTRES LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Envia monedes a una adreça Litecoin</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Signa el missatges amb la seua adreça de Litecoin per provar que les poseeixes</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Verifiqueu els missatges per assegurar-vos que han estat signats amb una adreça Litecoin específica.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Sol·licita pagaments (genera codis QR i litecoin: URI)</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Obri una litecoin: sol·licitud d'URI o pagament</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>L'adreça introduïda «%1» no és una adreça de Litecoin vàlida.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Obri el port del client de Litecoin al router de forma automàtica. Això només funciona quan el router implementa UPnP i l'opció està activada.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Connecta a la xarxa Litecoin a través d'un proxy SOCKS5.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>La informació mostrada pot no estar al día. El teu moneder es sincronitza automàticament amb la xarxa Litecoin un cop s'ha establit connexió, però este proces no s'ha completat encara.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>No es pot iniciar litecoin: gestor clica-per-pagar</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>L'URI no pot ser analitzat! Això pot ser a causa d'una adreça de Litecoin no vàlida o per paràmetres URI amb mal format.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Introduïu una adreça de Litecoin (p. ex. %1)</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Un missatge opcional que s'adjuntarà a la sol·licitud de pagament, que es mostrarà quan s'òbriga la sol·licitud. Nota: El missatge no s'enviarà amb el pagament per la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>No hi ha cap problema en pagar només la comissió mínima sempre que hi haja menys volum de transacció que espai en els blocs. Però tingueu present que això pot acabar en una transacció que mai es confirme una vegada hi haja més demanda de transaccions de litecoins que la xarxa puga processar.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Avís: adreça Litecoin no vàlida</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>L'adreça Litecoin on enviar el pagament</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>La comissió es deduirà de l'import que s'enviarà. El destinatari rebrà menys litecoins que les que introduïu al camp d'import. Si se seleccionen múltiples destinataris, la comissió es dividirà per igual.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Un missatge que s'ha adjuntat al litecoin: URI que s'emmagatzemarà amb la transacció per a la vostra referència. Nota: el missatge no s'enviarà a través de la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les litecoins que s'hi envien. Aneu amb compte no signar res que siga vague o aleatori, perquè en alguns atacs de suplantació es pot provar que hi signeu la vostra identitat. Només signeu aquelles declaracions completament detallades en què hi esteu d'acord. </translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>L'adreça Litecoin amb què signar el missatge</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Signa el missatge per provar que ets propietari d'esta adreça Litecoin</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>L'adreça Litecoin amb què va ser signat el missatge</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Verificar el missatge per assegurar-se que ha estat signat amb una adreça Litecoin específica</translation>
./qt/locale/bitcoin_ca@valencia.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ca@valencia.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_lt.qm matches
./qt/locale/bitcoin_af.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_af.ts:        <translation>Hierdie is die adresse vanwaar u Litecoin betalings stuur. U moet altyd die bedrag en die adres van die ontvanger nagaan voordat u enige munte stuur.</translation>
./qt/locale/bitcoin_af.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_af.ts:        <translation>Hierdie is die adresse waar u Litecoins sal ontvang. Ons beveel aan dat u 'n nuwe adres kies vir elke transaksie</translation>
./qt/locale/bitcoin_af.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_af.ts:        <translation>Waarskuwing: Indien u die beursie kodifiseer en u vergeet u wagwoord &lt;b&gt;VERLOOR U AL U LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_af.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_af.ts:        <translation>Stuur munte na 'n Litecoin adres</translation>
./qt/locale/bitcoin_af.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_af.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_af.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_af.ts:        <translation>Onderteken boodskappe met u Litecoin adresse om u eienaarskap te bewys</translation>
./qt/locale/bitcoin_af.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_af.ts:        <translation>Verifieër boodskappe om seker te maak dat dit met die gespesifiseerde Litecoin adresse</translation>
./qt/locale/bitcoin_af.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_af.ts:        <translation>Versoek betalings (genereer QR-kodes en litecoin: URI's)</translation>
./qt/locale/bitcoin_af.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_af.ts:        <translation>Skep 'n litecoin: URI of betalingsversoek</translation>
./qt/locale/bitcoin_af.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_af.ts:        <translation>Litecoin Kern</translation>
./qt/locale/bitcoin_sq.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_sq.ts:        <translation>Këto janë Litecoin adresat e juaja për të dërguar pagesa. Gjithmon kontrolloni shumën dhe adresën pranuese para se të dërgoni monedha.</translation>
./qt/locale/bitcoin_sq.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_sq.ts:        <translation>Këto janë Litecoin adresat e juaja për të pranuar pagesa. Rekomandohet që gjithmon të përdorni një adresë të re për çdo transaksion.</translation>
./qt/locale/bitcoin_sq.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_sq.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_sq.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_sq.ts:        <translation>Berthama Litecoin</translation>
./qt/locale/bitcoin_es_VE.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_VE.ts:        <translation>Enviar monedas a una dirección Litecoin</translation>
./qt/locale/bitcoin_es_VE.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_VE.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_VE.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_es_VE.ts:        <translation>Firma mensajes con tus direcciones Litecoin para probar que eres dueño de ellas</translation>
./qt/locale/bitcoin_es_VE.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_es_VE.ts:        <translation>Verificar mensajes para asegurar que estaban firmados con direcciones Litecoin especificas</translation>
./qt/locale/bitcoin_es_VE.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_VE.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_ta.qm matches
./qt/locale/bitcoin_ms_MY.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Ini adalah alamat Litecoin anda untuk pembayaran. Periksa jumlah dan alamat penerima sebelum membuat penghantaran koin sentiasa.</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Ini adalah alamat Litecoin anda untuk menerima pembayaraan.  Anda disyorkan untuk menguna alamat menerima untuk setiap transaksi.</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Amaran: Jika anda enkripkan dompet anda dan hilangkan frasa laluan, anda akan &lt;b&gt;ANDA AKAN HILANGKAN SEMUA LITECOIN ANDA&lt;/b&gt;!</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>%1 akan tutup untuk menyelesaikan proses enkripsi. Ingat bahawa enkripsi tidak boleh melidungi sepenuhnya litecoins anda daripada dicuri oleh malware yang menjangkiti komputer anda.</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Menghantar koin kepada alamat Litecoin</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Log mesej dengan alamat Litecoin anda untuk membuktikan anda memilikinya</translation>
./qt/locale/bitcoin_ms_MY.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ms_MY.ts:        <translation>Sahkan mesej untuk memastikan mereka telah ditandatangani dengan alamat Litecoin yang ditentukan</translation>
Binary file ./qt/locale/bitcoin_sr.qm matches
Binary file ./qt/locale/bitcoin_ca.qm matches
Binary file ./qt/locale/bitcoin_sq.qm matches
./qt/locale/bitcoin_zh_TW.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>這些是你要付款過去的 Litecoin 位址。在付錢之前，務必要檢查金額和收款位址是否正確。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>這些是你用來收款的 Litecoin 位址。建議在每次交易時，都使用一個新的收款位址。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>警告: 如果把錢包加密後又忘記密碼，你就會從此&lt;b&gt;失去其中所有的 Litecoin 了&lt;/b&gt;！</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_zh_TW.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>付錢給一個 Litecoin 位址</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>用 Litecoin 位址簽署訊息來證明位址是你的</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>驗證訊息是用來確定訊息是用指定的 Litecoin 位址簽署的</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>要求付款(產生 QR Code 和 litecoin 付款協議的資源識別碼: URI)</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>開啓 litecoin 協議的資源識別碼(URI)或付款要求</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation><numerusform>%n 個運作中的 Litecoin 網路連線</numerusform></translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_zh_TW.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>發生了致命的錯誤。Litecoin 軟體沒辦法再繼續安全執行，只好結束。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>輸入的位址 %1 並不是有效的 Litecoin 位址。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>%1 會下載並儲存一份 Litecoin 區塊鏈的拷貝。至少有 %2GB 的資料會儲存到這個目錄中，並且還會持續增長。另外錢包資料也會儲存在這個目錄。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>最近的交易可能還看不到，因此錢包餘額可能不正確。在錢包軟體完成跟 litecoin 網路的同步後，這裡的資訊就會正確。詳情請見下面。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>使用還沒顯示出來的交易所影響到的 litecoin 可能會不被網路所接受。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>自動在路由器上開放 Litecoin 的客戶端通訊埠。只有在你的路由器支援且開啓「通用即插即用」協定(UPnP)時才有作用。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>透過 SOCKS5 代理伺服器來連線到 Litecoin 網路。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>透過另外的 SOCKS5 代理伺服器來連線到 Litecoin 網路中的 Tor 隱藏服務。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>顯示的資訊可能是過期的。跟 Litecoin 網路的連線建立後，你的錢包會自動和網路同步，但是這個步驟還沒完成。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>沒辦法啟動 litecoin 協議的「按就付」處理器</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>沒辦法解析 URI 位址！可能是因為 Litecoin 位址無效，或是 URI 參數格式錯誤。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>輸入 Litecoin 位址 (比如說 %1)</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>附加在付款要求中的訊息，可以不填，打開要求內容時會顯示。注意: 這個訊息不會隨著付款送到 Litecoin 網路上。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_zh_TW.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>警告: Litecoin 位址無效</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>接收付款的 Litecoin 位址</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>手續費會從要付款出去的金額中扣掉。因此收款人會收到比輸入的金額還要少的 litecoin。如果有多個收款人的話，手續費會平均分配來扣除。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>附加在 Litecoin 付款協議的資源識別碼(URI)中的訊息，會和交易內容一起存起來，給你自己做參考。注意: 這個訊息不會送到 Litecoin 網路上。</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_zh_TW.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>用來簽署訊息的 Litecoin 位址</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>簽署這個訊息來證明這個 Litecoin 位址是你的</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>簽署這個訊息的 Litecoin 位址</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>驗證這個訊息來確定是用指定的 Litecoin 位址簽署的</translation>
./qt/locale/bitcoin_zh_TW.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_zh_TW.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_kk_KZ.qm matches
Binary file ./qt/locale/bitcoin_el_GR.qm matches
Binary file ./qt/locale/bitcoin_eo.qm matches
Binary file ./qt/locale/bitcoin_be_BY.qm matches
./qt/locale/bitcoin_et.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_et.ts:        <translation>Need on sinu Litecoin aadressid maksete saatmiseks. Ennem müntide saatmist kontrolli alati summat ja makse saaja aadressi.</translation>
./qt/locale/bitcoin_et.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_et.ts:        <translation>Need on sinu Litecoin aadressid sisenevate maksete vastu võtmiseks. Soovitav on iga tehingu tarbeks kasutada uut aadressi.</translation>
./qt/locale/bitcoin_et.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_et.ts:        <translation>Hoiatus:Kui sa krüpteerid oma rahakoti ja kaotad salafraasi, siis sa&lt;b&gt;KAOTAD OMA LITECOINID&lt;/b&gt;!</translation>
./qt/locale/bitcoin_et.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_et.ts:        <translation>Saada münte Litecoini aadressile</translation>
./qt/locale/bitcoin_et.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_et.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_et.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_et.ts:        <translation>Omandi tõestamiseks allkirjasta sõnumid oma Litecoini aadressiga</translation>
./qt/locale/bitcoin_et.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_et.ts:        <translation>Kinnita sõnumid kindlustamaks et need allkirjastati määratud Litecoini aadressiga</translation>
./qt/locale/bitcoin_et.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_et.ts:        <translation>Loo maksepäring (genereerib QR koodid ja litecoini: URId)</translation>
./qt/locale/bitcoin_et.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_et.ts:        <translation>Ava litecoini: URI või maksepäring</translation>
./qt/locale/bitcoin_et.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_et.ts:        <translation><numerusform>%n aktiivne ühendus Litecoini võrku</numerusform><numerusform>%n aktiivset ühendust Litecoini võrku</numerusform></translation>
./qt/locale/bitcoin_et.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_et.ts:        <translation>Sisestatud aadress "%1" ei ole korrektne Litecoin aadress.</translation>
./qt/locale/bitcoin_et.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_et.ts:        <translation>Litecoini kliendi pordi automaatne avamine ruuteris. Toimib, kui sinu ruuter aktsepteerib UPnP ühendust.</translation>
./qt/locale/bitcoin_et.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_et.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_et.ts:        <translation>Hoiatus: Ebakorrektne Litecoin aadress</translation>
./qt/locale/bitcoin_et.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_et.ts:        <translation>Litecoin aadress millega sõnum allkirjastada</translation>
./qt/locale/bitcoin_et.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_et.ts:        <translation>Allkirjasta sõnum Litecoini aadressi sulle kuulumise tõestamiseks</translation>
./qt/locale/bitcoin_et.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_et.ts:        <translation>Litecoin aadress millega sõnum on allkirjastatud</translation>
./qt/locale/bitcoin_et.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_et.ts:        <translation>Kinnita sõnum tõestamaks selle allkirjastatust määratud Litecoini aadressiga.</translation>
./qt/locale/bitcoin_et.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_et.ts:        <translation>Litecoini tuumik</translation>
./qt/locale/bitcoin_pl.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Tutaj znajdują się adresy Litecoin na które wysyłasz płatności. Zawsze sprawdzaj ilość i adres odbiorcy przed wysyłką monet.</translation>
./qt/locale/bitcoin_pl.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_pl.ts:        <translation>To są twoje adresy Litecoin do odbierania płatności. Zaleca się używanie nowych adresów odbiorczych dla każdej transakcji.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_pl.ts:        <translation>Uwaga: jeśli zaszyfrujesz swój portfel i zgubisz hasło &lt;b&gt;STRACISZ WSZYSTKIE SWOJE LITECOINY&lt;/b&gt;!</translation>
./qt/locale/bitcoin_pl.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_pl.ts:        <translation>%1 zamknie się aby dokończyć proces szyfrowania. Pamiętaj, że szyfrowanie portfela nie zabezpiecza w pełni Twoich litecoinów przed kradzieżą przez wirusy lub trojany mogące zainfekować Twój komputer.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wyślij monety na adres litecoinowy</translation>
./qt/locale/bitcoin_pl.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_pl.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_pl.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_pl.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_pl.ts:        <translation>Zweryfikuj wiadomość,  aby upewnić się, że została podpisana podanym adresem litecoinowym.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_pl.ts:        <translation>Żądaj płatności (generuje kod QR oraz litecoinowe URI)</translation>
./qt/locale/bitcoin_pl.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_pl.ts:        <translation>Otwórz URI litecoin: lub żądanie zapłaty</translation>
./qt/locale/bitcoin_pl.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_pl.ts:        <translation><numerusform>%n aktywnych połączeń do sieci Litecoin</numerusform><numerusform>%n aktywnych połączeń do sieci Litecoin</numerusform><numerusform>%n aktywnych połączeń do sieci Litecoin</numerusform><numerusform>%n aktywnych połączeń do sieci Litecoin</numerusform></translation>
./qt/locale/bitcoin_pl.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_pl.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wystąpił krytyczny błąd. Litecoin nie jest w stanie kontynuować bezpiecznie i zostanie zamknięty.</translation>
./qt/locale/bitcoin_pl.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wprowadzony adres "%1" nie jest prawidłowym adresem Litecoin.</translation>
./qt/locale/bitcoin_pl.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_pl.ts:        <translation>%1 pobierze i będzie przechowywał kopię łańcucha bloków Litecoin. W wybranym katalogu zostanie zapisanych %2GB danych, a z czasem ta ilość będzie rosła. Portfel będzie przechowywany w tym samym katalogu.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Świeże transakcje mogą nie być jeszcze widoczne, a zatem saldo portfela może być nieprawidłowe. Te detale będą poprawne, gdy portfel zakończy synchronizację z siecią litecoin, zgodnie z poniższym opisem.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Próba wydania litecoinów które nie są jeszcze wyświetlone jako transakcja zostanie odrzucona przez sieć. </translation>
./qt/locale/bitcoin_pl.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Automatycznie otwiera port klienta Litecoin na routerze. Ta opcja dzieła tylko jeśli twój router wspiera UPnP i jest ono włączone.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Połącz się z siecią Litecoin poprzez proxy SOCKS5.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Połącz się z siecią Litecoin przy pomocy oddzielnego SOCKS5 proxy dla sieci TOR</translation>
./qt/locale/bitcoin_pl.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wyświetlana informacja może być nieaktualna. Twój portfel synchronizuje się automatycznie z siecią litecoin, zaraz po tym jak uzyskano połączenie, ale proces ten nie został jeszcze ukończony.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_pl.ts:        <translation>Nie można uruchomić protokołu litecoin: kliknij-by-zapłacić</translation>
./qt/locale/bitcoin_pl.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wprowadź adres litecoinowy (np. %1)</translation>
./qt/locale/bitcoin_pl.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Opcjonalna wiadomość do dołączenia do żądania płatności, która będzie wyświetlana, gdy żądanie zostanie otwarte. Uwaga: wiadomość ta nie zostanie wysłana wraz z płatnością w sieci Litecoin.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Zapłacenie tylko minimalnej opłaty jest nadal wystarczające, dopóki jest mniejszy wolumen transakcji niż miejsca w blokach. Należy jednak mieć świadomość, że może skończyć się to niezatwierdzeniem nigdy transakcji, gdy jest większe zapotrzebowanie na transakcje litecoina niż sieć może przetworzyć.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_pl.ts:        <translation>Ostrzeżenie: nieprawidłowy adres Litecoin</translation>
./qt/locale/bitcoin_pl.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_pl.ts:        <translation>Adres Litecoin gdzie wysłać płatność</translation>
./qt/locale/bitcoin_pl.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Opłata zostanie odjęta od kwoty wysyłane.Odbiorca otrzyma mniej niż litecoins wpisz w polu kwoty. Jeśli wybrano kilku odbiorców, opłata jest podzielona równo.</translation>
./qt/locale/bitcoin_pl.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_pl.ts:        <translation>Wiadomość, która została dołączona do URI litecoin:, która będzie przechowywana wraz z transakcją w celach informacyjnych. Uwaga: Ta wiadomość nie będzie rozsyłana w sieci Litecoin.</translation>
./qt/locale/bitcoin_pl.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_pl.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_pl.ts:        <translation>Adres Litecoin, za pomocą którego podpisać wiadomość</translation>
./qt/locale/bitcoin_pl.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_pl.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_pl.ts:        <translation>Adres Litecoin, którym została podpisana wiadomość</translation>
./qt/locale/bitcoin_pl.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_pl.ts:        <translation>Zweryfikuj wiadomość,  aby upewnić się, że została podpisana odpowiednim adresem Litecoin.</translation>
./qt/locale/bitcoin_pl.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_pl.ts:        <translation>Rdzeń Litecoina</translation>
Binary file ./qt/locale/bitcoin_es_MX.qm matches
Binary file ./qt/locale/bitcoin_bs.qm matches
./qt/locale/bitcoin_bg.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_bg.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_bg.ts:        <translation>Това са Вашите Litecoin адреси,благодарение на които ще получавате плащания.Препоръчително е да използвате нови адреси за получаване на всяка транзакция.</translation>
./qt/locale/bitcoin_bg.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_bg.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_bg.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_bg.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_bg.ts:        <translation>Пишете съобщения със своя Litecoin адрес за да докажете,че е ваш.</translation>
./qt/locale/bitcoin_bg.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_bg.ts:        <translation>Потвърждаване на съобщения  за да се знае,че са написани с дадените Litecoin адреси.</translation>
./qt/locale/bitcoin_bg.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_bg.ts:        <translation>Изискване на плащания(генерира QR кодове и Litecoin: URIs)</translation>
./qt/locale/bitcoin_bg.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_bg.ts:        <translation>Отворете Litecoin: URI  или заявка за плащане</translation>
./qt/locale/bitcoin_bg.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_bg.ts:        <translation>Покажи %1 помощно съобщение за да получиш лист с възможни Litecoin команди</translation>
./qt/locale/bitcoin_bg.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_bg.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_bg.ts:        <translation>Автоматично отваряне на входящия Litecoin порт. Работи само с рутери поддържащи UPnP.</translation>
./qt/locale/bitcoin_bg.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_bg.ts:        <translation>Свързване с Litecoin мрежата чрез SOCKS5  прокси.</translation>
./qt/locale/bitcoin_bg.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_bg.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_bg.ts:        <translation>Litecoin не можe да се стартира: click-to-pay handler</translation>
./qt/locale/bitcoin_bg.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_bg.ts:        <translation>Въведете Litecoin адрес (например: %1)</translation>
./qt/locale/bitcoin_bg.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_bg.ts:        <translation>Внимание: Невалиден Litecoin адрес</translation>
./qt/locale/bitcoin_bg.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_bg.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_bg.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_bg.ts:        <translation>Litecoin ядро</translation>
Binary file ./qt/locale/bitcoin_en_GB.qm matches
Binary file ./qt/locale/bitcoin_he_IL.qm matches
./qt/locale/bitcoin_ca_ES.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Aquestes són les vostres adreces de Litecoin per enviar els pagaments. Sempre reviseu l'import i l'adreça del destinatari abans de transferir monedes.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Aquestes són les vostres adreces Litecoin per rebre pagaments. Es recomana utilitzar una adreça nova de recepció per a cada transacció.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Avís: si encripteu el vostre moneder i perdeu la contrasenya, &lt;b&gt;PERDREU TOTS ELS VOSTRES LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Ara es tancarà el %1 per finalitzar el procés d'encriptació. Recordeu que encriptar el vostre moneder no garanteix que les vostres litecoins no puguin ser robades per programari maliciós que infecti l'ordinador.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Envia monedes a una adreça Litecoin</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Signa el missatges amb la seva adreça de Litecoin per provar que les poseeixes</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Verifiqueu els missatges per assegurar-vos que han estat signats amb una adreça Litecoin específica.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Sol·licita pagaments (genera codis QR i litecoin: URI)</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Obre una litecoin: sol·licitud d'URI o pagament</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation><numerusform>%n connexió activa a la xarxa Litecoin</numerusform><numerusform>%n connexions actives a la xarxa Litecoin</numerusform></translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Mostra el missatge d'ajuda del %1 per obtenir una llista amb les possibles opcions de línia d'ordres de Litecoin</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>S'ha produït un error fatal. Litecoin no pot continuar amb seguretat i finalitzarà.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>L'adreça introduïda «%1» no és una adreça de Litecoin vàlida.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>%1 baixarà i emmagatzemarà una còpia de la cadena de blocs de Litecoin. Com a mínim %2GB de dades s'emmagatzemaran en aquest directori, i augmentarà al llarg del temps. El moneder també s'emmagatzemarà en aquest directori.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Obre el port del client de Litecoin al router de forma automàtica. Això només funciona quan el router implementa UPnP i l'opció està activada.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Connecta a la xarxa Litecoin a través d'un proxy SOCKS5.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Conectar a la red de Litecoin a través de un proxy SOCKS5 per als serveis ocults de Tor</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>La informació mostrada pot no estar al día. El teu moneder es sincronitza automàticament amb la xarxa Litecoin un cop s'ha establert connexió, però aquest proces no s'ha completat encara.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>No es pot iniciar litecoin: controlador click-to-pay</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>L'URI no pot ser analitzat! Això pot ser a causa d'una adreça de Litecoin no vàlida o per paràmetres URI amb mal format.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Introduïu una adreça de Litecoin (p. ex. %1)</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Un missatge opcional que s'adjuntarà a la sol·licitud de pagament, que es mostrarà quan s'obri la sol·licitud. Nota: El missatge no s'enviarà amb el pagament per la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>No hi ha cap problema en pagar només la comissió mínima sempre que hi hagi menys volum de transacció que espai en els blocs. Però tingueu present que això pot acabar en una transacció que mai es confirmi una vegada hi hagi més demanda de transaccions de litecoins que la xarxa pugui processar.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Avís: adreça Litecoin no vàlida</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>L'adreça Litecoin on enviar el pagament</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>La comissió es deduirà de l'import que s'enviarà. El destinatari rebrà menys litecoins que les que introduïu al camp d'import. Si se seleccionen múltiples destinataris, la comissió es dividirà per igual.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Un missatge que s'ha adjuntat al litecoin: URI que s'emmagatzemarà amb la transacció per a la vostra referència. Nota: el missatge no s'enviarà a través de la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les litecoins que s'hi envien. Aneu amb compte no signar res que sigui vague o aleatori, perquè en alguns atacs de suplantació es pot provar que hi signeu la vostra identitat. Només signeu aquelles declaracions completament detallades en què hi esteu d'acord. </translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>L'adreça Litecoin amb què signar el missatge</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Signa el missatge per provar que ets propietari d'aquesta adreça Litecoin</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>L'adreça Litecoin amb què va ser signat el missatge</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Verificar el missatge per assegurar-se que ha estat signat amb una adreça Litecoin específica</translation>
./qt/locale/bitcoin_ca_ES.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ca_ES.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_es_UY.qm matches
Binary file ./qt/locale/bitcoin_zh.qm matches
./qt/locale/bitcoin_lv_LV.ts:        <translation>Izvēlies adresi uz kuru sūtīt litecoins</translation>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Izvēlies adresi ar kuru saņemt litecoins</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Nosūtīt bitkoinus uz Litecoin adresi</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Parakstīt ziņojumus ar savām Litecoin adresēm lai pierādītu ka tās pieder tev</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Pārbaudīt ziņojumus lai pārliecinātos, ka tie tika parakstīti ar norādītajām Litecoin adresēm</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Pieprasīt maksājumus (izveido QR kodu un litecoin: URIs)</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Atvērt litecoin URI vai maksājuma pieprasījumu</translation>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Ieslēgt litecoin &amp;kontroles funkcijas</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Uz rūtera automātiski atvērt Litecoin klienta portu. Tas strādā tikai tad, ja rūteris atbalsta UPnP un tas ir ieslēgts.</translation>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Vai rādīt Litecoin kontroles funkcijas vai nē.</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Attēlotā informācija var būt novecojusi. Jūsu maciņš pēc savienojuma izveides automātiski sinhronizējas ar Litecoin tīklu, taču šis process vēl nav beidzies.</translation>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Litecoin Kontroles Funkcijas</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Parakstīt ziņojumu lai pierādītu, ka esi šīs Litecoin adreses īpašnieks.</translation>
./qt/locale/bitcoin_lv_LV.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_lv_LV.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_gl.qm matches
Binary file ./qt/locale/bitcoin_pt_BR.qm matches
Binary file ./qt/locale/bitcoin_te.qm matches
./qt/locale/bitcoin_ru_RU.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ru_RU.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_ru_RU.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ru_RU.ts:        <translation>Подключится к сети Litecoin через SOCKS5 прокси.</translation>
./qt/locale/bitcoin_ru_RU.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ru_RU.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ru_RU.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Тангаларни Litecoin манзилига жўнатиш</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Litecoin манзилидан унинг эгаси эканлигингизни исботлаш учун хабарлар ёзинг</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Хабарларни махсус Litecoin манзилларингиз билан ёзилганлигига ишонч ҳосил қилиш учун уларни тасдиқланг</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Тўловлар (QR кодлари ва litecoin ёрдамида яратишлар: URI’лар) сўраш</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Litecoin’ни очиш: URI ёки тўлов сўрови</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation><numerusform>%n та Litecoin тармоғига фаол уланиш мавжуд</numerusform></translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Кўрсатилган маълумот эскирган бўлиши мумкин. Ҳамёнингиз алоқа ўрнатилгандан сўнг Litecoin тармоқ билан автоматик тарзда синхронланади, аммо жараён ҳалигача тугалланмади.</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Litecoin манзилини киритинг (масалан.  %1)</translation>
./qt/locale/bitcoin_uz@Cyrl.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_uz@Cyrl.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_kk_KZ.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_DO.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Enviar monedas a una dirección Litecoin</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Firmar mensajes con sus direcciones Litecoin para demostrar la propiedad</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Verificar mensajes comprobando que están firmados con direcciones Litecoin concretas</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Solicitar pagos (genera codigo QR y URL's de Litecoin)</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Abrir un litecoin: URI o petición de pago</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Abrir automáticamente el puerto del cliente Litecoin en el router. Esta opción solo funciona si el router admite UPnP y está activado.</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>La información mostrada puede estar desactualizada. Su monedero se sincroniza automáticamente con la red Litecoin después de que se haya establecido una conexión, pero este proceso aún no se ha completado.</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Firmar el mensaje para demostrar que se posee esta dirección Litecoin</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Verificar el mensaje para comprobar que fue firmado con la dirección Litecoin indicada</translation>
./qt/locale/bitcoin_es_DO.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_DO.ts:        <translation>Núcleo de Litecoin</translation>
Binary file ./qt/locale/bitcoin_tr.qm matches
./qt/locale/bitcoin_sr.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_sr.ts:        <translation>Пошаљите новац на litecoin адресу</translation>
Binary file ./qt/locale/bitcoin_sv.qm matches
./qt/locale/bitcoin_fa.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_fa.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_fa.ts:        <translation>ارسال وجه به نشانی Litecoin</translation>
./qt/locale/bitcoin_fa.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_fa.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_fa.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_fa.ts:        <translation>برای اثبات اینکه پیام‌ها به شما تعلق دارند، آن‌ها را با نشانی Litecoin خود امضا کنید</translation>
./qt/locale/bitcoin_fa.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_fa.ts:        <translation>برای حصول اطمینان از اینکه پیام با نشانی Litecoin مشخص شده امضا است یا خیر، پیام را شناسایی کنید</translation>
./qt/locale/bitcoin_fa.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_fa.ts:        <translation>درخواست پرداخت ( تولید کد کیوار و ادرس litecoin)</translation>
./qt/locale/bitcoin_fa.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_fa.ts:        <translation>بازکردن یک litecoin: آدرس یا درخواست پرداخت</translation>
./qt/locale/bitcoin_fa.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_fa.ts:        <translation><numerusform>%n ارتباط فعال با شبکهٔ Litecoin</numerusform></translation>
./qt/locale/bitcoin_fa.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_fa.ts:        <translation>نشانی وارد شده "%1" یک نشانی معتبر Litecoin نیست.</translation>
./qt/locale/bitcoin_fa.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_fa.ts:        <translation>باز کردن خودکار درگاه شبکهٔ Litecoin روی روترها. تنها زمانی کار می‌کند که روتر از پروتکل UPnP پشتیبانی کند و این پروتکل فعال باشد.</translation>
./qt/locale/bitcoin_fa.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_fa.ts:        <translation>اطلاعات نمایش‌داده شده ممکن است قدیمی باشند. بعد از این که یک اتصال با شبکه برقرار شد، کیف پول شما به‌صورت خودکار با شبکهٔ Litecoin همگام‌سازی می‌شود. اما این روند هنوز کامل نشده است.</translation>
./qt/locale/bitcoin_fa.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_fa.ts:        <translation>یک آدرس Litecoin وارد کنید (مثلاً %1)</translation>
./qt/locale/bitcoin_fa.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_fa.ts:        <translation>نشانی Litecoin برای ارسال پرداخت به آن</translation>
./qt/locale/bitcoin_fa.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_fa.ts:        <translation>نشانی Litecoin برای امضاء پیغام با آن</translation>
./qt/locale/bitcoin_fa.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_fa.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_fa.ts:        <translation>نشانی Litecoin که پیغام با آن امضاء شده</translation>
./qt/locale/bitcoin_fa.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_fa.ts:        <translation>برای حصول اطمینان از اینکه پیام با نشانی Litecoin مشخص شده امضا است یا خیر، پیام را شناسایی کنید</translation>
./qt/locale/bitcoin_fa.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_fa.ts:        <translation> هسته Litecoin </translation>
Binary file ./qt/locale/bitcoin_lv_LV.qm matches
Binary file ./qt/locale/bitcoin_hi_IN.qm matches
./qt/locale/bitcoin_pt_PT.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Estes são os seus endereços Litecoin para enviar pagamentos. Verifique sempre o valor e o endereço de envio antes de enviar moedas.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Estes são os seus endereços Litecoin para receber pagamentos. É recomendado que utilize um endereço novo para cada transacção.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Aviso: se encriptar a sua carteira e perder a sua frase de segurnça, &lt;b&gt;PERDERÁ TODOS OS SEUS LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>%1 irá agora ser fechado para terminar o processo de encriptação. Recorde que a encriptação da sua carteira não protegerá totalmente os seus litecoins de serem roubados por programas maliciosos que infectem o seu computador.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Enviar moedas para um endereço Litecoin</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Assine as mensagens com os seus endereços Litecoin para provar que é o proprietário dos mesmos</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Verifique mensagens para assegurar que foram assinadas com o endereço Litecoin especificado</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Solicitar pagamentos (gera códigos QR e litecoin: URIs)</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Abrir URI litecoin: ou pedido de pagamento</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation><numerusform>%n ligação ativa à rede Litecoin</numerusform><numerusform>%n ligações ativas à rede Litecoin</numerusform></translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_pt_PT.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Ocorreu um erro fatal. O Litecoin não pode continuar com segurança e irá fechar.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>O endereço introduzido "%1" não é um endereço litecoin válido.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_pt_PT.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_pt_PT.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Tentar enviar litecoins que estão afetadas por transações ainda não exibidas não será aceite pela rede.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Abrir a porta do cliente litecoin automaticamente no seu router. Isto apenas funciona se o seu router suportar UPnP e este se encontrar ligado.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Conectar à rede da Litecoin através dum proxy SOCLS5.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Ligar à rede Litecoin através de um proxy SOCKS5 separado para utilizar os serviços ocultos do Tor.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>A informação mostrada poderá estar desatualizada. A sua carteira sincroniza automaticamente com a rede Litecoin depois de estabelecer ligação, mas este processo ainda não está completo.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Impossível iniciar o controlador de litecoin: click-to-pay</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>URI não foi lido correctamente! Isto pode ser causado por um endereço Litecoin inválido ou por parâmetros URI malformados.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Entre um endereço Litecoin (ex. %1)</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Uma mensagem opcional para anexar ao pedido de pagamento, que será exibida quando o pedido for aberto. Nota: A mensagem não será enviada com o pagamento através da rede Litecoin.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_pt_PT.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Aviso: endereço Litecoin inválido</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>O endereço Litecoin para enviar o pagamento</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>A taxa será deduzida ao montante enviado. O destinatário irá receber menos litecoins do que as que introduziu no campo montante. Caso sejam seleccionados múltiplos destinatários, a taxa será repartida equitativamente.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Uma mensagem que estava anexada ao URI litecoin: que será armazenada com a transação para sua referência. Nota: Esta mensagem não será enviada através da rede Litecoin.</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_pt_PT.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>O endereço Litecoin para designar a mensagem</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Assine uma mensagem para provar que é dono deste endereço Litecoin</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>O endereço Litecoin com que a mensagem foi designada</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Verifique a mensagem para assegurar que foi assinada com o endereço Litecoin especificado</translation>
./qt/locale/bitcoin_pt_PT.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_pt_PT.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_sv.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Detta är dina Litecoin adresser för att skicka betalningar. Kolla alltid summan och den mottagande adressen innan du skickar Litecoins.</translation>
./qt/locale/bitcoin_sv.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Detta är dina Litecoin adresser för att ta emot betalningar. Det rekommenderas att använda en ny mottagningsadress för varje transaktion.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_sv.ts:        <translation>VARNING: Om du krypterar din plånbok och glömmer ditt lösenord, kommer du att &lt;b&gt;FÖRLORA ALLA DINA LITECOIN&lt;/b&gt;!</translation>
./qt/locale/bitcoin_sv.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_sv.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_sv.ts:        <translation>Skicka litecoins till en Litecoin-adress</translation>
./qt/locale/bitcoin_sv.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_sv.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_sv.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_sv.ts:        <translation>Signera meddelanden med din Litecoin-adress för att bevisa att du äger dem</translation>
./qt/locale/bitcoin_sv.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_sv.ts:        <translation>Verifiera meddelanden för att vara säker på att de var signerade med specificerade Litecoin-adresser</translation>
./qt/locale/bitcoin_sv.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_sv.ts:        <translation>Begär betalning (genererar QR-koder och litecoin-URI)</translation>
./qt/locale/bitcoin_sv.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_sv.ts:        <translation>Öppna en litecoin: URI eller betalningsbegäran</translation>
./qt/locale/bitcoin_sv.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_sv.ts:        <translation><numerusform>%n aktiva anslutningar till Litecoin-nätverket.</numerusform><numerusform>%n aktiva anslutningar till Litecoin-nätverket.</numerusform></translation>
./qt/locale/bitcoin_sv.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_sv.ts:        <translation>Visa %1 hjälpmeddelande för att få en lista med möjliga Litecoin kommandoradsalternativ.</translation>
./qt/locale/bitcoin_sv.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Ett kritiskt fel uppstod. Litecoin kan inte fortsätta att köra säkert och kommer att avslutas.</translation>
./qt/locale/bitcoin_sv.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Den angivna adressen "%1" är inte en giltig Litecoin-adress.</translation>
./qt/locale/bitcoin_sv.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_sv.ts:        <translation>%1 kommer att ladda ner och spara en kopia av Litecoin blockkedjan. Åtminstone %2GB av data kommer att sparas i denna katalog, och den kommer att växa över tiden. Plånboken kommer också att sparas i denna katalog.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Nyligen gjorda transaktioner visas inte korrekt och därför kan ditt din plånboks saldo visas felaktigt. Denna information kommer att visas korrekt så snart din plånbok har synkroniserat klart med litecoin nätverket, enligt detaljer nedan.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Öppna automatiskt Litecoin-klientens port på routern. Detta fungerar endast om din router har UPnP aktiverat.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Anslut till Litecoin-nätverket genom en SOCKS5-proxy.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Anslut till Litecoin-nätverket genom en separat SOCKS5-proxy för dolda tjänster i Tor.</translation>
./qt/locale/bitcoin_sv.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Den visade informationen kan vara inaktuell. Plånboken synkroniseras automatiskt med Litecoin-nätverket efter att anslutningen är upprättad, men denna process har inte slutförts ännu.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_sv.ts:        <translation>Kan inte starta litecoin: klicka-och-betala handhavare</translation>
./qt/locale/bitcoin_sv.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_sv.ts:        <translation>URI kan inte tolkas! Detta kan orsakas av en ogiltig Litecoin-adress eller felaktiga URI parametrar.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_sv.ts:        <translation>Ange en Litecoin-adress (t.ex. %1)</translation>
./qt/locale/bitcoin_sv.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Ett frivilligt meddelande att bifoga betalningsbegäran, vilket visas när begäran öppnas. NB: Meddelandet kommer inte att sändas med betalningen över Litecoinnätverket.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Att betala endast den minsta avgiften är bara bra så länge det är mindre transaktionsvolym än utrymme i blocken. Men tänk på att det kan hamna i en aldrig bekräftar transaktion när det finns mer efterfrågan på litecoin transaktioner än nätverket kan bearbeta.</translation>
./qt/locale/bitcoin_sv.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_sv.ts:        <translation>Varning: Felaktig Litecoinadress</translation>
./qt/locale/bitcoin_sv.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_sv.ts:        <translation>Litecoinadress att sända betalning till</translation>
./qt/locale/bitcoin_sv.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Avgiften dras från beloppet som skickas. Mottagaren kommer att få mindre litecoins än du angivit i belopp-fältet. Om flera mottagare valts kommer avgiften delas jämt.</translation>
./qt/locale/bitcoin_sv.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Ett meddelande som bifogades litecoin-URI, vilket lagras med transaktionen som referens. NB: Meddelandet kommer inte att sändas över Litecoinnätverket.</translation>
./qt/locale/bitcoin_sv.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_sv.ts:        <translation>Du kan underteckna meddelanden/avtal med dina adresser för att bevisa att du kan ta emot litecoins som skickats till dem. Var försiktig så du inte undertecknar något oklart eller konstigt, eftersom phishing-angrepp kan försöka få dig att underteckna din identitet till dem. Underteckna endast väldetaljerade meddelanden som du godkänner.</translation>
./qt/locale/bitcoin_sv.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_sv.ts:        <translation>Litecoinadress att signera meddelandet med</translation>
./qt/locale/bitcoin_sv.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_sv.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_sv.ts:        <translation>Litecoinadressen som meddelandet signerades med</translation>
./qt/locale/bitcoin_sv.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_sv.ts:        <translation>Verifiera meddelandet för att vara säker på att den var signerad med den angivna Litecoin-adressen</translation>
./qt/locale/bitcoin_sv.ts:        <translation>Skicka Litecoins</translation>
./qt/locale/bitcoin_sv.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_sv.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_sv.ts:        <translation>Otillräckligt med litecoins</translation>
Binary file ./qt/locale/bitcoin_ko_KR.qm matches
Binary file ./qt/locale/bitcoin_es_CO.qm matches
Binary file ./qt/locale/bitcoin_fa_IR.qm matches
./qt/locale/bitcoin_ar.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ar.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ar.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ar.ts:        <translation>تحذير: إذا قمت بتشفير محفظتك وفقدت كلمة المرور الخاص بك, ستفقد كل عملات LITECOINS الخاصة بك.</translation>
./qt/locale/bitcoin_ar.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ar.ts:        <translation>ارسل عملات الى عنوان Litecoin</translation>
./qt/locale/bitcoin_ar.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ar.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ar.ts:        <translation>وقَع الرسائل بواسطة ال: Litecoin الخاص بك لإثبات امتلاكك لهم</translation>
./qt/locale/bitcoin_ar.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ar.ts:        <translation>تحقق من الرسائل للتأكد من أنَها وُقعت برسائل Litecoin محدَدة</translation>
./qt/locale/bitcoin_ar.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ar.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ar.ts:        <translation>فتح URI : Litecoin أو طلب دفع</translation>
./qt/locale/bitcoin_ar.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ar.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ar.ts:        <translation>خطأ فادح حدث . لا يمكن اتمام Litecoin بامان سيتم الخروج</translation>
./qt/locale/bitcoin_ar.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ar.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ar.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ar.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_et_EE.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_et_EE.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_et_EE.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_et_EE.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_ca.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Aquestes són les vostres adreces de Litecoin per enviar els pagaments. Sempre reviseu l'import i l'adreça del destinatari abans de transferir monedes.</translation>
./qt/locale/bitcoin_ca.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Aquestes són les vostres adreces Litecoin per rebre pagaments. Es recomana utilitzar una adreça nova de recepció per a cada transacció.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ca.ts:        <translation>Avís: si encripteu el vostre moneder i perdeu la contrasenya, &lt;b&gt;PERDREU TOTS ELS VOSTRES LITECOINS&lt;/b&gt;!</translation>
./qt/locale/bitcoin_ca.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Ara es tancarà el %1 per finalitzar el procés d'encriptació. Recordeu que encriptar el vostre moneder no garanteix que les vostres litecoins no puguin ser robades per programari maliciós que infecti l'ordinador.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ca.ts:        <translation>Envia monedes a una adreça Litecoin</translation>
./qt/locale/bitcoin_ca.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ca.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ca.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ca.ts:        <translation>Signa el missatges amb la seva adreça de Litecoin per provar que les poseeixes</translation>
./qt/locale/bitcoin_ca.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ca.ts:        <translation>Verifiqueu els missatges per assegurar-vos que han estat signats amb una adreça Litecoin específica.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ca.ts:        <translation>Sol·licita pagaments (genera codis QR i litecoin: URI)</translation>
./qt/locale/bitcoin_ca.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ca.ts:        <translation>Obre una litecoin: sol·licitud d'URI o pagament</translation>
./qt/locale/bitcoin_ca.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_ca.ts:        <translation><numerusform>%n connexió activa a la xarxa Litecoin</numerusform><numerusform>%n connexions actives a la xarxa Litecoin</numerusform></translation>
./qt/locale/bitcoin_ca.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ca.ts:        <translation>Mostra el missatge d'ajuda del %1 per obtenir una llista amb les possibles opcions de línia d'ordres de Litecoin</translation>
./qt/locale/bitcoin_ca.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ca.ts:        <translation>S'ha produït un error fatal. Litecoin no pot continuar amb seguretat i finalitzarà.</translation>
./qt/locale/bitcoin_ca.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ca.ts:        <translation>L'adreça introduïda «%1» no és una adreça de Litecoin vàlida.</translation>
./qt/locale/bitcoin_ca.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_ca.ts:        <translation>%1 baixarà i emmagatzemarà una còpia de la cadena de blocs de Litecoin. Com a mínim %2GB de dades s'emmagatzemaran en aquest directori, i augmentarà al llarg del temps. El moneder també s'emmagatzemarà en aquest directori.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Obre el port del client de Litecoin al router de forma automàtica. Això només funciona quan el router implementa UPnP i l'opció està activada.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Connecta a la xarxa Litecoin a través d'un proxy SOCKS5.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Conectar a la red de Litecoin a través de un proxy SOCKS5 per als serveis ocults de Tor</translation>
./qt/locale/bitcoin_ca.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ca.ts:        <translation>La informació mostrada pot no estar al día. El teu moneder es sincronitza automàticament amb la xarxa Litecoin un cop s'ha establert connexió, però aquest proces no s'ha completat encara.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ca.ts:        <translation>No es pot iniciar litecoin: controlador click-to-pay</translation>
./qt/locale/bitcoin_ca.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ca.ts:        <translation>L'URI no pot ser analitzat! Això pot ser a causa d'una adreça de Litecoin no vàlida o per paràmetres URI amb mal format.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ca.ts:        <translation>Introduïu una adreça de Litecoin (p. ex. %1)</translation>
./qt/locale/bitcoin_ca.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Un missatge opcional que s'adjuntarà a la sol·licitud de pagament, que es mostrarà quan s'obri la sol·licitud. Nota: El missatge no s'enviarà amb el pagament per la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ca.ts:        <translation>No hi ha cap problema en pagar només la comissió mínima sempre que hi hagi menys volum de transacció que espai en els blocs. Però tingueu present que això pot acabar en una transacció que mai es confirmi una vegada hi hagi més demanda de transaccions de litecoins que la xarxa pugui processar.</translation>
./qt/locale/bitcoin_ca.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ca.ts:        <translation>Avís: adreça Litecoin no vàlida</translation>
./qt/locale/bitcoin_ca.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ca.ts:        <translation>L'adreça Litecoin on enviar el pagament</translation>
./qt/locale/bitcoin_ca.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ca.ts:        <translation>La comissió es deduirà de l'import que s'enviarà. El destinatari rebrà menys litecoins que les que introduïu al camp d'import. Si se seleccionen múltiples destinataris, la comissió es dividirà per igual.</translation>
./qt/locale/bitcoin_ca.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Un missatge que s'ha adjuntat al litecoin: URI que s'emmagatzemarà amb la transacció per a la vostra referència. Nota: el missatge no s'enviarà a través de la xarxa Litecoin.</translation>
./qt/locale/bitcoin_ca.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ca.ts:        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les litecoins que s'hi envien. Aneu amb compte no signar res que sigui vague o aleatori, perquè en alguns atacs de suplantació es pot provar que hi signeu la vostra identitat. Només signeu aquelles declaracions completament detallades en què hi esteu d'acord. </translation>
./qt/locale/bitcoin_ca.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ca.ts:        <translation>L'adreça Litecoin amb què signar el missatge</translation>
./qt/locale/bitcoin_ca.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ca.ts:        <translation>Signa el missatge per provar que ets propietari d'aquesta adreça Litecoin</translation>
./qt/locale/bitcoin_ca.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ca.ts:        <translation>L'adreça Litecoin amb què va ser signat el missatge</translation>
./qt/locale/bitcoin_ca.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_ca.ts:        <translation>Verificar el missatge per assegurar-se que ha estat signat amb una adreça Litecoin específica</translation>
./qt/locale/bitcoin_ca.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ca.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_es_ES.qm matches
./qt/locale/bitcoin_en_AU.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_en_AU.ts:        <translation>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronising with the litecoin network, as detailed below.</translation>
./qt/locale/bitcoin_en_AU.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_en_AU.ts:        <translation>The displayed information may be out of date. Your wallet automatically synchronises with the Litecoin network after a connection is established, but this process has not completed yet.</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>警告: 如果你將錢包加密後又忘記密碼，你就會&lt;b&gt;失去所有 Litecoin 了&lt;/b&gt;！</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>%1 現在要關閉來完成加密程序。請記得將錢包加密不能完全防止你的 Litecoins 經被入侵電腦的惡意程式偷取。</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>付款至一個 Litecoin 位址</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>要求付款 (產生QR碼 litecoin: URIs)</translation>
./qt/locale/bitcoin_zh_HK.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_zh_HK.ts:        <translation>輸入一個 Litecoin 位址 (例如 %1)</translation>
./qt/locale/bitcoin_es.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_es.ts:        <translation>Estas son sus direcciones Litecoin para enviar pagos. Verifique siempre la cantidad y la dirección de recepción antes de enviar litecoins.</translation>
./qt/locale/bitcoin_es.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_es.ts:        <translation>Estas son sus direcciones Litecoin para recibir pagos. Se recomienda utilizar una nueva dirección de recepción para cada transacción</translation>
./qt/locale/bitcoin_es.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_es.ts:        <translation>Advertencia: Si cifra su monedero y pierde su contraseña&lt;b&gt;¡PERDERÁ TODOS SUS LITECOINS!&lt;/b&gt;</translation>
./qt/locale/bitcoin_es.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_es.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es.ts:        <translation>Enviar litecoins a una dirección Litecoin</translation>
./qt/locale/bitcoin_es.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_es.ts:        <translation>Firmar mensajes con sus direcciones Litecoin para demostrar la propiedad</translation>
./qt/locale/bitcoin_es.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_es.ts:        <translation>Verificar mensajes comprobando que están firmados con direcciones Litecoin concretas</translation>
./qt/locale/bitcoin_es.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_es.ts:        <translation>Solicitar pagos (generando códigos QR e identificadores URI "litecoin:")</translation>
./qt/locale/bitcoin_es.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_es.ts:        <translation>Abrir un identificador URI "litecoin:" o una petición de pago</translation>
./qt/locale/bitcoin_es.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_es.ts:        <translation><numerusform>%n conexión activa hacia la red Litecoin</numerusform><numerusform>%n conexiones activas hacia la red Litecoin</numerusform></translation>
./qt/locale/bitcoin_es.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_es.ts:        <translation>Mostrar el mensaje de ayuda %1 para obtener una lista de los posibles comandos de linea de comandos de Litecoin</translation>
./qt/locale/bitcoin_es.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_es.ts:        <translation>Ha ocurrido un error fatal. Litecoin no puede seguir seguro y se cerrará.</translation>
./qt/locale/bitcoin_es.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_es.ts:        <translation>La dirección introducida "%1" no es una dirección Litecoin válida.</translation>
./qt/locale/bitcoin_es.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_es.ts:        <translation>%1 va a descargar y almacenar una copia de la cadena de bloques de Litecoin. Al menos %2GB de datos seran almacenados en este directorio, que ira creciendo con el tiempo. El monedero se guardara tambien en ese directorio. </translation>
./qt/locale/bitcoin_es.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_es.ts:        <translation>Las transacciones recientes aún no pueden ser visibles, y por lo tanto el saldo de su monedero podría ser incorrecto. Esta información será correcta cuando su monedero haya terminado de sincronizarse con la red de litecoin, como se detalla abajo.</translation>
./qt/locale/bitcoin_es.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_es.ts:        <translation>La red no aceptará el intentar gastar litecoins que están afectados por transacciones aún no mostradas.</translation>
./qt/locale/bitcoin_es.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_es.ts:        <translation>Abrir automáticamente el puerto del cliente Litecoin en el router. Esta opción solo funciona si el router admite UPnP y está activado.</translation>
./qt/locale/bitcoin_es.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_es.ts:        <translation>Conectarse a la red Litecoin a través de un proxy SOCKS5.</translation>
./qt/locale/bitcoin_es.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_es.ts:        <translation>Conectar a la red Litecoin mediante un proxy SOCKS5 por separado para los servicios ocultos de Tor.</translation>
./qt/locale/bitcoin_es.ts:        <translation>Elegir la subdivisión predeterminada para mostrar cantidades en la interfaz y cuando se envían litecoins.</translation>
./qt/locale/bitcoin_es.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_es.ts:        <translation>La información mostrada puede estar desactualizada. Su monedero se sincroniza automáticamente con la red Litecoin después de que se haya establecido una conexión, pero este proceso aún no se ha completado.</translation>
./qt/locale/bitcoin_es.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_es.ts:        <translation>No se puede iniciar litecoin: encargado click-para-pagar</translation>
./qt/locale/bitcoin_es.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_es.ts:        <translation>URI no puede ser analizado! Esto puede ser causado por una dirección Litecoin inválida o parametros URI mal formados.</translation>
./qt/locale/bitcoin_es.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_es.ts:        <translation>Introducir una dirección Litecoin (p. ej. %1)</translation>
./qt/locale/bitcoin_es.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_es.ts:        <translation>Un mensaje opcional para adjuntar a la solicitud de pago, que se muestra cuando se abre la solicitud. Nota: El mensaje no se enviará con el pago por la red Litecoin.</translation>
./qt/locale/bitcoin_es.ts:        <translation>Enviar litecoins</translation>
./qt/locale/bitcoin_es.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_es.ts:        <translation>Pagar solamente la comisión mínima es correcto, siempre y cuando haya menos volumen de transacciones que el espacio en los bloques. Pero tenga en cuenta que esto puede terminar en una transacción nunca confirmada, una vez que haya más demanda para transacciones Litecoin que la red pueda procesar.</translation>
./qt/locale/bitcoin_es.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_es.ts:        <translation>Alerta: dirección Litecoin inválida</translation>
./qt/locale/bitcoin_es.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_es.ts:        <translation>Dirección Litecoin a la que enviar el pago</translation>
./qt/locale/bitcoin_es.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_es.ts:        <translation>La comisión será deducida de la cantidad que sea mandada. El destinatario recibirá menos litecoins de la cantidad introducida en el campo Cantidad. Si hay varios destinatarios, la comisión será distribuida a partes iguales.</translation>
./qt/locale/bitcoin_es.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_es.ts:        <translation>Un mensaje que se adjuntó a la litecoin: URL que será almacenada con la transacción para su referencia. Nota: Este mensaje no se envía a través de la red Litecoin.</translation>
./qt/locale/bitcoin_es.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_es.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_es.ts:        <translation>Dirección Litecoin con la que firmar el mensaje</translation>
./qt/locale/bitcoin_es.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_es.ts:        <translation>Firmar el mensaje para demostrar que se posee esta dirección Litecoin</translation>
./qt/locale/bitcoin_es.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_es.ts:        <translation>La dirección Litecoin con la que se firmó el mensaje</translation>
./qt/locale/bitcoin_es.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_es.ts:        <translation>Verificar el mensaje para comprobar que fue firmado con la dirección Litecoin indicada</translation>
./qt/locale/bitcoin_es.ts:        <translation>Los litecoins generados deben madurar %1 bloques antes de que puedan gastarse. Cuando generó este bloque, se transmitió a la red para que se añadiera a la cadena de bloques. Si no consigue entrar en la cadena, su estado cambiará a "no aceptado" y ya no se podrá gastar. Esto puede ocurrir ocasionalmente si otro nodo genera un bloque a pocos segundos del suyo.</translation>
./qt/locale/bitcoin_es.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_hr.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_hr.ts:        <translation>Ovo su vaše Litecoin adrese za slanje novca. Uvijek provjerite iznos i adresu primatelja prije slanja novca.</translation>
./qt/locale/bitcoin_hr.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_hr.ts:        <translation>Slanje novca na litecoin adresu</translation>
./qt/locale/bitcoin_hr.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_hr.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_hr.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_hr.ts:        <translation>Poruku potpišemo s litecoin adresom, kako bi dokazali vlasništvo nad tom adresom</translation>
./qt/locale/bitcoin_hr.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_hr.ts:        <translation>Provjeravanje poruke, kao dokaz, da je potpisana navedenom litecoin adresom</translation>
./qt/locale/bitcoin_hr.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_hr.ts:        <translation>Zatraži uplatu (stvara QR kod i litecoin: URI adresu)</translation>
./qt/locale/bitcoin_hr.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_hr.ts:        <translation>Otvori litecoin: URI adresu ili zahtjev za uplatu</translation>
./qt/locale/bitcoin_hr.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_hr.ts:        <translation><numerusform>%n aktivna veza na Litecoin mrežu</numerusform><numerusform>%n aktivnih veza na Litecoin mrežu</numerusform><numerusform>%n aktivnih veza na Litecoin mrežu</numerusform></translation>
./qt/locale/bitcoin_hr.ts:        <translation>Oznaka litecoin adrese</translation>
./qt/locale/bitcoin_hr.ts:        <translation>Litecoin adresa. Izmjene adrese su moguće samo za adrese za slanje.</translation>
./qt/locale/bitcoin_hr.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_hr.ts:        <translation>Automatski otvori port Litecoin klijenta na ruteru. To radi samo ako ruter podržava UPnP i ako je omogućen.</translation>
./qt/locale/bitcoin_hr.ts:        <translation>Izaberite željeni najmanji dio litecoina koji će biti prikazan u sučelju i koji će se koristiti za plaćanje.</translation>
./qt/locale/bitcoin_hr.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_hr.ts:        <translation>Prikazani podatci mogu biti zastarjeli. Vaš novčanik se automatski sinkronizira s Litecoin mrežom kada je veza uspostavljena, ali taj proces još nije završen.</translation>
./qt/locale/bitcoin_hr.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_hr.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_es_MX.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_es_MX.ts:        <translation>Enviar monedas a una dirección Litecoin</translation>
./qt/locale/bitcoin_es_MX.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_es_MX.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_es_MX.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_es_MX.ts:        <translation>Mensaje opcional para agregar a la solicitud de pago, el cual será mostrado cuando la solicitud este abierta. Nota: El mensaje no se manda con el pago a travéz de la red de Litecoin.</translation>
./qt/locale/bitcoin_es_MX.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_es_MX.ts:        <translation>nucleo Litecoin</translation>
./qt/locale/bitcoin_ta.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ta.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_ta.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_ta.ts:        <translation>Litecoin மையம்</translation>
./qt/locale/bitcoin_mn.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_mn.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_lt.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_lt.ts:        <translation>Siųsti monetas Litecoin adresui</translation>
./qt/locale/bitcoin_lt.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_lt.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_lt.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_lt.ts:        <translation>Automatiškai atidaryti Litecoin kliento prievadą maršrutizatoriuje. Tai veikia tik tada, kai jūsų maršrutizatorius palaiko UPnP ir ji įjungta.</translation>
./qt/locale/bitcoin_lt.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_lt.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_lt.ts:        <translation>Patikrinkite žinutę, jog įsitikintumėte, kad ją pasirašė nurodytas Litecoin adresas</translation>
./qt/locale/bitcoin_lt.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_lt.ts:        <translation>Litecoin branduolys</translation>
Binary file ./qt/locale/bitcoin_fi.qm matches
Binary file ./qt/locale/bitcoin_cs.qm matches
Binary file ./qt/locale/bitcoin_ar.qm matches
./qt/locale/bitcoin_tr.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bunlar ödemeleri göndermek için kullanacağınız Litecoin adreslerinizdir. Litecoin yollamadan önce tutarı ve alıcının alım adresini her zaman kontrol ediniz.</translation>
./qt/locale/bitcoin_tr.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bunlar ödemeleri almak için kullanacağınız Litecoin adreslerinizdir. Her işlem için yeni bir alım adresi kullanmanız tavsiye edilir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_tr.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Şifreleme işleminin bitirilmesi için %1 kapatılacak. Her ne kadar cüzdanınızı şifreleseniz de şifrelemenin litecoinlerinizi bilgisayarınıza bulaşan zararlılardan tam olarak koruyamayacağını unutmayın.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bir litecoin adresine litecoin gönder</translation>
./qt/locale/bitcoin_tr.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_tr.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_tr.ts:        <translation>İletileri adreslerin size ait olduğunu ispatlamak için Litecoin adresleri ile imzala</translation>
./qt/locale/bitcoin_tr.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_tr.ts:        <translation>Belirtilen Litecoin adresleri ile imzalandıklarından emin olmak için iletileri kontrol et</translation>
./qt/locale/bitcoin_tr.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_tr.ts:        <translation>Ödeme talep et (QR kodu ve litecoin URI'si oluşturur)</translation>
./qt/locale/bitcoin_tr.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bir litecoin: bağlantısı ya da ödeme talebi aç</translation>
./qt/locale/bitcoin_tr.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_tr.ts:        <translation><numerusform>Litecoin şebekesine %n faal bağlantı</numerusform><numerusform>Litecoin ağına %n etkin bağlantı var</numerusform></translation>
./qt/locale/bitcoin_tr.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_tr.ts:        <translation>Olası Litecoin komut satırı seçeneklerinin listesini görmek için %1 yardım mesajını göster</translation>
./qt/locale/bitcoin_tr.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Ölümcül bir hata oluştu. Litecoin yazılımı artık güvenli bir şekilde çalışmaya devam edemediği için kapatılacaktır.</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin Seçimi</translation>
./qt/locale/bitcoin_tr.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Girilen "%1" adresi geçerli bir Litecoin adresi değildir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_tr.ts:        <translation>%1, Litecoin blok zincirinin bir kopyasını indirecek ve saklayacaktır. Bu klasörde en az %2 GB veri saklanacak ve bu zamanla artacaktır. Cüzdan da bu klasörde saklanacaktır.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Son işlemler henüz görünmeyebilir ve bu nedenle cüzdanınızın bakiyesi yanlış olabilir. Bu bilgiler, aşağıda detaylandırıldığı gibi, cüzdanınız litecoin ağı ile senkronizasyonunu tamamladığında doğru olacaktır. </translation>
./qt/locale/bitcoin_tr.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Henüz görüntülenmeyen işlemlerden etkilenen litecoinleri harcama girişiminde bulunmak ağ tarafından kabul edilmeyecektir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Yönlendiricide Litecoin istemci portlarını otomatik olarak açar. Bu, sadece yönlendiricinizin UPnP desteği bulunuyorsa ve etkinse çalışabilir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin ağına bir SOCKS5 vekil sunucusu aracılığıyla bağlan.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin ağına gizli Tor servisleri için ayrı bir SOCKS5 vekil sunucusu aracılığıyla bağlan.</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin gönderildiğinde arayüzde gösterilecek varsayılan alt birimi seçiniz.</translation>
./qt/locale/bitcoin_tr.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Görüntülenen bilgiler güncel olmayabilir. Bağlantı kurulduğunda cüzdanınız otomatik olarak Litecoin ağı ile senkronize olur ancak bu işlem henüz tamamlanmamıştır.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin başlatılamadı: tıkla-ve-öde yöneticisi</translation>
./qt/locale/bitcoin_tr.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_tr.ts:        <translation>URI ayrıştırılamıyor! Bunun nedeni geçersiz bir Litecoin adresi veya hatalı biçimlendirilmiş URI değişkenleri olabilir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bir Litecoin adresi giriniz (mesela %1)</translation>
./qt/locale/bitcoin_tr.ts:        <translation>UYARI: Litecoin dolandırıcılarının çok fazla etkin olduğu zamanlarda, dolandırıcılar bazı kullanıcılara buraya komutlar yazmalarını söylerek onların cüzdanlarındaki litecoinleri çalmışlardır. Bir komutun sonuçlarını tam olarak anlamadan bu konsolu kullanmayın.</translation>
./qt/locale/bitcoin_tr.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Talep açıldığında gösterilecek, isteğinize dayalı, ödeme talebi ile ilişkilendirilecek bir ileti. Not: Bu ileti ödeme ile birlikte Litecoin ağı üzerinden gönderilmeyecektir.</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin yolla</translation>
./qt/locale/bitcoin_tr.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Gerekli olan en az ücreti ödemek, bloklarda boşluktan daha az işlem hacmi olduğu sürece bir sorun çıkarmaz. Fakat ağın işleyecebileceğinden daha çok litecoin işlemi talebi olduğunda bunun asla doğrulanmayan bir işlem olabileceğinin farkında olmalısınız.</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin gönderimini onaylayın</translation>
./qt/locale/bitcoin_tr.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_tr.ts:        <translation>Uyarı: geçersiz Litecoin adresi</translation>
./qt/locale/bitcoin_tr.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_tr.ts:        <translation>Ödemenin yollanacağı Litecoin adresi</translation>
./qt/locale/bitcoin_tr.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Ücret yollanan tutardan alınacaktır. Alıcı tutar alanına girdiğinizden daha az litecoin alacaktır. Eğer birden çok alıcı seçiliyse ücret eşit olarak bölünecektir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Referans için litecoin: URI'siyle iliştirilmiş işlemle birlikte depolanacak bir ileti. Not: Bu mesaj Litecoin ağı üzerinden gönderilmeyecektir.</translation>
./qt/locale/bitcoin_tr.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_tr.ts:        <translation>Adreslerinize yollanan litecoinleri alabileceğiniz ispatlamak için adreslerinizle iletiler/anlaşmalar imzalayabilirsiniz. Oltalama saldırılarının kimliğinizi imzanızla elde etmeyi deneyebilecekleri için belirsiz ya da rastgele hiçbir şey imzalamamaya dikkat ediniz. Sadece ayrıntılı açıklaması olan ve tümüne katıldığınız ifadeleri imzalayınız.</translation>
./qt/locale/bitcoin_tr.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_tr.ts:        <translation>İletinin imzalanmasında kullanılacak Litecoin adresi</translation>
./qt/locale/bitcoin_tr.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_tr.ts:        <translation>Bu Litecoin adresinin sizin olduğunu ispatlamak için iletiyi imzalayın</translation>
./qt/locale/bitcoin_tr.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_tr.ts:        <translation>İletinin imzalanmasında kullanılan Litecoin adresi</translation>
./qt/locale/bitcoin_tr.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_tr.ts:        <translation>Belirtilen Litecoin adresi ile imzalandığını doğrulamak için iletiyi kontrol et</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Oluşturulan litecoin'lerin harcanabilmelerinden önce %1 blok beklemeleri gerekmektedir. Bu blok, oluşturduğunuzda, blok zincirine eklenmesi için ağda yayınlandı. Zincire eklenmesi başarısız olursa, durumu "kabul edilmedi" olarak değiştirilecek ve harcanamayacaktır. Bu, bazen başka bir düğüm sizden birkaç saniye önce ya da sonra blok oluşturursa meydana gelebilir.</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoini Gönder</translation>
./qt/locale/bitcoin_tr.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_tr.ts:        <translation>Litecoin Çekirdeği</translation>
./qt/locale/bitcoin_tr.ts:        <translation>Bu kararlı sürümden önceki bir deneme sürümüdür. - risklerini bilerek kullanma sorumluluğu sizdedir - litecoin oluşturmak ya da ticari uygulamalar için kullanmayınız</translation>
./qt/locale/bitcoin_tr.ts:        <translation>İşlemdeki litecoin tutarı ücreti ödemek için çok düşük</translation>
Binary file ./qt/locale/bitcoin_nb_NO.qm matches
Binary file ./qt/locale/bitcoin_es_419.qm matches
Binary file ./qt/locale/bitcoin_ru.qm matches
./qt/locale/bitcoin_ja_JP.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your litecoins from being stolen by malware infecting your computer.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_ja_JP.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_it.ts:        <translation>Scegli l'indirizzo a cui inviare litecoin</translation>
./qt/locale/bitcoin_it.ts:        <translation>Scegli l'indirizzo con cui ricevere litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_it.ts:        <translation>Questo è un elenco di indirizzi Litecoin a cui puoi inviare pagamenti. Controlla sempre l'importo e l'indirizzo del beneficiario prima di inviare litecoin.</translation>
./qt/locale/bitcoin_it.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_it.ts:        <translation>Questi sono i tuoi indirizzi Litecoin che puoi usare per ricevere pagamenti. Si raccomanda di generare un nuovo indirizzo per ogni transazione.</translation>
./qt/locale/bitcoin_it.ts:        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR LITECOINS&lt;/b&gt;!</source>
./qt/locale/bitcoin_it.ts:        <translation>Attenzione: perdendo la passphrase di un portamonete cifrato &lt;b&gt;TUTTI I PROPRI LITECOIN ANDRANNO PERSI&lt;/b&gt;!</translation>
./qt/locale/bitcoin_it.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_it.ts:        <translation>Invia fondi ad un indirizzo Litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_it.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_it.ts:        <translation>Firma messaggi con i tuoi indirizzi Litecoin per dimostrarne il possesso</translation>
./qt/locale/bitcoin_it.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_it.ts:        <translation>Verifica che i messaggi siano stati firmati con gli indirizzi Litecoin specificati</translation>
./qt/locale/bitcoin_it.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_it.ts:        <translation>Richiedi pagamenti (genera codici QR e litecoin: URI)</translation>
./qt/locale/bitcoin_it.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_it.ts:        <translation>Apri un litecoin: URI o una richiesta di pagamento</translation>
./qt/locale/bitcoin_it.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_it.ts:        <translation><numerusform>%n connessione attiva alla rete Litecoin</numerusform><numerusform>%n connessioni alla rete Litecoin attive</numerusform></translation>
./qt/locale/bitcoin_it.ts:        <source>Show the %1 help message to get a list with possible Litecoin command-line options</source>
./qt/locale/bitcoin_it.ts:        <translation>Mostra il messaggio di aiuto di %1 per ottenere una lista di opzioni di comando per Litecoin </translation>
./qt/locale/bitcoin_it.ts:        <source>A fatal error occurred. Litecoin can no longer continue safely and will quit.</source>
./qt/locale/bitcoin_it.ts:        <translation>Si è verificato un errore critico. Litecoin non può più funzionare in maniera sicura e verrà chiuso.</translation>
./qt/locale/bitcoin_it.ts:        <source>The entered address "%1" is not a valid Litecoin address.</source>
./qt/locale/bitcoin_it.ts:        <translation>L'indirizzo inserito "%1" non è un indirizzo litecoin valido.</translation>
./qt/locale/bitcoin_it.ts:        <source>%1 will download and store a copy of the Litecoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>
./qt/locale/bitcoin_it.ts:        <translation>%1 scaricherà e salverà una copia della Blockchain di Litecoin. Saranno salvati almeno %2GB di dati in questo percorso e continueranno ad aumentare col tempo. Anche il portafoglio verrà salvato in questo percorso.</translation>
./qt/locale/bitcoin_it.ts:        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</source>
./qt/locale/bitcoin_it.ts:        <translation>Transazioni recenti potrebbero non essere visibili ancora, perciò il saldo del tuo portafoglio potrebbe non essere corretto. Questa informazione risulterà corretta quando il tuo portafoglio avrà terminato la sincronizzazione con la rete litecoin, come indicato in dettaglio più sotto.</translation>
./qt/locale/bitcoin_it.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_it.ts:        <translation>Apri automaticamente la porta del client Litecoin sul router. Il protocollo UPnP deve essere supportato da parte del router ed attivo.</translation>
./qt/locale/bitcoin_it.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_it.ts:        <translation>Connessione alla rete Litecoin attraverso un proxy SOCKS5.</translation>
./qt/locale/bitcoin_it.ts:        <source>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</source>
./qt/locale/bitcoin_it.ts:        <translation>Connette alla rete Litecoin attraverso un proxy SOCKS5 separato per Tor.</translation>
./qt/locale/bitcoin_it.ts:        <translation>Scegli l'unità di suddivisione predefinita da utilizzare per l'interfaccia e per l'invio di litecoin.</translation>
./qt/locale/bitcoin_it.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_it.ts:        <translation>Le informazioni visualizzate potrebbero non essere aggiornate. Il portamonete si sincronizza automaticamente con la rete Litecoin una volta stabilita una connessione, ma questo processo non è ancora stato completato.</translation>
./qt/locale/bitcoin_it.ts:        <source>Cannot start litecoin: click-to-pay handler</source>
./qt/locale/bitcoin_it.ts:        <translation>Impossibile avviare litecoin: gestore click-to-pay</translation>
./qt/locale/bitcoin_it.ts:        <source>URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters.</source>
./qt/locale/bitcoin_it.ts:        <translation>Impossibile interpretare l'URI! I parametri dell'URI o l'indirizzo Litecoin potrebbero non essere corretti.</translation>
./qt/locale/bitcoin_it.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_it.ts:        <translation>Inserisci un indirizzo Litecoin (ad es. %1)</translation>
./qt/locale/bitcoin_it.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_it.ts:        <translation>Un messaggio opzionale da allegare e mostrare all'apertura della richiesta di pagamento. Nota: Il messaggio non sarà inviato con il pagamento sulla rete Litecoin.</translation>
./qt/locale/bitcoin_it.ts:        <translation>Invia Litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_it.ts:        <source>Warning: Invalid Litecoin address</source>
./qt/locale/bitcoin_it.ts:        <translation>Attenzione: Indirizzo Litecoin non valido</translation>
./qt/locale/bitcoin_it.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_it.ts:        <translation>L'indirizzo Litecoin a cui vuoi inviare il pagamento</translation>
./qt/locale/bitcoin_it.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_it.ts:        <translation>La commissione sarà sottratta dall'importo che si sta inviando. Il beneficiario riceverà un totale di litecoin inferiore al valore digitato. Nel caso in cui siano stati selezionati più beneficiari la commissione sarà suddivisa in parti uguali.</translation>
./qt/locale/bitcoin_it.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_it.ts:        <translation>Messaggio incluso nel litecoin URI e che sarà memorizzato con la transazione per vostro riferimento. Nota: Questo messaggio non sarà inviato attraverso la rete Litecoin.</translation>
./qt/locale/bitcoin_it.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_it.ts:        <translation>È possibile firmare messaggi/accordi con i propri indirizzi in modo da dimostrare di poter ricevere litecoin attraverso di essi. Si consiglia di prestare attenzione a non firmare dichiarazioni vaghe o casuali, attacchi di phishing potrebbero cercare di indurre ad apporre la firma su di esse. Si raccomanda di firmare esclusivamente dichiarazioni completamente dettagliate e delle quali si condivide in pieno il contenuto.</translation>
./qt/locale/bitcoin_it.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_it.ts:        <translation>L'indirizzo Litecoin da utilizzare per firmare il messaggio</translation>
./qt/locale/bitcoin_it.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_it.ts:        <translation>Firma un messaggio per dimostrare di possedere questo indirizzo Litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_it.ts:        <translation>L'indirizzo Litecoin con cui è stato contrassegnato il messaggio</translation>
./qt/locale/bitcoin_it.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_it.ts:        <translation>L'indirizzo litecoin inserito non è associato a nessuna chiave.</translation>
./qt/locale/bitcoin_it.ts:        <translation>Invia Litecoin</translation>
./qt/locale/bitcoin_it.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_it.ts:        <translation>Litecoin Core</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Izvedite plačilo na naslov Litecoin</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Litecoin</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Sign messages with your Litecoin addresses to prove you own them</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Podpišite poljubno sporočilo z enim svojih naslovov Litecoin, da prejemniku sporočila dokažete, da je ta naslov v vaši lasti.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Verify messages to ensure they were signed with specified Litecoin addresses</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Preverite, če je bilo prejeto sporočilo podpisano z določenim naslovom Litecoin</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Request payments (generates QR codes and litecoin: URIs)</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Zahtevajte plačilo (ustvarite zahtevek s kodo QR in URI tipa litecoin:)</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Open a litecoin: URI or payment request</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Izvedite plačilo iz zahtevka v datoteki ali iz URI tipa litecoin:</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>%n active connection(s) to Litecoin network</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation><numerusform>%n aktivna povezava v omrežje Litecoin</numerusform><numerusform>%n aktivni povezavi v omrežje Litecoin</numerusform><numerusform>%n aktivne povezave v omrežje Litecoin</numerusform><numerusform>%n aktivnih povezav v omrežje Litecoin</numerusform></translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
./qt/locale/bitcoin_sl_SI.ts:        <source>Connect to the Litecoin network through a SOCKS5 proxy.</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Poveži se v omrežje Litecoin preko posredniškega strežnika SOCKS5.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Prikazani podatki so morda zastareli. Program ob vzpostavitvi povezave samodejno sinhronizira denarnico z omrežjem Litecoin, a trenutno ta proces še ni zaključen.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Enter a Litecoin address (e.g. %1)</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Vnesite naslov Litecoin (npr. %1):</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Neobvezno sporočilo kot priponka zahtevku za plačilo, ki bo prikazano, ko bo zahtevek odprt. Opomba: Opravljeno plačilo.prek omrežja Litecoin tega sporočila ne bo vsebovalo.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</source>
./qt/locale/bitcoin_sl_SI.ts:        <source>The Litecoin address to send the payment to</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Naslov Litecoin, na katerega bo plačilo poslano</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>
./qt/locale/bitcoin_sl_SI.ts:        <source>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Sporočilo, ki ste ga pripeli na URI tipa litecoin:. Shranjeno bo skupaj s podatki o transakciji. Opomba: Sporočilo ne bo poslano preko omrežja Litecoin.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
./qt/locale/bitcoin_sl_SI.ts:        <source>The Litecoin address to sign the message with</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Naslov Litecoin, s katerim podpisujete sporočilo</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Sign the message to prove you own this Litecoin address</source>
./qt/locale/bitcoin_sl_SI.ts:        <source>The Litecoin address the message was signed with</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Naslov Litecoin, s katerim je bilo sporočilo podpisano</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Verify the message to ensure it was signed with the specified Litecoin address</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Preverite, ali je bilo sporočilo v resnici podpisano z navedenim naslovom Litecoin.</translation>
./qt/locale/bitcoin_sl_SI.ts:        <source>Litecoin Core</source>
./qt/locale/bitcoin_sl_SI.ts:        <translation>Litecoin Core</translation>
Binary file ./qt/locale/bitcoin_sr@latin.qm matches
Binary file ./qt/locale/bitcoin_vi_VN.qm matches
./qt/locale/bitcoin_fa_IR.ts:        <source>These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
./qt/locale/bitcoin_fa_IR.ts:        <source>These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>
./qt/locale/bitcoin_fa_IR.ts:        <source>Send coins to a Litecoin address</source>
./qt/locale/bitcoin_fa_IR.ts:        <translation>ارسال کوین به آدرس litecoin</translation>
./qt/locale/bitcoin_fa_IR.ts:        <source>Litecoin</source>
./qt/locale/bitcoin_fa_IR.ts:        <translation>litecoin</translation>
./qt/locale/bitcoin_fa_IR.ts:        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</source>
./qt/locale/bitcoin_fa_IR.ts:        <translation>اطلاعات نمایش داده شده ممکن است روزآمد نباشد. wallet شما به صورت خودکار بعد از برقراری اتصال با شبکه litecoin به روز می شود اما این فرایند هنوز تکمیل نشده است.</translation>
Binary file ./qt/locale/bitcoin_es_VE.qm matches
Binary file ./qt/qt_libbitcoinqt_a-addressbookpage.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_walletframe.o matches
Binary file ./qt/qt_libbitcoinqt_a-platformstyle.o matches
./qt/paymentrequest.pb.cc:    "o\030\002 \001(\tB)\n\037org.litecoin.protocols.paymen"
Binary file ./qt/qt_libbitcoinqt_a-receivecoinsdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_addresstablemodel.o matches
./qt/bitcoin.qrc:        <file alias="litecoin_splash">res/icons/litecoin_splash.png</file>
Binary file ./qt/qt_libbitcoinqt_a-qrc_bitcoin.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-receiverequestdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o matches
Binary file ./qt/qt_libbitcoinqt_a-notificator.o matches
Binary file ./qt/qt_libbitcoinqt_a-networkstyle.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_openuridialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-openuridialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-signverifymessagedialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-sendcoinsdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o matches
Binary file ./qt/qt_libbitcoinqt_a-walletframe.o matches
Binary file ./qt/qt_libbitcoinqt_a-paymentrequestplus.o matches
Binary file ./qt/qt_libbitcoinqt_a-walletmodeltransaction.o matches
./qt/paymentserver.cpp:const QString BITCOIN_IPC_PREFIX("litecoin:");
./qt/paymentserver.cpp:const char* BIP71_MIMETYPE_PAYMENT = "application/litecoin-payment";
./qt/paymentserver.cpp:const char* BIP71_MIMETYPE_PAYMENTACK = "application/litecoin-paymentack";
./qt/paymentserver.cpp:const char* BIP71_MIMETYPE_PAYMENTREQUEST = "application/litecoin-paymentrequest";
./qt/paymentserver.cpp:    QString name("LitecoinQt");
./qt/paymentserver.cpp:                tr("Cannot start litecoin: click-to-pay handler"));
./qt/paymentserver.cpp:                    tr("URI cannot be parsed! This can be caused by an invalid Litecoin address or malformed URI parameters."),
Binary file ./qt/qt_libbitcoinqt_a-transactionfilterproxy.o matches
Binary file ./qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o matches
Binary file ./qt/qt_libbitcoinqt_a-rpcconsole.o matches
Binary file ./qt/qt_libbitcoinqt_a-peertablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_paymentserver.o matches
Binary file ./qt/qt_libbitcoinqt_a-transactiontablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_transactiondesc.o matches
./qt/utilitydialog.cpp:            "  litecoin-qt [" + tr("command-line options") + "]                     " + "\n";
Binary file ./qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o matches
Binary file ./qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o matches
./qt/qrc_bitcoin_locale.cpp:  // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fr.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_nb_NO.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_si.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_vi_VN.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_de_DE.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_bn.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sk.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_hi_IN.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ka.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_bs.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_419.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sq.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ms_MY.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sr.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_nl_NL.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sv.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_be_BY.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ca.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sl_SI.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_pt_BR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ta.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_gl.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_en_GB.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fa_IR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_et_EE.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_te.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_zh_CN.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ky.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_th.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_af_ZA.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_lv_LV.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_la.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_cs.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_zh_TW.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_tr.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_pl.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ku_IQ.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ko_KR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_cy.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_he_IL.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_he.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_zh_HK.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_CL.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_it_IT.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_da.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_pam.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_CO.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_de.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ro_RO.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_lt.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_hr.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_el_GR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_hu.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_pt_PT.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_uk.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ur_PK.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fr_FR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_th_TH.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ja_JP.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_sr@latin.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_id.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_mn.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_en_US.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_DO.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_zh.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fr_CA.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_id_ID.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_mk_MK.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_uz@Cyrl.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_my.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_el.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_tr_TR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_vi.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_it.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_af.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_eu_ES.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_en.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_eo.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_UY.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ca@valencia.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_kk_KZ.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_nb.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_et.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ne.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ja.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ar.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ro.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_bg_BG.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_VE.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_MX.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_nl.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ru.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fa.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_ES.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_en_AU.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ca_ES.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_fi.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_ru_RU.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_es_AR.qm
./qt/qrc_bitcoin_locale.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/locale/bitcoin_bg.qm
Binary file ./qt/qt_libbitcoinqt_a-moc_optionsdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-optionsmodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-walletview.o matches
./qt/forms/ui_sendcoinsdialog.h:        checkBoxMinimumFee->setToolTip(QApplication::translate("SendCoinsDialog", "Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.", 0));
./qt/forms/ui_sendcoinsdialog.h:        labelMinFeeWarning->setToolTip(QApplication::translate("SendCoinsDialog", "Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.", 0));
./qt/forms/sendcoinsentry.ui:         <string>The Litecoin address to send the payment to</string>
./qt/forms/sendcoinsentry.ui:         <string>The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>
./qt/forms/sendcoinsentry.ui:       <string>A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.</string>
./qt/forms/modaloverlay.ui:                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.</string>
./qt/forms/modaloverlay.ui:                <string>Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.</string>
./qt/forms/overviewpage.ui:               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</string>
./qt/forms/overviewpage.ui:               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.</string>
./qt/forms/ui_receivecoinsdialog.h:        label_3->setToolTip(QApplication::translate("ReceiveCoinsDialog", "An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.", 0));
./qt/forms/ui_receivecoinsdialog.h:        reqMessage->setToolTip(QApplication::translate("ReceiveCoinsDialog", "An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.", 0));
./qt/forms/ui_modaloverlay.h:        infoText->setText(QApplication::translate("ModalOverlay", "Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the litecoin network, as detailed below.", 0));
./qt/forms/ui_modaloverlay.h:        infoTextStrong->setText(QApplication::translate("ModalOverlay", "Attempting to spend litecoins that are affected by not-yet-displayed transactions will not be accepted by the network.", 0));
./qt/forms/receivecoinsdialog.ui:           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</string>
./qt/forms/receivecoinsdialog.ui:           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Litecoin network.</string>
./qt/forms/ui_signverifymessagedialog.h:        infoLabel_SM->setText(QApplication::translate("SignVerifyMessageDialog", "You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.", 0));
./qt/forms/ui_signverifymessagedialog.h:        addressIn_SM->setToolTip(QApplication::translate("SignVerifyMessageDialog", "The Litecoin address to sign the message with", 0));
./qt/forms/ui_signverifymessagedialog.h:        signMessageButton_SM->setToolTip(QApplication::translate("SignVerifyMessageDialog", "Sign the message to prove you own this Litecoin address", 0));
./qt/forms/ui_signverifymessagedialog.h:        addressIn_VM->setToolTip(QApplication::translate("SignVerifyMessageDialog", "The Litecoin address the message was signed with", 0));
./qt/forms/ui_signverifymessagedialog.h:        verifyMessageButton_VM->setToolTip(QApplication::translate("SignVerifyMessageDialog", "Verify the message to ensure it was signed with the specified Litecoin address", 0));
./qt/forms/ui_overviewpage.h:        labelWalletStatus->setToolTip(QApplication::translate("OverviewPage", "The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.", 0));
./qt/forms/ui_overviewpage.h:        labelTransactionsStatus->setToolTip(QApplication::translate("OverviewPage", "The displayed information may be out of date. Your wallet automatically synchronizes with the Litecoin network after a connection is established, but this process has not completed yet.", 0));
./qt/forms/ui_optionsdialog.h:        mapPortUpnp->setToolTip(QApplication::translate("OptionsDialog", "Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.", 0));
./qt/forms/ui_optionsdialog.h:        connectSocks->setToolTip(QApplication::translate("OptionsDialog", "Connect to the Litecoin network through a SOCKS5 proxy.", 0));
./qt/forms/ui_optionsdialog.h:        connectSocksTor->setToolTip(QApplication::translate("OptionsDialog", "Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.", 0));
./qt/forms/sendcoinsdialog.ui:                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</string>
./qt/forms/sendcoinsdialog.ui:                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</string>
./qt/forms/signverifymessagedialog.ui:          <string>You can sign messages/agreements with your addresses to prove you can receive litecoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>
./qt/forms/signverifymessagedialog.ui:            <string>The Litecoin address to sign the message with</string>
./qt/forms/signverifymessagedialog.ui:            <string>Sign the message to prove you own this Litecoin address</string>
./qt/forms/signverifymessagedialog.ui:            <string>The Litecoin address the message was signed with</string>
./qt/forms/signverifymessagedialog.ui:            <string>Verify the message to ensure it was signed with the specified Litecoin address</string>
./qt/forms/ui_sendcoinsentry.h:        payTo->setToolTip(QApplication::translate("SendCoinsEntry", "The Litecoin address to send the payment to", 0));
./qt/forms/ui_sendcoinsentry.h:        checkboxSubtractFeeFromAmount->setToolTip(QApplication::translate("SendCoinsEntry", "The fee will be deducted from the amount being sent. The recipient will receive less litecoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.", 0));
./qt/forms/ui_sendcoinsentry.h:        messageTextLabel->setToolTip(QApplication::translate("SendCoinsEntry", "A message that was attached to the litecoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Litecoin network.", 0));
./qt/forms/optionsdialog.ui:          <string>Automatically open the Litecoin client port on the router. This only works when your router supports UPnP and it is enabled.</string>
./qt/forms/optionsdialog.ui:          <string>Connect to the Litecoin network through a SOCKS5 proxy.</string>
./qt/forms/optionsdialog.ui:          <string>Connect to the Litecoin network through a separate SOCKS5 proxy for Tor hidden services.</string>
Binary file ./qt/qt_libbitcoinqt_a-moc_addressbookpage.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_callback.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_splashscreen.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_guiutil.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_modaloverlay.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_clientmodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-paymentserver.o matches
Binary file ./qt/qt_libbitcoinqt_a-trafficgraphwidget.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_coincontroldialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-bitcoingui.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_peertablemodel.o matches
Binary file ./qt/qt_libbitcoinqt_a-modaloverlay.o matches
./qt/guiconstants.h:#define QAPP_ORG_NAME "Litecoin"
./qt/guiconstants.h:#define QAPP_ORG_DOMAIN "litecoin.org"
./qt/guiconstants.h:#define QAPP_APP_NAME_DEFAULT "Litecoin-Qt"
./qt/guiconstants.h:#define QAPP_APP_NAME_TESTNET "Litecoin-Qt-testnet"
./qt/qrc_bitcoin.cpp:  // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-015.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-000.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-016.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-001.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-017.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-002.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-018.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-003.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-019.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-004.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-005.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-006.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-007.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-008.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-009.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-030.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-031.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-032.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-033.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-034.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-035.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-020.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-021.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-022.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-023.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-024.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-025.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-010.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-026.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-011.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-027.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-012.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-028.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-013.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-029.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/movies/spinner-014.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/quit.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/info.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/editcopy.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/add.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/open.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/fontbigger.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/transaction2.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/tx_inout.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/eye.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/configure.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/transaction_abandoned.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/receive.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/network_disabled.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/eye_plus.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/history.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/tx_output.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/key.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/connect0.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/connect1.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/connect2.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/bitcoin.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/connect3.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/connect4.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/remove.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/litecoin_splash.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/debugwindow.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/hd_enabled.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/edit.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/verify.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/transaction0.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/tx_input.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/clock1.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/lock_open.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/clock2.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/overview.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/clock3.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/tx_mined.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/clock4.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/address-book.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/clock5.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/eye_minus.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/fontsmaller.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/hd_disabled.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/synced.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/chevron.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/about.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/warning.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/transaction_conflicted.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/export.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/filesave.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/send.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/about_qt.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/editpaste.png
./qt/qrc_bitcoin.cpp:    // /home/sanurhea/litecoin/litecoin/src/qt/res/icons/lock_closed.png
./qt/qrc_bitcoin.cpp:    // litecoin_splash
./qt/qrc_bitcoin.cpp:  // :/icons/litecoin_splash
Binary file ./qt/libbitcoinqt.a matches
./qt/bitcoinunits.cpp:    case BTC: return QString("Litecoins");
Binary file ./qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o matches
Binary file ./qt/qt_libbitcoinqt_a-bitcoinunits.o matches
Binary file ./qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o matches
Binary file ./qt/qt_litecoin_qt-bitcoin.o matches
Binary file ./libbitcoin_server.a matches
Binary file ./libbitcoin_util_a-chainparamsbase.o matches
Binary file ./libbitcoinconsensus_la-uint256.o matches
Binary file ./wallet/libbitcoin_wallet_a-rpcdump.o matches
Binary file ./wallet/libbitcoin_wallet_a-feebumper.o matches
./wallet/test/.deps/test_test_litecoin-crypto_tests.Po:wallet/test/test_test_litecoin-crypto_tests.o: \
./wallet/test/.deps/qt_test_test_litecoin_qt-wallet_test_fixture.Po:wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o: \
./wallet/test/.deps/test_test_litecoin-accounting_tests.Po:wallet/test/test_test_litecoin-accounting_tests.o: \
./wallet/test/.deps/test_test_litecoin-wallet_tests.Po:wallet/test/test_test_litecoin-wallet_tests.o: \
./wallet/test/.deps/test_test_litecoin-wallet_test_fixture.Po:wallet/test/test_test_litecoin-wallet_test_fixture.o: \
Binary file ./wallet/test/qt_test_test_litecoin_qt-wallet_test_fixture.o matches
Binary file ./wallet/test/test_test_litecoin-crypto_tests.o matches
Binary file ./wallet/test/test_test_litecoin-wallet_tests.o matches
Binary file ./wallet/test/test_test_litecoin-wallet_test_fixture.o matches
Binary file ./wallet/test/test_test_litecoin-accounting_tests.o matches
Binary file ./wallet/libbitcoin_wallet_a-walletdb.o matches
./wallet/rpcdump.cpp:            "importprivkey \"litecoinprivkey\" ( \"label\" ) ( rescan )\n"
./wallet/rpcdump.cpp:            "1. \"litecoinprivkey\"   (string, required) The private key (see dumpprivkey)\n"
./wallet/rpcdump.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address or script");
./wallet/rpcdump.cpp:            "1. \"address\"   (string, required) The litecoin address for the private key\n"
./wallet/rpcdump.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcdump.cpp:            "1. \"filename\"    (string, required) The filename with path (either absolute or relative to litecoind)\n"
./wallet/rpcdump.cpp:    file << strprintf("# Wallet dump created by Litecoin %s\n", CLIENT_BUILD);
Binary file ./wallet/libbitcoin_wallet_a-db.o matches
Binary file ./wallet/libbitcoin_wallet_a-wallet.o matches
Binary file ./wallet/libbitcoin_wallet_a-rpcwallet.o matches
Binary file ./wallet/libbitcoin_wallet_a-crypter.o matches
./wallet/rpcwallet.cpp:            "\nReturns a new Litecoin address for receiving payments.\n"
./wallet/rpcwallet.cpp:            "\"address\"    (string) The new litecoin address\n"
./wallet/rpcwallet.cpp:            "\nDEPRECATED. Returns the current Litecoin address for receiving payments to this account.\n"
./wallet/rpcwallet.cpp:            "\"address\"          (string) The account litecoin address\n"
./wallet/rpcwallet.cpp:            "\nReturns a new Litecoin address, for receiving change.\n"
./wallet/rpcwallet.cpp:            "1. \"address\"         (string, required) The litecoin address to be associated with an account.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "1. \"address\"         (string, required) The litecoin address for account lookup.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "  \"address\"         (string) a litecoin address associated with the given account\n"
./wallet/rpcwallet.cpp:            "1. \"address\"            (string, required) The litecoin address to send to.\n"
./wallet/rpcwallet.cpp:            "                             The recipient will receive less litecoins than you enter in the amount field.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "      \"address\",            (string) The litecoin address\n"
./wallet/rpcwallet.cpp:            "1. \"address\"         (string, required) The litecoin address to use for the private key.\n"
./wallet/rpcwallet.cpp:            "1. \"address\"         (string, required) The litecoin address for transactions.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a litecoin address."
./wallet/rpcwallet.cpp:            "2. \"toaddress\"         (string, required) The litecoin address to send funds to.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "      \"address\":amount   (numeric or string) The litecoin address is the key, the numeric amount (can be string) in " + CURRENCY_UNIT + " is the value\n"
./wallet/rpcwallet.cpp:            "                           Those recipients will receive less litecoins than you enter in their corresponding amount field.\n"
./wallet/rpcwallet.cpp:            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string("Invalid Litecoin address: ")+name_);
./wallet/rpcwallet.cpp:            "Each key is a Litecoin address or hex-encoded public key.\n"
./wallet/rpcwallet.cpp:            "2. \"keys\"         (string, required) A json array of litecoin addresses or hex-encoded public keys\n"
./wallet/rpcwallet.cpp:            "       \"address\"  (string) litecoin address or hex-encoded public key\n"
./wallet/rpcwallet.cpp:            "\"address\"         (string) A litecoin address associated with the keys.\n"
./wallet/rpcwallet.cpp:        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid Litecoin address");
./wallet/rpcwallet.cpp:            "    \"address\":\"address\",    (string) The litecoin address of the transaction. Not present for \n"
./wallet/rpcwallet.cpp:            "    \"address\":\"address\",    (string) The litecoin address of the transaction. Not present for move transactions (category = move).\n"
./wallet/rpcwallet.cpp:            "      \"address\" : \"address\",          (string) The litecoin address involved in the transaction\n"
./wallet/rpcwallet.cpp:            "This is needed prior to performing transactions related to private keys such as sending litecoins\n"
./wallet/rpcwallet.cpp:            "\nNow set the passphrase to use the wallet, such as for signing or sending litecoin\n"
./wallet/rpcwallet.cpp:    return "wallet encrypted; Litecoin server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.";
./wallet/rpcwallet.cpp:            "A locked transaction output will not be chosen by automatic coin selection, when spending litecoins.\n"
./wallet/rpcwallet.cpp:            "3. \"addresses\"      (string) A json array of litecoin addresses to filter\n"
./wallet/rpcwallet.cpp:            "      \"address\"     (string) litecoin address\n"
./wallet/rpcwallet.cpp:            "    \"address\" : \"address\",    (string) the litecoin address\n"
./wallet/rpcwallet.cpp:                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string("Invalid Litecoin address: ")+input.get_str());
./wallet/rpcwallet.cpp:                            "     \"changeAddress\"          (string, optional, default pool address) The litecoin address to receive the change\n"
./wallet/rpcwallet.cpp:                            "                              Those recipients will receive less litecoins than you enter in their corresponding amount field.\n"
./wallet/rpcwallet.cpp:                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "changeAddress must be a valid litecoin address");
Binary file ./libbitcoin_common_a-core_read.o matches
Binary file ./libbitcoin_server_a-addrman.o matches
Binary file ./libbitcoin_common_a-compressor.o matches
./Makefile.qt.include:bin_PROGRAMS += qt/litecoin-qt
./Makefile.qt.include:  qt/res/icons/litecoin_splash.png \
./Makefile.qt.include:$(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) : | $(QT_MOC)
./Makefile.qt.include:qt_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
./Makefile.qt.include:qt_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
./Makefile.qt.include:qt_litecoin_qt_SOURCES = qt/bitcoin.cpp
./Makefile.qt.include:  qt_litecoin_qt_SOURCES += $(BITCOIN_MM)
./Makefile.qt.include:  qt_litecoin_qt_SOURCES += $(BITCOIN_RC)
./Makefile.qt.include:qt_litecoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)
./Makefile.qt.include:qt_litecoin_qt_LDADD += $(LIBBITCOIN_WALLET)
./Makefile.qt.include:qt_litecoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
./Makefile.qt.include:qt_litecoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
./Makefile.qt.include:qt_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
./Makefile.qt.include:qt_litecoin_qt_LIBTOOLFLAGS = --tag CXX
./Makefile.qt.include:	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) qt/litecoin-qt$(EXEEXT) $(LIBBITCOINQT)
./Makefile.qt.include:bitcoin_qt : qt/litecoin-qt$(EXEEXT)
Binary file ./libbitcoin_consensus_a-hash.o matches
Binary file ./rpc/libbitcoin_server_a-misc.o matches
Binary file ./rpc/libbitcoin_util_a-protocol.o matches
Binary file ./rpc/libbitcoin_server_a-rawtransaction.o matches
./rpc/rawtransaction.cpp:            "           \"address\"        (string) litecoin address\n"
./rpc/rawtransaction.cpp:            "      \"address\": x.xxx,    (numeric or string, required) The key is the litecoin address, the numeric value (can be string) is the " + CURRENCY_UNIT + " amount\n"
./rpc/rawtransaction.cpp:                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string("Invalid Litecoin address: ")+name_);
./rpc/rawtransaction.cpp:            "           \"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\"   (string) litecoin address\n"
./rpc/rawtransaction.cpp:            "     \"address\"     (string) litecoin address\n"
./rpc/net.cpp:            "         \"address\" : \"192.168.0.201:9333\",  (string) The litecoin server IP and port we're connected to\n"
Binary file ./rpc/libbitcoin_server_a-server.o matches
./rpc/server.cpp:            "\nStop Litecoin server.");
./rpc/server.cpp:    return "Litecoin server stopping";
./rpc/server.cpp:    return "> litecoin-cli " + methodname + " " + args + "\n";
./rpc/blockchain.cpp:            "     \"addresses\" : [          (array of string) array of litecoin addresses\n"
./rpc/blockchain.cpp:            "        \"address\"     (string) litecoin address\n"
./rpc/misc.cpp:            "  \"balance\": xxxxxxx,         (numeric) the total litecoin balance of the wallet\n"
./rpc/misc.cpp:            "\nReturn information about the given litecoin address.\n"
./rpc/misc.cpp:            "1. \"address\"     (string, required) The litecoin address to validate\n"
./rpc/misc.cpp:            "  \"address\" : \"address\", (string) The litecoin address validated\n"
./rpc/misc.cpp:            "2. \"keys\"       (string, required) A json array of keys which are litecoin addresses or hex-encoded public keys\n"
./rpc/misc.cpp:            "       \"key\"    (string) litecoin address or hex-encoded public key\n"
./rpc/misc.cpp:            "1. \"address\"         (string, required) The litecoin address to use for the signature.\n"
./rpc/misc.cpp:            "litecoin-cli and the GUI. There is no server-side difference."
Binary file ./rpc/libbitcoin_cli_a-client.o matches
Binary file ./rpc/libbitcoin_server_a-mining.o matches
Binary file ./rpc/libbitcoin_server_a-net.o matches
./rpc/mining.cpp:            "2. address      (string, required) The address to send the newly generated litecoin to.\n"
./rpc/mining.cpp:        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, "Litecoin is not connected!");
./rpc/mining.cpp:        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, "Litecoin is downloading blocks...");
Binary file ./rpc/libbitcoin_server_a-blockchain.o matches
Binary file ./litecoind-bitcoind.o matches
./bitcoind.cpp:                  "  litecoind [options]                     " + strprintf(_("Start %s Daemon"), _(PACKAGE_NAME)) + "\n";
./bitcoind.cpp:                fprintf(stderr, "Error: Command line contains unexpected token '%s', see litecoind -h for a list of options.\n", argv[i]);
./bitcoind.cpp:            fprintf(stdout, "Litecoin server starting\n");
Binary file ./libbitcoin_server_a-txdb.o matches
Binary file ./libbitcoin_server_a-ui_interface.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-sha1.o matches
Binary file ./crypto/libbitcoinconsensus_la-chacha20.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-scrypt.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-chacha20.o matches
Binary file ./crypto/libbitcoinconsensus_la-sha1.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-aes.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-sha512.o matches
Binary file ./crypto/libbitcoinconsensus_la-scrypt-sse2.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-sha256.o matches
Binary file ./crypto/libbitcoinconsensus_la-hmac_sha512.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o matches
Binary file ./crypto/libbitcoinconsensus_la-scrypt.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-chacha20.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-sha1.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-scrypt-sse2.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-hmac_sha512.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-scrypt.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-ripemd160.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-sha256.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-aes.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-sha512.o matches
Binary file ./crypto/.libs/libbitcoinconsensus_la-hmac_sha256.o matches
Binary file ./crypto/libbitcoin_crypto.a matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-scrypt-sse2.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-ripemd160.o matches
Binary file ./crypto/libbitcoinconsensus_la-ripemd160.o matches
Binary file ./crypto/libbitcoinconsensus_la-sha256.o matches
Binary file ./crypto/libbitcoinconsensus_la-aes.o matches
Binary file ./crypto/libbitcoinconsensus_la-sha512.o matches
Binary file ./crypto/libbitcoinconsensus_la-hmac_sha256.o matches
Binary file ./crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o matches
./net.cpp:        std::string strDesc = "Litecoin " + FormatFullVersion();
Binary file ./libbitcoin_consensus_a-arith_uint256.o matches
Binary file ./libbitcoinconsensus_la-arith_uint256.o matches
Binary file ./libbitcoin_consensus_a-utilstrencodings.o matches
./txdb.cpp:                // Litecoin: Disable PoW Sanity check while loading block index from disk.
./txdb.cpp:                // requires recomputing every PoW hash during every Litecoin startup.
Binary file ./libbitcoin_server_a-merkleblock.o matches
Binary file ./libbitcoin_wallet.a matches
Binary file ./libbitcoin_common_a-core_write.o matches
Binary file ./secp256k1/gen_context matches
./secp256k1/Makefile:ACLOCAL = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing aclocal-1.15
./secp256k1/Makefile:AUTOCONF = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoconf
./secp256k1/Makefile:AUTOHEADER = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoheader
./secp256k1/Makefile:AUTOMAKE = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing automake-1.15
./secp256k1/Makefile:MAKEINFO = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing makeinfo
./secp256k1/Makefile:abs_builddir = /home/sanurhea/litecoin/litecoin/src/secp256k1
./secp256k1/Makefile:abs_srcdir = /home/sanurhea/litecoin/litecoin/src/secp256k1
./secp256k1/Makefile:abs_top_builddir = /home/sanurhea/litecoin/litecoin/src/secp256k1
./secp256k1/Makefile:abs_top_srcdir = /home/sanurhea/litecoin/litecoin/src/secp256k1
./secp256k1/Makefile:install_sh = ${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/install-sh
./secp256k1/config.log:ACLOCAL='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing aclocal-1.15'
./secp256k1/config.log:AUTOCONF='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoconf'
./secp256k1/config.log:AUTOHEADER='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoheader'
./secp256k1/config.log:AUTOMAKE='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing automake-1.15'
./secp256k1/config.log:MAKEINFO='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing makeinfo'
./secp256k1/config.log:install_sh='${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/install-sh'
Binary file ./secp256k1/src/libsecp256k1_la-secp256k1.o matches
Binary file ./secp256k1/.libs/libsecp256k1.a matches
Binary file ./secp256k1/gen_context.o matches
./secp256k1/config.status:ac_pwd='/home/sanurhea/litecoin/litecoin/src/secp256k1'
./secp256k1/config.status:S["install_sh"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/install-sh"
./secp256k1/config.status:S["MAKEINFO"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing makeinfo"
./secp256k1/config.status:S["AUTOHEADER"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoheader"
./secp256k1/config.status:S["AUTOMAKE"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing automake-1.15"
./secp256k1/config.status:S["AUTOCONF"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing autoconf"
./secp256k1/config.status:S["ACLOCAL"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/secp256k1/build-aux/missing aclocal-1.15"
Binary file ./.libs/libbitcoinconsensus.so.0.0.0 matches
Binary file ./.libs/libbitcoinconsensus_la-hash.o matches
Binary file ./.libs/libbitcoinconsensus_la-uint256.o matches
Binary file ./.libs/libbitcoinconsensus_la-arith_uint256.o matches
Binary file ./.libs/libbitcoinconsensus_la-utilstrencodings.o matches
Binary file ./.libs/libbitcoinconsensus.a matches
Binary file ./.libs/libbitcoinconsensus_la-pubkey.o matches
Binary file ./litecoind matches
Binary file ./libbitcoin_server_a-chain.o matches
Binary file ./litecoin-tx matches
./bitcoind-res.rc:            VALUE "CompanyName",        "Litecoin"
./bitcoind-res.rc:            VALUE "FileDescription",    "litecoind (Litecoin node with a JSON-RPC server)"
./bitcoind-res.rc:            VALUE "InternalName",       "litecoind"
./bitcoind-res.rc:            VALUE "OriginalFilename",   "litecoind.exe"
./bitcoind-res.rc:            VALUE "ProductName",        "litecoind"
Binary file ./libbitcoin_server_a-checkpoints.o matches
Binary file ./libbitcoin_util_a-fs.o matches
Binary file ./libbitcoinconsensus_la-utilstrencodings.o matches
Binary file ./libbitcoin_server_a-httprpc.o matches
Binary file ./libbitcoin_server_a-validation.o matches
./validation.cpp:# error "Litecoin cannot be compiled without assertions."
./validation.cpp:const std::string strMessageMagic = "Litecoin Signed Message:\n";
./config/bitcoin-config.h:#define COPYRIGHT_HOLDERS_FINAL "The Litecoin Core developers"
./config/bitcoin-config.h:#define COPYRIGHT_HOLDERS_SUBSTITUTION "Litecoin Core"
./config/bitcoin-config.h:#define PACKAGE_BUGREPORT "https://github.com/litecoin-project/litecoin/issues"
./config/bitcoin-config.h:#define PACKAGE_NAME "Litecoin Core"
./config/bitcoin-config.h:#define PACKAGE_STRING "Litecoin Core 0.15.0"
./config/bitcoin-config.h:#define PACKAGE_TARNAME "litecoin"
./config/bitcoin-config.h:#define PACKAGE_URL "https://litecoin.org/"
./init.cpp:    const std::string URL_SOURCE_CODE = "<https://github.com/litecoin-project/litecoin>";
./init.cpp:    const std::string URL_WEBSITE = "<https://litecoin.org>";
./init.cpp:    LogPrintf("Litecoin version %s\n", FormatFullVersion());
Binary file ./libbitcoin_util_a-sync.o matches
Binary file ./policy/libbitcoin_server_a-rbf.o matches
Binary file ./policy/libbitcoin_server_a-policy.o matches
Binary file ./policy/libbitcoin_common_a-feerate.o matches
Binary file ./policy/libbitcoin_server_a-fees.o matches
./chainparams.cpp:        vSeeds.emplace_back("seed-a.litecoin.loshan.co.uk", true);
./chainparams.cpp:        vSeeds.emplace_back("dnsseed.litecointools.com", true);
./chainparams.cpp:        vSeeds.emplace_back("dnsseed.litecoinpool.org", true);
./chainparams.cpp:        vSeeds.emplace_back("testnet-seed.litecointools.com", true);
./chainparams.cpp:        vSeeds.emplace_back("seed-b.litecoin.loshan.co.uk", true);
./Makefile.bench.include:bin_PROGRAMS += bench/bench_litecoin
./Makefile.bench.include:BENCH_BINARY = bench/bench_litecoin$(EXEEXT)
./Makefile.bench.include:bench_bench_litecoin_SOURCES = \
./Makefile.bench.include:nodist_bench_bench_litecoin_SOURCES = $(GENERATED_TEST_FILES)
./Makefile.bench.include:bench_bench_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
./Makefile.bench.include:bench_bench_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
./Makefile.bench.include:bench_bench_litecoin_LDADD = \
./Makefile.bench.include:bench_bench_litecoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
./Makefile.bench.include:bench_bench_litecoin_SOURCES += bench/coin_selection.cpp
./Makefile.bench.include:bench_bench_litecoin_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)
./Makefile.bench.include:bench_bench_litecoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
./Makefile.bench.include:bench_bench_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
Binary file ./leveldb/libleveldb_sse42.a matches
Binary file ./leveldb/libleveldb.a matches
Binary file ./leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-table.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-iterator.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-merger.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-two_level_iterator.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-table_builder.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-block.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-filter_block.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-block_builder.o matches
Binary file ./leveldb/table/leveldb_libleveldb_a-format.o matches
Binary file ./leveldb/libmemenv.a matches
Binary file ./leveldb/util/leveldb_libleveldb_a-cache.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-filter_policy.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-hash.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-arena.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-options.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-env_posix.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-status.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-crc32c.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-comparator.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-coding.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-histogram.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-env.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-logging.o matches
Binary file ./leveldb/util/leveldb_libleveldb_a-bloom.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-version_edit.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-table_cache.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-version_set.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-c.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-builder.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-log_writer.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-db_impl.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-repair.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-db_iter.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-filename.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-memtable.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-write_batch.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-dbformat.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-dumpfile.o matches
Binary file ./leveldb/db/leveldb_libleveldb_a-log_reader.o matches
Binary file ./leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o matches
Binary file ./leveldb/port/leveldb_libleveldb_a-port_posix.o matches
Binary file ./libbitcoin_server_a-versionbits.o matches
Binary file ./libbitcoin_server_a-pow.o matches
./chainparamsseeds.h: * List of fixed seed nodes for the litecoin network
Binary file ./libbitcoin_util_a-threadinterrupt.o matches
Binary file ./libbitcoin_common_a-keystore.o matches
./univalue/Makefile:ACLOCAL = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing aclocal-1.15
./univalue/Makefile:AUTOCONF = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoconf
./univalue/Makefile:AUTOHEADER = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoheader
./univalue/Makefile:AUTOMAKE = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing automake-1.15
./univalue/Makefile:MAKEINFO = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing makeinfo
./univalue/Makefile:abs_builddir = /home/sanurhea/litecoin/litecoin/src/univalue
./univalue/Makefile:abs_srcdir = /home/sanurhea/litecoin/litecoin/src/univalue
./univalue/Makefile:abs_top_builddir = /home/sanurhea/litecoin/litecoin/src/univalue
./univalue/Makefile:abs_top_srcdir = /home/sanurhea/litecoin/litecoin/src/univalue
./univalue/Makefile:install_sh = ${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/install-sh
./univalue/config.log:ACLOCAL='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing aclocal-1.15'
./univalue/config.log:AUTOCONF='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoconf'
./univalue/config.log:AUTOHEADER='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoheader'
./univalue/config.log:AUTOMAKE='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing automake-1.15'
./univalue/config.log:MAKEINFO='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing makeinfo'
./univalue/config.log:install_sh='${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/install-sh'
Binary file ./univalue/.libs/libunivalue.a matches
./univalue/config.status:ac_pwd='/home/sanurhea/litecoin/litecoin/src/univalue'
./univalue/config.status:S["install_sh"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/install-sh"
./univalue/config.status:S["MAKEINFO"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing makeinfo"
./univalue/config.status:S["AUTOHEADER"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoheader"
./univalue/config.status:S["AUTOMAKE"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing automake-1.15"
./univalue/config.status:S["AUTOCONF"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing autoconf"
./univalue/config.status:S["ACLOCAL"]="${SHELL} /home/sanurhea/litecoin/litecoin/src/univalue/build-aux/missing aclocal-1.15"
Binary file ./univalue/lib/libunivalue_la-univalue_read.o matches
Binary file ./univalue/lib/libunivalue_la-univalue_write.o matches
Binary file ./univalue/lib/libunivalue_la-univalue.o matches
Binary file ./libbitcoin_util_a-utilmoneystr.o matches
Binary file ./libbitcoin_consensus_a-uint256.o matches
./net_processing.cpp:# error "Litecoin cannot be compiled without assertions."
Binary file ./libbitcoin_common_a-coins.o matches
Binary file ./libbitcoin_server_a-noui.o matches
Binary file ./libbitcoin_util.a matches
Binary file ./libbitcoin_server_a-net.o matches
Binary file ./libbitcoin_server_a-txmempool.o matches
Binary file ./libbitcoin_server_a-validationinterface.o matches
Binary file ./libbitcoin_server_a-rest.o matches
Binary file ./consensus/.libs/libbitcoinconsensus_la-merkle.o matches
Binary file ./consensus/libbitcoinconsensus_la-merkle.o matches
Binary file ./consensus/libbitcoin_server_a-tx_verify.o matches
Binary file ./consensus/libbitcoin_consensus_a-merkle.o matches
Binary file ./libbitcoinconsensus_la-pubkey.o matches
Binary file ./libbitcoin_common_a-chainparams.o matches
Binary file ./support/libbitcoin_util_a-cleanse.o matches
Binary file ./support/libbitcoin_util_a-lockedpool.o matches
Binary file ./libbitcoin_common_a-netaddress.o matches
./bitcoin-cli-res.rc:            VALUE "CompanyName",        "Litecoin"
./bitcoin-cli-res.rc:            VALUE "FileDescription",    "litecoin-cli (JSON-RPC client for " PACKAGE_NAME ")"
./bitcoin-cli-res.rc:            VALUE "InternalName",       "litecoin-cli"
./bitcoin-cli-res.rc:            VALUE "OriginalFilename",   "litecoin-cli.exe"
./bitcoin-cli-res.rc:            VALUE "ProductName",        "litecoin-cli"
Binary file ./libbitcoin_consensus_a-pubkey.o matches
./pow.cpp:    // Litecoin: This fixes an issue where a 51% attack can change difficulty at will.
./pow.cpp:    // Litecoin: intermediate uint256 can overflow by 1 bit
